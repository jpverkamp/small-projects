import base64
import json
import sys

data = json.loads(base64.b64decode('[{"body": "The official Bingo thread can be found [**here**](https://www.reddit.com/r/Fantasy/comments/mhz2tt/official_rfantasy_2021_book_bingo_challenge/).\n\nAll non-recommendation comments go [**here**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1oy4b?utm_source=share&amp;utm_medium=web2x&amp;context=3).\n\nPlease post your recommendations under the appropriate top-level comments below! Feel free to scroll through the thread or use the links in this navigation matrix to jump directly to the square you want to find or give recommendations for!\n\n|[Short Stories](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1oyx9?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[Set in Asia](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1ozca?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[Fantasy A-to-Z Guide](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1ozy0?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[Found Family](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p0hq?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[1st Person POV](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p0zl?utm_source=share&amp;utm_medium=web2x&amp;context=3)|\n|:-|:-|:-|:-|:-|\n|[**Book Club or Readalong**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p1pv?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**New to You Author**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p22x?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Gothic Fantasy**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p2rf?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Backlist Book**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p3fd?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Revenge-seeking Character**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p3ui?utm_source=share&amp;utm_medium=web2x&amp;context=3)|\n|[**Mystery Plot**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p4ai?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Comfort Read**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p5zl?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Published in 2021**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p6ip?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Cat Squasher**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p6vt?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**SFF Related Nonfiction**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p78l?utm_source=share&amp;utm_medium=web2x&amp;context=3)|\n|[**Latinx or Latin American Author**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p7yy?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Self-published**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p8bg?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Forest Setting**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p8pd?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Genre Mashup**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p920?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Chapter Titles**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1p9g1?utm_source=share&amp;utm_medium=web2x&amp;context=3)|\n|[**\\_\\_\\_\\_\\_ of \\_\\_\\_\\_\\_**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1pa0a?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**First Contact**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1pace?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Trans or NB Character**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1paps?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Debut Author**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1pb35?utm_source=share&amp;utm_medium=web2x&amp;context=3)|[**Witches**](https://www.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/gt1pbd6?utm_source=share&amp;utm_medium=web2x&amp;context=3)|\n\n**EDIT:** We are also compiling a list of series with every square they count for (it's now become too long for one link so here's [Part 1](https://airtable.com/shryzlphU8THkjau8/tbloR7Xh43wwcvhPG) and [Part 2](https://airtable.com/shr2YW1pAIkL7aj3f/tblM8kAG750a5J48e)). It's a work in progress but hopefully it will help out.\n\n**EDIT 2:** If you're an author on the sub, feel free to rec your books for squares they fit. This is the one time outside of the Sunday Self-Promo threads where this is okay. To clarify: you can say if you have a book that fits for a square but please don't write a full ad for it. Shorter is sweeter.", "nsfw": false, "id": "mhz3k7", "gilded": 0, "permalink": "/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/", "stickied": false, "author": "kjmichaels", "url": "https://old.reddit.com/r/Fantasy/comments/mhz3k7/the_2021_rfantasy_bingo_recommendations_list/", "title": "The 2021 r/Fantasy Bingo Recommendations List", "created": 1617294674.0, "commentcount": 1474, "score": 279}, [{"body": "**Questions, Complaints, Whines, General Commentary, Shitposting**", "created": 1617294691.0, "author": "kjmichaels", "score": 1, "replies": [{"body": "The link to Airtable above is broken. Has it been made private or just deleted?", "created": 1621339877.0, "author": "burnaccount2017", "score": 1, "replies": [{"body": "It apparently got too big to maintain as one list and is now split into two parts. I've edited the original post with the new links.", "created": 1621341594.0, "author": "kjmichaels", "score": 2, "replies": [{"body": "Many thanks for the quick response! The Airtable was very helpful for me to choose my next read", "created": 1621344857.0, "author": "burnaccount2017", "score": 1, "replies": [], "commentid": "gykf5l3"}], "commentid": "gyk8ppc"}], "commentid": "gyk5oqo"}, {"body": "Question: I just read the Wolf in the Whale and I believe it is neither NB or trans, but rather gender queer. My gut is this counts because I think the Bingo team was trying to capture the spirit of anything other than cis-gender binary. What do you think?", "created": 1618228492.0, "author": "thepurpleplaneteer", "score": 3, "replies": [{"body": "That's a really good question. Wolf in the Whale is the tightest of edge cases because it's very easy to read Omat as one of those three things but the author herself is adamant that that's not what she intended even though she fully understands why people see Omat as trans. It is definitely in the spirit of the square and the only way to find out that it doesn't count is to read interviews with the author which might be a bridge too far so we might count it. I'd say we'd probably count it but it's also early enough in bingo that it might be worth looking up another book just to be safe.", "created": 1618237381.0, "author": "kjmichaels", "score": 1, "replies": [{"body": "Got it, yeah I was thinking of using it for revenge so definitely have others on my tbr that will count for that square. I was going to put it on my reads in the monthly post. &gt;!Omat says something like \u201cI am man, I am woman, I am both, I am neither\u201d so I never thought of Omat as trans or non-binary, but rather because of Omat\u2019s gender fluidity thought gender queer to describe how Omat identifies if a modern label were to be placed. I was even wondering if Omat as identify as two-spirits but don\u2019t think Omat would pick that either as it doesn\u2019t always apply.!&lt;", "created": 1618251627.0, "author": "thepurpleplaneteer", "score": 1, "replies": [], "commentid": "gua5p9z"}], "commentid": "gu99i45"}], "commentid": "gu8tojr"}, {"body": "does anyone know if *the sorcerer of the wildeeps* or *empress of forever* count for trans/nonbinary square?", "created": 1617333511.0, "author": "honeybearbee9", "score": 2, "replies": [{"body": "From my memory, Sorcerer of the Wildeeps does not. Haven't read Empress of Forever yet so someone else will have to answer that.", "created": 1617334261.0, "author": "thequeensownfool", "score": 4, "replies": [{"body": "okay! thank you very much :D", "created": 1617334409.0, "author": "honeybearbee9", "score": 2, "replies": [], "commentid": "gt3uxe1"}], "commentid": "gt3upan"}], "commentid": "gt3tj0r"}, {"body": "I was going to work today, but I guess I'm breaking out my Goodreads history to start my annual esoteric recommendations for bingo.\n\nI'll go walk the dogs and then I guess it's Bingo time.\n\n\\*cracks knuckles\\*", "created": 1617295577.0, "author": "KristaDBall", "score": 38, "replies": [{"body": "I've suddenly forgotten all the books I ever read", "created": 1617296351.0, "author": "Dianthaa", "score": 32, "replies": [{"body": "Someone could ask me \"know any anthologies about different versions of the Battle of Gettysburg?\" And I would completely forget that I read Alternate Gettysburgs two weeks ago", "created": 1617303758.0, "author": "threecatparty", "score": 15, "replies": [], "commentid": "gt28yx5"}, {"body": "I honestly can't remember now if I've ever read a book ever in the history of ever a book with witches in it... \\*shifty eyes\\*", "created": 1617315117.0, "author": "KristaDBall", "score": 8, "replies": [], "commentid": "gt2x0v7"}], "commentid": "gt1snle"}, {"body": "No working allowed on The Day of the Squares! :P", "created": 1617300723.0, "author": "Pseutri", "score": 12, "replies": [], "commentid": "gt22iwn"}, {"body": "My children think they will be fed tonight. April Fool\u2019s on them!", "created": 1617304336.0, "author": "Moonlitgrey", "score": 12, "replies": [], "commentid": "gt2a7ul"}], "commentid": "gt1qwwe"}, {"body": "Okay I have one more question that I've had for awhile but forgot about.\n\nWhen we're talking about debut novels, does it count if the author has previously released a short story collection? The Debut Author category says a debut novel or novella, but for 2021 release Hard Mode does a debut novel count even if the author has previously published a novella? Does 2021 HM *have* to be a novel? What if it is a debut novella or short story collection?", "created": 1617306628.0, "author": "mollyec", "score": 3, "replies": [{"body": "&gt; When we're talking about debut novels, does it count if the author has previously released a short story collection?\n\nCollections don't count towards \"debut novel/novella\" status, so Yoon Ha Lee's 2013 collection **Conservation of Shadows** does not negate the fact that **Ninefox Gambit** is his debut novel.\n\n&gt; The Debut Author category says a debut novel or novella, but for 2021 release Hard Mode does a debut novel count even if the author has previously published a novella?\n\nTreat the squares independently of each other. The **Published in 2021** Hard Mode specifically says debut novel, so if they've written novellas previously, that's OK.\n\n&gt; Does 2021 HM have to be a novel? What if it is a debut novella or short story collection?\n\nYes, the hard mode specifies novel, not novella or collection.", "created": 1617307441.0, "author": "FarragutCircle", "score": 8, "replies": [{"body": "Sweet thank you!", "created": 1617307826.0, "author": "mollyec", "score": 3, "replies": [], "commentid": "gt2hrh9"}], "commentid": "gt2gyc5"}], "commentid": "gt2f768"}, {"body": "For Back Catalog, if an author has multiple (sub?) series within a given larger world would earlier, completed series count for back catalog?\n\nFor instance, Mercedes Lackey is still publishing Valdemar books, but has many completed \"series\" within that universe.  Would all of Valdemar be off limits under the \"part of a currently running series\" limitations or would the older Valdemar books be fair game?", "created": 1617315784.0, "author": "CJGibson", "score": 3, "replies": [{"body": "Unfortunately, Valdemar would be ineligible under our rules as written so I believe the same would be true of other long running series with completed sub-series.", "created": 1617316896.0, "author": "kjmichaels", "score": 6, "replies": [], "commentid": "gt30h8w"}], "commentid": "gt2ybyr"}, {"body": "For the title square (\\_\\_\\_\\_ of \\_\\_\\_\\_): as written, there are a lot (ed: OK, maybe not quite as many as I thought) of titles that qualify that I'm not sure fit the spirit of the square (e.g. *Out of the Silent Planet*, *In the Realm of the Wolf*). Was the intent to limit to \\[noun\\] of \\[noun\\], as all of the suggestions so far do, or are more varied constructions encouraged?", "created": 1617383784.0, "author": "smartflutist661", "score": 2, "replies": [{"body": "More varied constructions should be fine, at least for easy mode. For hard mode though, we'll be stricter about the construction.", "created": 1617385639.0, "author": "kjmichaels", "score": 4, "replies": [{"body": "Great, thanks.", "created": 1617385965.0, "author": "smartflutist661", "score": 1, "replies": [], "commentid": "gt5v6r9"}], "commentid": "gt5uir4"}], "commentid": "gt5qrkl"}, {"body": "I have a slight complaint - I think the \"Debut Author\" square should have been titled \"Authorial Debut\". Changing it would bring clarity to the square, IMO.", "created": 1617386142.0, "author": "theonlyAdelas", "score": 2, "replies": [], "commentid": "gt5vjmg"}, {"body": "This is my first bingo challenge. I'm super excited and also terrified :)\n\nJust wanted to take this opportunity to thank you for creating this. I haven't even started yet, and I already feel like you've challenged me to read more varied than I've done in a while. I'm particularly worried about the Gothic Fantasy, First Contact and the Nonfiction categories. Tbh, it'll be a miracle if I get through those three, haha. Ask me again in a year.", "created": 1617392964.0, "author": "iamgaarden", "score": 2, "replies": [], "commentid": "gt6966y"}, {"body": "So, would binge-reading (or listening) to a series of novels count for the anthology square? When I find a new series, I do tend to go all in &amp; listen to them all!\n\nI binge-listened to several series last year:  the Mage Errant series (new to me series), The Alex Verus series (my favorite!), the Dresden Files and the first two books in Tide Child trilogy (new to me series).", "created": 1617296956.0, "author": "spike31875", "score": 5, "replies": [{"body": "Sadly, no. A series of books doesn't count as an anthology. For our challenge, anthologies are specifically defined as a collection of short stories by different authors in one single book.", "created": 1617297223.0, "author": "kjmichaels", "score": 11, "replies": [{"body": "Aren't short story collections by a single author allowed for the short stories square, as long as they're short stories? The Hard Mode for the square says \"anthology or collection\".", "created": 1617300432.0, "author": "Pseutri", "score": 7, "replies": [{"body": "Yes, that's correct. A collection is a book of short stories by the same author and an anthology is a book of short stories by different authors. I was just trying to explain why multiple books in a series wouldn't count as an anthology specifically.", "created": 1617302069.0, "author": "kjmichaels", "score": 8, "replies": [{"body": "To continue down this road... multiple novels collected together is also typically an omnibus and not an anthology or a collection. :D", "created": 1617303851.0, "author": "leftoverbrine", "score": 8, "replies": [{"body": "Now we just need to know what a collection of omnibuses is called and we'll be set!", "created": 1617304119.0, "author": "kjmichaels", "score": 9, "replies": [{"body": "Now I'm looking for box sets of omnibuses.  What have you done?  My shelves can't take it!", "created": 1617304892.0, "author": "Phyrkrakr", "score": 8, "replies": [{"body": "More importantly, I just realized I have a boxed set that contains both novels and a collection of short stories. Is it a Comnibus? Omnillection? What Frankenstein monster hath the publisher wrought?!", "created": 1617311851.0, "author": "leftoverbrine", "score": 7, "replies": [], "commentid": "gt2qe48"}], "commentid": "gt2bezf"}], "commentid": "gt29qyl"}], "commentid": "gt2966g"}], "commentid": "gt25cxg"}], "commentid": "gt21w9m"}], "commentid": "gt1ukcb"}], "commentid": "gt1tz17"}, {"body": "Dumb question maybe, but can we use the same author for the 5 short stories if they aren't part of a collection? Previous to this year I've only read collections, but this year I think I just want to read 5 of Howard's Conan stories.", "created": 1617389218.0, "author": "steelersrock01", "score": 1, "replies": [{"body": "Sadly, no. If it's not a collection, then the stories have to be by different authors.", "created": 1617391587.0, "author": "kjmichaels", "score": 1, "replies": [{"body": "Darn. No big deal, plenty of awesome options.", "created": 1617392125.0, "author": "steelersrock01", "score": 1, "replies": [], "commentid": "gt67hkt"}, {"body": "So a collection of 5+ short stories of the same author is technically okay?", "created": 1617392468.0, "author": "iamgaarden", "score": 1, "replies": [{"body": "Yes, absolutely.", "created": 1617392879.0, "author": "kjmichaels", "score": 1, "replies": [], "commentid": "gt6901q"}], "commentid": "gt686k7"}], "commentid": "gt66ebe"}], "commentid": "gt61orh"}, {"body": "Would **The Rosewater Redemption** count for First Contact? At the point the last book ended, &gt;!a limited group of humans and the aliens are already in contact, but the ending seemed to hint that the next book will involve the aliens' introduction to larger human society.!&lt;", "created": 1617301760.0, "author": "LadyCardinal", "score": 2, "replies": [{"body": "I believe that still counts.", "created": 1617301947.0, "author": "kjmichaels", "score": 4, "replies": [{"body": "Excellent, thank you!", "created": 1617302056.0, "author": "LadyCardinal", "score": 4, "replies": [], "commentid": "gt25c17"}], "commentid": "gt253yc"}], "commentid": "gt24q41"}, {"body": "I have 2 questions for \"Chapter Titles\" HM:\n\n1. does every single chapter have to be more than a single word?\n2. articles (a/the) are counted as words, right?", "created": 1619368466.0, "author": "criros91", "score": 1, "replies": [{"body": "Yes to both questions", "created": 1619376401.0, "author": "kjmichaels", "score": 1, "replies": [{"body": "thanks!!", "created": 1619461302.0, "author": "criros91", "score": 2, "replies": [], "commentid": "gvyi944"}], "commentid": "gvufwg4"}], "commentid": "gvtyzap"}, {"body": "&gt;Whines\n\nAre we going to create a thread of suggested wine pairings with each square? ;)", "created": 1617316222.0, "author": "Nidafjoll", "score": 11, "replies": [], "commentid": "gt2z6id"}, {"body": "So I'm making an assumption that I think is valid, but I should check. \n\nIf I'm sorting out my Bingo-related TBR and put up a post on my blog, is it cool to actually post the bingo board (provided of course, I link back to Reddit and gush about how amazing this challenge is)? I would guess yes but just figured I'd double-check.", "created": 1617320048.0, "author": "tarvolon", "score": 6, "replies": [{"body": "Yes, that would be welcome and encouraged!", "created": 1617320449.0, "author": "kjmichaels", "score": 2, "replies": [], "commentid": "gt373mh"}], "commentid": "gt36dkp"}, {"body": "For Set in Asia, does the entire book have to be set there to count, or can there be a few scenes elsewhere as long as the majority is in Asia?", "created": 1617298948.0, "author": "RubiscoTheGeek", "score": 8, "replies": [{"body": "A few scenes outside of Asia is okay but the majority of the book should take place in Asia.", "created": 1617299051.0, "author": "Cassandra_Sanguine", "score": 7, "replies": [], "commentid": "gt1ys8w"}], "commentid": "gt1yjsl"}, {"body": "Debut Author... is this for authors who have *only* published one book? Or can it be the first book by any author?", "created": 1617300293.0, "author": "GALACTIC-SAUSAGE", "score": 7, "replies": [{"body": "First book by any author.", "created": 1617300696.0, "author": "Cassandra_Sanguine", "score": 6, "replies": [], "commentid": "gt22gra"}], "commentid": "gt21lq9"}, {"body": "For the chapter title hard mode I keep finding books where most of the chapters have multiple words but a few of the chapters are one word. For example 4/57 chapters for Lord of Chaos have single word chapters but the rest have multiple words. Would that be ok for hard mode? I also ask cause people were recommending WoT for hard mode in general but when I went to pick this one up I noticed it had some single word chapters.", "created": 1619226816.0, "author": "akayu", "score": 1, "replies": [{"body": "The square has since been clarified so that every chapter must have a title that is longer than one word.", "created": 1619271266.0, "author": "kjmichaels", "score": 2, "replies": [], "commentid": "gvp2e2b"}], "commentid": "gvmtpaa"}, {"body": "Did the massive collection of books on Airtable break or is just not working for me? All I can see currently is 1 line which is the Shattered Sigil series. Or this this some tricky guerrilla marketing for the aforementioned series? If yes, I have to say it worked in my case, since I added them to my TBR list, but it would still be nice to be able to browse all the books in the table again. :)", "created": 1617633816.0, "author": "b3nj03", "score": 1, "replies": [{"body": "It should be fixed now. The list is live so occasionally there will be minor issues with the display if the mods who are adding to the list are in the middle of editing.", "created": 1617635508.0, "author": "kjmichaels", "score": 1, "replies": [], "commentid": "gtglseh"}], "commentid": "gtgi8jn"}, {"body": "A jungle is a forest, right?", "created": 1617300292.0, "author": "mollyec", "score": 11, "replies": [{"body": "Absolutely, that would count", "created": 1617301962.0, "author": "kjmichaels", "score": 8, "replies": [], "commentid": "gt2550x"}], "commentid": "gt21lms"}, {"body": "The navigation matrix is so fancy", "created": 1617296333.0, "author": "Dianthaa", "score": 21, "replies": [{"body": "Right? I kept clicking on everything and scrolling back up just for the fun of it. So handy!", "created": 1617303087.0, "author": "gunttert", "score": 6, "replies": [], "commentid": "gt27itx"}], "commentid": "gt1sm6d"}, {"body": "technical question: does \"Author is from Latin America or of Latinx/**Hispanic heritage**\" include people from Spain?", "created": 1617441888.0, "author": "esteboix", "score": 1, "replies": [{"body": "Unfortunately not. The goal for the square is highlight authors from South America and Central America or who have ancestry from the previous two regions but live in North America. We hadn\u2019t realized that \u201cHispanic\u201d could apply to people from Spain when we added that term in.", "created": 1617458095.0, "author": "kjmichaels", "score": 3, "replies": [{"body": "I supposed it was the case, but had to ask. Second question for the HM ratings condition, does it count at the time of reading it or at the time of turning it in in april 2022?", "created": 1617473011.0, "author": "esteboix", "score": 1, "replies": [{"body": "At the time of reading. We're pretty cruel but we're not cruel enough to force you to guess whether or not too many people will have read your chosen book by the time you have to turn it in.", "created": 1617474876.0, "author": "kjmichaels", "score": 5, "replies": [], "commentid": "gt9pu5l"}], "commentid": "gt9m0se"}], "commentid": "gt8u9ud"}], "commentid": "gt8avnq"}, {"body": "For HM Chapter titles, does every single chapter title have to be more than one word? The book I'm looking at has fifteen chapters and one of them is a single word &gt;.&gt;", "created": 1617477491.0, "author": "mollyec", "score": 1, "replies": [{"body": "Yes, all chapters most be more than one word long to count for hard mode.", "created": 1617477996.0, "author": "kjmichaels", "score": 2, "replies": [{"body": "F", "created": 1617485999.0, "author": "mollyec", "score": 3, "replies": [], "commentid": "gtab988"}], "commentid": "gt9w5aq"}], "commentid": "gt9v45k"}, {"body": "Anyone else similarly hate first contact stories? *whine*grumble*grumble*", "created": 1617295957.0, "author": "triftmakesbadchoices", "score": 13, "replies": [{"body": "I have a certain... strong disinclination? towards this trope. Hated even the idea of BDO from the previous bingo. But I think that's just because I have this stupid notion it'll be like trash movies from the 80's or whatever.", "created": 1617296668.0, "author": "Aiyume7", "score": 7, "replies": [{"body": "You might like something like Sue Burke's Semiosis -- definitely not the traditional \"first contact\" story. :)", "created": 1617298892.0, "author": "lyrrael", "score": 6, "replies": [{"body": "I'll check it out, thanks!", "created": 1617298920.0, "author": "Aiyume7", "score": 3, "replies": [], "commentid": "gt1yhi7"}], "commentid": "gt1yf6j"}], "commentid": "gt1tcl0"}, {"body": "I really hate squares that force you into sci-fi.", "created": 1617296336.0, "author": "rybl", "score": 7, "replies": [{"body": "There are probably fantasy books that would fit first contact. Like first contact with elves etc. I mean, the Sookie Stackhouse books are technically exploration of first contact with vampires when they 'come out of the closet'", "created": 1617296882.0, "author": "JiveMurloc", "score": 25, "replies": [], "commentid": "gt1tt6h"}, {"body": "I mean, tbf 'Gothic fantasy' *very explicitly* forces you into fantasy.  So it's at least fair. \n\nI think that one of the \"Rivers of London\" books has a fantasy first-contact plot.  It's one of the middle ones, but if you felt very strongly about it, it's there.", "created": 1617301965.0, "author": "Vermilion-red", "score": 11, "replies": [], "commentid": "gt2559i"}, {"body": "First contact also exists in fantasy, do it's doable.", "created": 1617299288.0, "author": "KristaDBall", "score": 9, "replies": [], "commentid": "gt1zcqf"}, {"body": "same, and the sci-fi i usually like is when contact between humans and aliens are regular and preestablished ://", "created": 1617299153.0, "author": "soullesssunrise", "score": 2, "replies": [], "commentid": "gt1z0w3"}, {"body": "Hell's Gate Multiverse by David Weber is technically first contact", "created": 1617323125.0, "author": "DestituteTeholBeddic", "score": 1, "replies": [], "commentid": "gt3bwhc"}], "commentid": "gt1smd2"}], "commentid": "gt1rruy"}, {"body": "Debut Author means debut novel right? Not an author who has only one book out.", "created": 1617297250.0, "author": "RevolutionaryCommand", "score": 9, "replies": [{"body": "Yes, correct. As long as it's an author's first novel, it counts, no matter how many books they've published since then.", "created": 1617297422.0, "author": "kjmichaels", "score": 13, "replies": [], "commentid": "gt1v006"}], "commentid": "gt1umhb"}, {"body": "I've been talking about this for weeks, and today my husband brought home a laminated bingo card for our fridge so I can mark it off as I go! [Complete with library cat magnet, of course. ](https://i.imgur.com/OZCCeTa.jpg)", "created": 1617318257.0, "author": "hellodahly", "score": 17, "replies": [{"body": "Excellent card, excellent husband, excellent library cat magnet. I love everything about this.", "created": 1617349270.0, "author": "Dianthaa", "score": 7, "replies": [{"body": "I have to say I agree!", "created": 1617364007.0, "author": "hellodahly", "score": 2, "replies": [], "commentid": "gt4rhzq"}], "commentid": "gt4d29x"}], "commentid": "gt331zl"}, {"body": "Some really great categories this year and I'm already filling out the Keep note I use to keep track with ARCs because why not. What I'm really excited for is the visual card, because that one's beautiful and I love a good spreadsheet!", "created": 1617299048.0, "author": "bubblegumgills", "score": 5, "replies": [], "commentid": "gt1ys0n"}, {"body": "Whoops, I asked this in the other thread, this is probably the better place. Two questions:\n\n1. For entries on the A-Z list, are we counting the whole series, or just the book that is itself on the list?\n\n2. For hard mode of 1st person, is it that there have to be multiple different 1st person narrators, or does every single narrator have to be first person? (I'm thinking here of The Nothing Within, where there are four perspectives, two of which are first-person)", "created": 1617296374.0, "author": "tarvolon", "score": 11, "replies": [{"body": "1.  Yes, all books in the same series as anything on the A-to-Z list will also count. \n2. Every POV must be 1st for it to count for hard mode. I know, that one's really challenging.", "created": 1617297361.0, "author": "kjmichaels", "score": 13, "replies": [{"body": "I think there are more books out there with multiple first person narrators than there are alternating between 1st and 3rd! Plenty of examples of the latter exist but it's always more striking to me when it happens.", "created": 1617309265.0, "author": "Merle8888", "score": 7, "replies": [], "commentid": "gt2kvdu"}], "commentid": "gt1uvah"}, {"body": "Phew, I almost bothered answering the other one! :D Luckily, I thought I'd make sure I had the very correct answers, and in the end just dropped the matter entirely!", "created": 1617298235.0, "author": "TheOneWithTheScars", "score": 3, "replies": [], "commentid": "gt1wux0"}], "commentid": "gt1spgh"}, {"body": "Will there be an official \"reverse recommendation\" thread, or may a random person start one? The one where people post books on their TBR and others say which square it might count for. I think this happened last year and it was super fun and helpful!", "created": 1617379350.0, "author": "woolandwhiskey", "score": 3, "replies": [{"body": "There won't be an official one but you or anyone else who wants to is more than welcome to start one.", "created": 1617383169.0, "author": "kjmichaels", "score": 2, "replies": [{"body": "Cool! Thank you!", "created": 1617384309.0, "author": "woolandwhiskey", "score": 1, "replies": [], "commentid": "gt5rto7"}], "commentid": "gt5pimj"}], "commentid": "gt5hqhu"}, {"body": "Whoever decided to recommend \"What Makes This Book So Great\" for the SFF Non-fiction square needs to be punished. Severely. My to-read list doesn't need this kind of abuse! So many of these books are, by their blurb, uninteresting to me. And out of my usual comfort zone. But the author sells the books in such a way I WANT to read them.\n\nMy poor heart. My poor wallet.", "created": 1618005398.0, "author": "[deleted]", "score": 1, "replies": [], "commentid": "gtzab1i"}, {"body": "So I hope this is the right place to ask! I have a question in regards to the comfort reads square as I\u2019m currently reading the Alex Verus series on a 1/month kind of deal till the finale comes out in December and it\u2019s quickly becoming the sort of series that I know that I\u2019ll have a good time when I read it. \n\nIt is my first time reading it however and I\u2019m reading a new book of it every single time so would it count for the square? Not sure about HM in it though, but I\u2019ll at least like to confirm if it does so I can make a tentative TBR.", "created": 1617304654.0, "author": "SA090", "score": 4, "replies": [{"body": "If it gives you comfort, then it definitely counts. I believe that would even technically fit for Hard Mode since we specified that HM would be not using a reread. It'd still be against the spirit of the HM but I think you've definitely found a loophole.", "created": 1617305183.0, "author": "kjmichaels", "score": 5, "replies": [{"body": "Thank you so much for the answer and I definitely see what you mean. I was aiming for an all hard mode card this time, so I think the best option now would be to find another series like Alex Verus and hope it ends up giving me the same sort of calm this one does.", "created": 1617305829.0, "author": "SA090", "score": 3, "replies": [], "commentid": "gt2dew7"}], "commentid": "gt2c1ee"}], "commentid": "gt2awh7"}, {"body": "Where can I send you the information for my books and what categories they fall into? I see the list of series you're compiling, but 1) it only has *Construct* listed and not the sequel, *Companion*, and 2) there are several categories *Construct* fits into that are not listed.", "created": 1617297926.0, "author": "Luke_Matthews", "score": 4, "replies": [{"body": "Info would be very helpful actually, just reply to u/Cassandra_Sanguine's comment. The list is very much a work in progress, Construct was added in half an hour ago and we didn't get to do all the fields. Content warnings and bingo squares would be particularly helpful since those take a lot of digging.", "created": 1617298423.0, "author": "Dianthaa", "score": 5, "replies": [], "commentid": "gt1xaoq"}, {"body": "Secondary question: Is it okay for me to post my own books in this thread? I don't want to overstep on self-promo.", "created": 1617298335.0, "author": "Luke_Matthews", "score": 4, "replies": [{"body": "Feel free to rec your books for any appropriate squares. I'll also edit that into the post so other resident authors know that's okay.", "created": 1617298525.0, "author": "kjmichaels", "score": 7, "replies": [], "commentid": "gt1xjc5"}], "commentid": "gt1x39g"}, {"body": "Just reply here and I'll get it updated. This is very much still a work in progress so all help is appreciated.", "created": 1617298308.0, "author": "Cassandra_Sanguine", "score": 3, "replies": [{"body": "Alright, here's what I've got:\n\n***Construct:***  \n \\- Book Club or Read-Along (June 2019 RAB)  \n \\- Found Family  \n \\- Mystery Plot (Hard Mode)  \n \\- Self-Published  \n \\- Forest Setting  \n \\- Debut Author\n\n***Companion:***  \n \\- Found Family  \n \\- Published in 2021  \n \\- Self-Published (Hard Mode)  \n \\- Forest Setting  \n \\- Cat Squasher (571 Pages)", "created": 1617299067.0, "author": "Luke_Matthews", "score": 7, "replies": [{"body": "All right it is all updated. Thanks for the help.", "created": 1617299342.0, "author": "Cassandra_Sanguine", "score": 3, "replies": [{"body": "Wow. That was speedy! Thanks!", "created": 1617301281.0, "author": "Luke_Matthews", "score": 4, "replies": [], "commentid": "gt23pku"}, {"body": "Minor update: ***Construct*** qualifies for Hard Mode in \"Debut Author\", because I've done an AMA here on r/Fantasy in the past.", "created": 1617309507.0, "author": "Luke_Matthews", "score": 4, "replies": [], "commentid": "gt2leba"}], "commentid": "gt1zhah"}], "commentid": "gt1ytkw"}], "commentid": "gt1x143"}], "commentid": "gt1w3u7"}, {"body": "Wait is there no graphic novel/audio square this year? I just noticed something was missing, haha", "created": 1617317415.0, "author": "tarvolon", "score": 8, "replies": [{"body": "Yeah, people have complained about pretty consistently so lrich decided to retire it for this year. There's always the possibility it may come back in future years though.", "created": 1617318036.0, "author": "kjmichaels", "score": 9, "replies": [{"body": "It wasn\u2019t my favorite square, as I don\u2019t heavily use either format, but I was trying to plan what I\u2019d use for that square and went back to double-check hard mode and couldn\u2019t find it, haha", "created": 1617318165.0, "author": "tarvolon", "score": 5, "replies": [], "commentid": "gt32vrd"}], "commentid": "gt32mzz"}, {"body": "I'm completely grateful that square is gone. May it Rest in Peace.", "created": 1617382326.0, "author": "BohemianPeasant", "score": 2, "replies": [], "commentid": "gt5nsfs"}], "commentid": "gt31h4g"}, {"body": "Sorry I don't know who to tell this, but there are two Tasha Suri entries in the Airtable list for the same book.\n\nGreat work tho, it's extremely helpful \ud83e\udd70", "created": 1617520101.0, "author": "Aiyume7", "score": 2, "replies": [], "commentid": "gtbqqcy"}, {"body": "[deleted]", "created": 1617320607.0, "author": "[deleted]", "score": 1, "replies": [], "commentid": "gt37dyv"}, {"body": "(I scrolled through here and don't see a question about this, so apologies if I've missed it.) \n\nIs there some type of ongoing list/database of all the recommendations being added to the comments of this post? \n\nI'm trying to get my head wrapped around Bingo for the first time and would love to see a list of options to pick from for each category (and not have to go through all the comments here). Maybe that's a bit picky-sounding, but just curious. I imagine it would take a lot of work to upkeep something like that and may not be worth it with all the info here already.", "created": 1617474326.0, "author": "onlychristoffer", "score": 1, "replies": [{"body": "Yes, we're compiling a full list here: [https://airtable.com/shr8ibKCm4YlcWTgu/tblif5grt5kLiIxYD](https://airtable.com/shr8ibKCm4YlcWTgu/tblif5grt5kLiIxYD)\n\nIt's an ongoing work in progress though as this is the first year we've ever put something like this together.", "created": 1617474794.0, "author": "kjmichaels", "score": 1, "replies": [], "commentid": "gt9pofv"}], "commentid": "gt9oqgv"}, {"body": "I'm planning on doing a card with all sequels, and, even with one sub, I think this means that I will either have to find a non-fiction sequel or a new-to-me sequel. \n\n\nSo, uhhhh. . . I guess I can read a new-to-me series that doesn't have to be read in order? Or maybe get an omnibus for a new-to-me author where one of the books is the sequel to the other? \n\nIdeas welcome.", "created": 1617297649.0, "author": "tarvolon", "score": 10, "replies": [{"body": "If you haven't read any of it, Modesitt's *Saga of Recluse* is more of an anthology series than a \"book 1 follows after book 2 chronologically\" series.  Fred Saberhagen's Dracula stuff also can be read out of order, for the most part.  I think I started with the fifth or sixth book (*A Matter of Taste*) and didn't even realize it.", "created": 1617297824.0, "author": "distgenius", "score": 8, "replies": [], "commentid": "gt1vvgw"}, {"body": "The books of Ursula Le Guin's *Annals of the Western Shore* trilogy are all basically standalone. I used this to cheat a bit on the \"last book in a series\" square in 2019.", "created": 1617302271.0, "author": "LadyCardinal", "score": 7, "replies": [], "commentid": "gt25s6x"}, {"body": "I did something like that a couple years ago for my sequel card, I just found a series where it is a proper series but the books each have their own standalone plot for the most part. Tie-in novels also often have entries that either stand alone plot, or have entries written by different authors so you can start a series with an author you know and get to a sequel with one you don't?", "created": 1617303697.0, "author": "leftoverbrine", "score": 6, "replies": [{"body": "Oooh tie-in, that\u2019s a good idea.", "created": 1617303791.0, "author": "tarvolon", "score": 3, "replies": [], "commentid": "gt291kx"}], "commentid": "gt28uar"}, {"body": "Some series don't have to be read in order! Many of Juliet Marillier's series have a new protagonist with each new installment, so that's an easy way to pick up a sequel without being lost or missing out too much, especially if a later protagonist/story sounds more appealing to you than an earlier one. And there are a few series out there where fans actually don't recommend starting with the first book.", "created": 1617309474.0, "author": "Merle8888", "score": 5, "replies": [], "commentid": "gt2lbst"}, {"body": "It sounds like you're subbing the debut square, but maybe you can find a debut novel that is a \"sequel\" to a short story? I was thinking maybe P. Dj\u00e8l\u00ed Clark might have done this, since both *Ring Shout* and *The Haunting of Tram Car 015* came after a short story, but his debut was *Black God's Drums* and I'm not sure whether there was a precursor short story. Still, it sounds easier to me than finding a nonfiction sequel", "created": 1617409719.0, "author": "mollyec", "score": 1, "replies": [{"body": "Yeah this was before I even noticed the debut square, and I do think that\u2019s the kind of thing I\u2019ll do", "created": 1617410262.0, "author": "tarvolon", "score": 1, "replies": [], "commentid": "gt75anf"}], "commentid": "gt74djq"}], "commentid": "gt1vhq5"}, {"body": "&gt; A to Z Genre Guide - Any book listed in our A to Z Genre Guide\n\nDoes that really mean only the books listed there or do other books in the series count as well?", "created": 1617296372.0, "author": "BubiBalboa", "score": 6, "replies": [{"body": "Yes, all books in the same series as anything on the A-to-Z list will also count.", "created": 1617297267.0, "author": "kjmichaels", "score": 8, "replies": [{"body": "Thanks for the clarification!", "created": 1617297951.0, "author": "BubiBalboa", "score": 4, "replies": [], "commentid": "gt1w5u7"}], "commentid": "gt1unvf"}], "commentid": "gt1spa7"}], "commentid": "gt1oy4b"}, {"body": "**Gothic Fantasy** \\- Gothic Fantasy is similar to Gothic Fiction but it includes fantasy elements or settings. Gothic Fiction is \"a style of writing that is characterized by elements of fear, horror, death, and gloom, as well as romantic elements, such as nature, individuality, and very high emotion. These emotions can include fear and suspense.\" ([Source](https://study.com/academy/lesson/gothic-fiction-definition-characteristics-authors.html))  [Here is a good 'introductory post' on Gothic Fantasy for further reading from Book Riot.](https://bookriot.com/gothic-fantasy/) **HARD MODE:** NOT one of the ten titles listed in the Book Riot article.", "created": 1617294749.0, "author": "kjmichaels", "score": 22, "replies": [{"body": "I'm stunned and delighted that **Mexican Gothic** by Silvia Moreno-Garcia wasn't in the Book Riot article, making this a great hard mode pick. Alas that I read it the week before Bingo!\n\nPerfect if you'd like to read about 1950s Mexico, the creeping dread of mushrooms, and absolutely horrible family surrounding a relentlessly fashionable and somewhat manipulative socialite. Morena-Garcia [is Mexican-Canadian](https://silviamoreno-garcia.com/about-2020/), also qualifying this for  **Latinx or Latin American Author** on easy mode (*tons* of Goodreads reviews).\n\nUpdated with content warnings: implied rape. And the more spoilery ones: &gt;!attempted rape is presented as nightmares at first and surrounded with a lot of gaslighting, incest, flashbacks to human sacrifice, infanticide, and cannibalism.!&lt;\n\nAnyone pulling from Book Riot and targeting Ninth House, some warnings for you as well: &gt;!heavy/pervasive themes of sexual assault (including one violent assault on a twelve-year old) and coerced sex as well as drug use.!&lt; I enjoyed the book a lot, but those themes thread through virtually every chapter.", "created": 1617296060.0, "author": "Nineteen_Adze", "score": 71, "replies": [{"body": "Great news for me - thank you! This has been on my short list, but I was pretty convinced it would be on the Book Riot list. Yay, hard mode! Glad to hear it so good!", "created": 1617296372.0, "author": "Moonlitgrey", "score": 9, "replies": [], "commentid": "gt1sp8n"}, {"body": "Yeah so I read this because of your comment, and I really wish you had said it, so I'm going to for anyone else who sees this: this book includes rape, at least attempted (it's somewhat vague). It adds to the horror, definitely, but I was not expecting it and it bothered me.", "created": 1618725922.0, "author": "morisian", "score": 1, "replies": [{"body": "You're right, and my apologies there-- I was running through my recent favorites and didn't flip back to my GR reviews to copy over content warnings. I've updated the original comment to add warnings for that and also for Ninth House on the Book Riot list.", "created": 1618837753.0, "author": "Nineteen_Adze", "score": 2, "replies": [], "commentid": "gv2sk4f"}], "commentid": "guxypw9"}, {"body": "Wooo, a great excuse to read what I've heard is a fantastic book!", "created": 1617300936.0, "author": "StormTyphoeus", "score": 2, "replies": [], "commentid": "gt22z8q"}, {"body": "Lucky this is still in my TBR pile! Yee", "created": 1617311327.0, "author": "joygasmic", "score": 2, "replies": [], "commentid": "gt2pamf"}], "commentid": "gt1s05b"}, {"body": "The two mega-classics that aren't on the list: Dracula, and Frankenstein.\n\nFevre Dream by George R.R. Martin, and Perdido Street Station by China Mieville should also count. Both are amazing.\n\nEDIT: An excellent comicbook that fits perfectly is Baltimore by Mike Mignola &amp; Christopher Golden.", "created": 1617295981.0, "author": "RevolutionaryCommand", "score": 35, "replies": [{"body": "Oh hey, I have Dracula sitting right next to me!! Thanks!\n\nEdit: the book!! Don't call 911 just yet :D", "created": 1617309083.0, "author": "TheOneWithTheScars", "score": 30, "replies": [], "commentid": "gt2kham"}, {"body": "Fevre Dream seems right up my alley! Thank you", "created": 1617310888.0, "author": "Lakadella", "score": 6, "replies": [], "commentid": "gt2odb4"}, {"body": "Hey I've been meaning to read Frankenstein forever. Yes!", "created": 1617296872.0, "author": "kashmora", "score": 2, "replies": [{"body": "Me too.", "created": 1617297281.0, "author": "RevolutionaryCommand", "score": 3, "replies": [], "commentid": "gt1uozu"}, {"body": "Definately gonna read Frankenstein as well for this!!", "created": 1617729040.0, "author": "ToaWaki", "score": 1, "replies": [], "commentid": "gtl93eg"}], "commentid": "gt1tsf5"}, {"body": "Would *The Scar* by Chine Mi\u00e9ville count?", "created": 1617649273.0, "author": "undeadbarbarian", "score": 1, "replies": [{"body": "I think it fits the definition given above (which in my opinion isn't really good to define gothic fiction, but I don't know a better one. I think gothic is a you know it when you see it thing), but personally I don't think it fits.", "created": 1617649455.0, "author": "RevolutionaryCommand", "score": 1, "replies": [{"body": "Gah. I've read both Fevre Dream and Perdido Street Station and loved both of them. None of the other recommendations seem up my alley, so I was hoping that the sequel to Perdido would do the trick. \n\nDo you happen to know of any other books like those ones (dark horror fantasy?) that fits the gothic prompt?", "created": 1617649814.0, "author": "undeadbarbarian", "score": 1, "replies": [{"body": "Do you read comicbooks? If yes, then Blatimore by Mike Mignola (the person behind Hellboy) &amp; Christopher Golden would fit. Now that I think about it Hellboy should count as well.\n\nThen you can go to straight Gothic Horror (still sff, so it should count) with stuff like Dracula (it's great,and really holds up in my opinion), Frankenstein (haven't read it yet, probably it's what I'm going to use for the square). If I don't read Frankenstein I'm going for Gormenghast, which I don't really know much about, but Mieville is a huge fan, so that's a big plus in my opinion.\n\nAlso I really earlier this year (used it in my 2020 bingo card) I really enjoyed Mexican Gothic by Silvia Moreno-Garcia.\n\nNow that I see them, I think most/all of these have already been recommended though.\n\nThere are various fantasy books (with horror elements) that I have not read and I assume could possibly count, but I don't feel confident to mention them.\n\nIf you don't find anything that you want to even try, maybe you could ask at r/horrorlit. Obviously the recommendation there would be more horror-focused, than fantasy-focused, but you'll probably found something.\n\nHope this helps.", "created": 1617653780.0, "author": "RevolutionaryCommand", "score": 2, "replies": [{"body": "This does help. Thank you!", "created": 1617655289.0, "author": "undeadbarbarian", "score": 1, "replies": [], "commentid": "gthtdk9"}], "commentid": "gthq3dp"}], "commentid": "gthhdyj"}], "commentid": "gthgmal"}], "commentid": "gthg85l"}], "commentid": "gt1rtr0"}, {"body": "All Hard Mode:\n\nCatherine House by Elizabeth Thomas\n\nGideon the Ninth and Harrow the Ninth by Tamsyn Muir\n\nPretty much any of the vampire books by Anne Rice \n\nWe Have Always Lived in the Castle by Shirley Jackson\n\nThe Werewolf of Paris by Guy Endore\n\nThe House Without a Summer", "created": 1617296705.0, "author": "JiveMurloc", "score": 37, "replies": [{"body": "I just finished Gideon the Ninth, so that checks off a few boxes for me", "created": 1617321067.0, "author": "Pil0t_0", "score": 2, "replies": [], "commentid": "gt38899"}, {"body": "I don't recall We Have Always Lived in the Castle having any speculative or supernatural elements...", "created": 1617347716.0, "author": "GSV_Zero_Gravitas", "score": 4, "replies": [{"body": "[removed]", "created": 1617958675.0, "author": "[deleted]", "score": 1, "replies": [{"body": "&gt;!I've read the plot description on Wikipedia, and honestly forgot these elements. However, I still think these are just from Merrycat's pov, she's the narrator and *she* believes in sympathetic magic, but there is no indication that magic exists in this world, that is in every other way our world. And the reveal is that she's not exactly neurotypical.!&lt; It's a beautiful book though and definitely gothic, no one can go wrong reading it and interpreting it in whatever way they like.", "created": 1617961385.0, "author": "GSV_Zero_Gravitas", "score": 3, "replies": [], "commentid": "gtwvkcq"}], "commentid": "gtwsseg"}], "commentid": "gt4bjuu"}], "commentid": "gt1tfge"}, {"body": "The Gormenghast books by Mervyn Peake!\n\nEdit: Suppose they're hard mode too, since they're not on the list. :)", "created": 1617296078.0, "author": "Nidafjoll", "score": 27, "replies": [{"body": "This may give me the push, so that I finally read these. Gormenghast has been on my TBR for too much time.", "created": 1617297416.0, "author": "RevolutionaryCommand", "score": 11, "replies": [{"body": "Same.", "created": 1617299121.0, "author": "swordofsun", "score": 3, "replies": [{"body": "same", "created": 1617300452.0, "author": "daavor", "score": 2, "replies": [], "commentid": "gt21xsy"}], "commentid": "gt1yy1n"}], "commentid": "gt1uzkl"}, {"body": "Good shout. I might use *Titus Groan* for my one re-read.", "created": 1617296902.0, "author": "GALACTIC-SAUSAGE", "score": 3, "replies": [], "commentid": "gt1tuqy"}, {"body": "I'm reminded of a line from one of the Laundry Files books where something is described as Gormenghastly. It made me chuckle. This was also going to be my suggestion for this square.", "created": 1617315202.0, "author": "wheresmylart", "score": 3, "replies": [{"body": "I'm rereading Wyrd Sisters with my bookclub, and this is the first time I've understood the line \"Lancre Castle was built on an outcrop of rock by an architect who had heard about Gormenghast but hadn\u2019t got the budget\" :)", "created": 1617316703.0, "author": "Nidafjoll", "score": 6, "replies": [], "commentid": "gt303x9"}], "commentid": "gt2x6y3"}], "commentid": "gt1s1k6"}, {"body": "[A Dowry of Blood](https://www.goodreads.com/book/show/56666839-a-dowry-of-blood) by S.T. Gibson counts for hard mode, and I highly recommend it! It's a \"queer reimagining of Dracula\u2019s brides, ft. sapphic yearning at the opera and tangled polyamorous relationships.\" (Tagline pulled from the author's twitter.) It follows a \"family\" of vampires through time, exploring themes of desire, obsession, and revenge, and the atmosphere is *immaculate*.\n\nThere's a lot of potential TWs, including sexual content. Check [the author's review](https://www.goodreads.com/review/show/3641593843) for the full list.", "created": 1617298056.0, "author": "Nat-Rose", "score": 17, "replies": [{"body": "That sounds good!", "created": 1617432335.0, "author": "dmeantit", "score": 2, "replies": [], "commentid": "gt81mtq"}], "commentid": "gt1wen2"}, {"body": "Happy to see this square! A few recommendations that haven't been mentioned yet:\n\n* **White Is for Witching** by Helen Oyeyemi **\u2014** very experimental modern Gothic horror with a haunted house and several different voices telling the story.\n* **Lacrimore** by SJ Costello \u2014 a self-published high fantasy/Gothic horror blend featuring a malevolent castle (and pandemic themes, if anyone would prefer to to avoid those)\n* **Carmilla** by Sheridan Le Fanu \u2014 a Gothic classic, a pre-Dracula novella probably best known for its (villainous) lesbian vampire\n* **The Castle of Otranto** by Horace Walpole \u2014 maybe more interesting from a historical perspective, one of the first books considered \"Gothic.\" Begins with a young noble being squashed by a giant helmet, unfortunately gets less gonzo from there", "created": 1617297512.0, "author": "diazeugma", "score": 10, "replies": [], "commentid": "gt1v6yk"}, {"body": "OMG, my time has come! It's going to be so hard to not just read all of the recommended titles for this category.\n\nSome really good ones I read last this/early this year that all qualify for **Hard Mode**:\n\n**Mexican Gothic** by Silvia Moreno Garcia (1950s Mexico with a very stylish and savvy protagonist tries to save her sister from a creepy house. Features eugenics and evil fungus. A wonderful and critical love letter to classic Gothic archetypes and themes.)\n\n**The Half-Killed** by Quenby Olson (A medium recovering from a s\u00e9ance gone terribly wrong gets roped into investigating a series of murders happening around London. Great descriptive prose here. I can still feel the heat of the miserable London summer.) \n\n**Lacrimore** by S. J. Costello (Another medium protagonist, this one in a deep crisis of faith. She goes to a creepy house in the middle of a monster-filled lake to oversee the funeral of an eccentric professor-type who hasn't actually died yet. It's kind of No Plot, Just Vibes. But the vibes, ooooooh the vibes! It's also a gothic set in a totally secondary world, which is a tough find in book form, and therefore a real treat.)\n\n**The Ruin of Delicate Things** by Beverly Lee (This one is set in the modern day. A married couple mourning their dead son try to reconnect by taking a holiday to the husband's childhood summer home. Evil fairies and a malevolent house ruin everything. I was completely gutted by this one. It had one of the most fitting and impactful endings I've ever read.)\n\n**The Magpie Lord** by K. J. Charles (M/M pairing of two shady dudes, where one is hired to break the deadly family curse that's targeting the other. The humor is great, and the descriptions of the dark magic were delightfully disgusting.)\n\nAnd if self-promo is okay, my husband and I co-wrote **Lady Vago's Malediction**. (A merchant-turned-baroness-turned banshee tries to solve the mystery of the castle she and her subjects are trapped in by communing with haunted rooms and objects. Secondary world fantasy! Reviewers say it's a high-adrenaline, atmospheric, and emotional read. We've got plans to enter the next round of SPFBO with it.)", "created": 1617299056.0, "author": "AKMBeach", "score": 23, "replies": [{"body": "I downloaded Lady Vago's Malediction a few months ago, but it's been in my TBR since then. When I saw the bingo description for Gothic fantasy, it was the first book I thought of, so it looks like I'll be reading it this year!", "created": 1617313258.0, "author": "steph-is-okay", "score": 2, "replies": [{"body": "Huzzah! Thanks for picking it up. We really hope you like it. :D", "created": 1617323208.0, "author": "AKMBeach", "score": 2, "replies": [], "commentid": "gt3c1qy"}, {"body": "I read this for last years bingo for the ghost square, loved it! I'm stoked to see there is more of the story coming.", "created": 1617650455.0, "author": "imrightontopthatrose", "score": 2, "replies": [], "commentid": "gthisa3"}], "commentid": "gt2taug"}, {"body": "\"No Plot, Just Vibes\" sounds delightful for **Lacrimore**! Adding that to my TBR-- it looks like a self-published debut, which is a great bonus for planning. A lot of these others also look great.", "created": 1617302591.0, "author": "Nineteen_Adze", "score": 6, "replies": [{"body": "It really is a delight! I was playing a lot of Sunless Sea at the time I was reading it, which meant I was really immersing myself in that kind of filigreed, salt-and-blood-stained, nautical gothic mood. S. J. Costello is a talented illustrator too, so they've got some really neat tie-in artwork to peruse when you're done reading. :)\n\nAnd everything on my list except Mexican Gothic is self-pub, though I think Lacrimore is the only debut. Trad-pub gothics trend toward period or real world set pieces, which I adore, but I also like my fantasy flair, and self-pub really delivers on that front.", "created": 1617304176.0, "author": "AKMBeach", "score": 2, "replies": [{"body": "Ooh, I love the Sunless Sea universe. I used to play a lot of Fallen London back in the day but never quite got around to the other games. \n\nI haven't read much self-pub because I normally lean toward paper copies (too much screen time at work), but maybe this is the year!", "created": 1617309233.0, "author": "Nineteen_Adze", "score": 2, "replies": [{"body": "I picked it up when it was on sale for a few months ago and have gotten more than my money's worth, for sure. It's a step above an idle mobile app but still not too demanding on those nights when I just can't commit hours of focus to something, so perfect for pandemic brain! I like to relax, sail my ship, explore ruins, meet strange creatures, and only cannibalize my crew when it's really necessary. ;)", "created": 1617323126.0, "author": "AKMBeach", "score": 2, "replies": [], "commentid": "gt3bwji"}], "commentid": "gt2ksw4"}], "commentid": "gt29vd0"}], "commentid": "gt26gep"}, {"body": "&gt;Lady Vago's Malediction\n\nIs your book self-published? It might fit under that square as well for Hard Mode (fewer than 50 reviews on Goodreads).\n\nP.S. You've sold me on The Ruin of Delicate Things. I'm going to read that one for this square. I love the mini-summaries.", "created": 1617305179.0, "author": "rugglesbee", "score": 2, "replies": [{"body": "Indeed it is, and would definitely work for Self-Pub Hard Mode! We just published it in late September last year, when pandemic and US election news was burying just about everything else. x.x We've got the sequel in the works though, and are putting out a little tie-in novella this week, so we're hopeful about building some momentum this year.\n\nReally hope you enjoy The Ruin of Delicate Things! Her writing style is my ideal blend of poetic yet visceral, always grounded in reality even when the supernatural is happening. Her Twitter presence is a real class act, too. I'm a big fan. :)", "created": 1617305986.0, "author": "AKMBeach", "score": 2, "replies": [{"body": "Awesome! I downloaded your book on KindleUnlimited and am excited to read it for the Self-Published square. Good luck on the sequel as well! :)", "created": 1617306539.0, "author": "rugglesbee", "score": 2, "replies": [{"body": "Oh wow, thanks so much for the support! Happy reading! :D", "created": 1617307069.0, "author": "AKMBeach", "score": 2, "replies": [], "commentid": "gt2g55o"}], "commentid": "gt2f05j"}], "commentid": "gt2drmq"}], "commentid": "gt2c149"}], "commentid": "gt1ysno"}, {"body": "**The Ghost Bride** Yangsze Choo\n\n**The Lie Tree** by Frances Hardinge\n\n**Things in Jars** by Jess Kidd\n\n**Yellow Jessamine** by Caitlin Starling", "created": 1617300555.0, "author": "perditorian", "score": 5, "replies": [{"body": "love The Lie Tree! So atmospheric!", "created": 1617340933.0, "author": "willalala", "score": 3, "replies": [{"body": "Agreed. I came in to recommend it for this square.", "created": 1618419422.0, "author": "julieputty", "score": 1, "replies": [], "commentid": "gui8vvh"}], "commentid": "gt43ymu"}], "commentid": "gt225u1"}, {"body": "Hello. I'm a pretty new author James G. Robertson here. I have two works out that are both dark fantasy in nature, one with a sci-fi lean, the other with a horror. I believe these would fit the gothic aspect. \n\nThe first one, Afterworld, has won a few small awards and is getting a second edition this summer along with an audiobook. \n\nThe second, The Ripper, I'm in the process of creating an ensemble cast audiobook (30+ voice actors) and adding a few minor revisions to the ebook before releasing the paperback. This book will be in its final form in all formats come sometime in May. \n\nThese books are in the same \"Next Life Universe\" and are connected, but you can read them in any order. If you have any questions, please feel free to message me!", "created": 1617328700.0, "author": "ThrowBackFF", "score": 4, "replies": [], "commentid": "gt3lj6f"}, {"body": "I think Archivist Wasp by Nicole Kornher-Stace could work here! Great book that I don't see talked about very frequently.", "created": 1617298467.0, "author": "Dragon_Lady7", "score": 2, "replies": [], "commentid": "gt1xeh8"}, {"body": "I feel like they can count, so any of [my Grimluk, Demon Hunter books](https://www.ashearmstrong.com/works/fiction/grimluk/). Though the upcoming fourth book probably fits the most.", "created": 1617305470.0, "author": "ashearmstrong", "score": 1, "replies": [], "commentid": "gt2cnit"}, {"body": "Oh man, Richard Kadrey's **The Grand Dark** is *such* a good fit for this.  Fear, horror, death, romance, gloom, nature, individuality, and high emotion?  All of that, and plenty more.  This book is *magnificent* and like nothing Kadrey has ever written before.  Highly recommended.", "created": 1617309239.0, "author": "Phyrkrakr", "score": 4, "replies": [], "commentid": "gt2ktcs"}, {"body": "I'm pretty sure The Death of the Necromancer by Martha Wells counts here.", "created": 1617305201.0, "author": "Pseutri", "score": 2, "replies": [], "commentid": "gt2c2w1"}, {"body": "**Yellow Jessamine** by Caitlyn Starling \n\n**The Monster of Elendhaven** by Jennifer Giesbrecht \n\n**The Secret Books of Paradys** by Tanith Lee (and a whole slew of other stuff, it's kind of her Thing)\n\n**The Thirteenth Tale** by Diane Setterfield  \n\n**Murkmere** by Patricia Elliott\n\n**The Red Tree** by Caitlin Kiernan \n\n**The Bloody Chamber** by Angela Carter (short story collection).  Obviously any Poe collection as well. \n\n**The Ballad of Black Tom** by Victor LaValle", "created": 1617301828.0, "author": "Vermilion-red", "score": 3, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation Thread: **Angela Carter** (1940-1992): The Bloody Chamber, The Company of Wolves and others](https://www.reddit.com/r/Fantasy/comments/58a4vy/author_appreciation_thread_angela_carter_19401992/?st=iui6zoqs&amp;sh=56468f65) from user u/UnsealedMTG \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617301932.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt252ut"}], "commentid": "gt24v58"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\nFor this square, they are: \n\nLady's Vago's Malediction by AKM Beach\n\nKept from Cages by Phil Williams", "created": 1622825000.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0l34ky"}, {"body": "*In the Night Wood* by Dale Bailey", "created": 1617301059.0, "author": "BitterSprings", "score": 2, "replies": [], "commentid": "gt238l0"}, {"body": "**The Half-Killed** by Quenby Olson fits the bill and it's great.", "created": 1617298872.0, "author": "barb4ry1", "score": 3, "replies": [], "commentid": "gt1ydh4"}, {"body": "I'm not sure I have the best grasp of this genre, but a few things I think qualify:\n\n**Gedlund** by William Ray - very Ravenloft atmosphere after the first few chapters\n\nMost of the **Yarnsworld** books by Benedict Patrick, especially **They Mostly Come Out at Night** and **From the Shadows of the Owl Queen's Court**\n\n**Greenhollow Duology - Silver in the Wood &amp; Drowned Country** by Emily Tesh would fit here I think\n\nAll of these would be HM.\n\nAs a sidenote, I just finished **Ninth House** which is on the Book Riot list and I thought it was a great read, so highly recommend if you're not worried about HM.", "created": 1617421643.0, "author": "Tigrari", "score": 2, "replies": [], "commentid": "gt7o5l1"}, {"body": "I haven\u2019t read this yet, but **The Devil in Silver** by Victor LaValle is described as gothic in reviews. It\u2019s been on my TBR for a while after I loved The Ballad of Black Tom\n\nEdit: I finished it, and it has plenty of gothic elements, but the *fantasy* elements are very, very light, so it may not be a good fit in that regard.", "created": 1617729735.0, "author": "tarvolon", "score": 1, "replies": [], "commentid": "gtlaoy1"}, {"body": "Where Oblivion Lives by T. Frohock.\n\nIn The Night Wood by Dale Bailey.\n\nPretty Little Dead Girls by Mercedes M. Yardley.", "created": 1617478262.0, "author": "badMC", "score": 1, "replies": [], "commentid": "gt9wouu"}, {"body": "It has been a long time since I've read it, but [**The Enterprise of Death**](https://www.goodreads.com/book/show/8876413-the-enterprise-of-death?ac=1&amp;from_search=true&amp;qid=hF5p91ge5Q&amp;rank=1) by Jesse Bullington is definitely very gothic fantasy, and very enjoyable if you want weird, queer fic. Also a woman of color protagonist, though she starts out as a slave.\n\ntw for slavery, sexual content, and what is technically necrophilia (I mean, from what I remember the dead body is conscious and consenting, but... still very much dead, as per the cover)", "created": 1617313112.0, "author": "Dyed_Productions", "score": 2, "replies": [], "commentid": "gt2t00n"}, {"body": "I think Plain Bad Heroines by Emily M Danforth would fit here.", "created": 1617310769.0, "author": "AngryGatekeeper", "score": 5, "replies": [], "commentid": "gt2o44d"}, {"body": "[The Camaro Murders](https://www.amazon.com/dp/B077W12M7R) and [From Legend](https://www.amazon.com/dp/B07PGSDVC9), both by Ian Lewis.", "created": 1617393633.0, "author": "IanLewisFiction", "score": 1, "replies": [], "commentid": "gt6ahun"}, {"body": "**The Historian** by Elizabeth Kostova.", "created": 1618264739.0, "author": "BohemianPeasant", "score": 1, "replies": [], "commentid": "guayo6i"}, {"body": "I *think* All the Murmuring Bones by A.G. Slatter counts here? (at least I hope so, as I'm about 40% of the way through it)", "created": 1617298106.0, "author": "librarylackey", "score": 1, "replies": [{"body": "I read it a few weeks ago and I would say it does", "created": 1617301042.0, "author": "cubansombrero", "score": 2, "replies": [{"body": "Sweet, thanks!", "created": 1617301238.0, "author": "librarylackey", "score": 1, "replies": [], "commentid": "gt23mbd"}], "commentid": "gt237d0"}], "commentid": "gt1wj5c"}, {"body": "Does Senlin Ascends and the other Books of Babel count? A google search is giving me results such as \"Bancroft brings this *gothic* place and its denizens to a colourful life\"", "created": 1617646785.0, "author": "Simon_Illyan", "score": 1, "replies": [], "commentid": "gthasqa"}, {"body": "I was wondering if The Lord of the Sabbath by Mariana Palova could be read for this square.", "created": 1622768552.0, "author": "dimine0987", "score": 1, "replies": [], "commentid": "h0iefqk"}], "commentid": "gt1p2rf"}, {"body": "**Has Chapter Titles** \\- A book where each chapter has a title (other than numbers or just a character's name). **HARD MODE:** Chapter title is more than a single word.", "created": 1617294833.0, "author": "kjmichaels", "score": 22, "replies": [{"body": "*Percy Jackson and the Lightning Thief* has some great chapter titles.", "created": 1617296490.0, "author": "BitterSprings", "score": 26, "replies": [], "commentid": "gt1syn7"}, {"body": "Vicious by V.E. Schwab \n\nFire and Blood by George R. R. Martin\n\nThe Girl Who Speaks Bear by Sophie Anderson (not hard mode)\n\nI, Coriander by Sally Gardner (not hard mode)\n\nThe Lies of Locke Lamora by Scott Lynch\n\nThe Bear and the Nightingale by Katherine Arden (not hard mode)\n\nThe Castle of Tangled Magic by Sophie Anderson (not hard mode)\n\nlol I'm a childrens bookseller and it shows", "created": 1617301701.0, "author": "soullesssunrise", "score": 25, "replies": [{"body": "I was going to recommend The Enchanted Forest Chronicles by Patrica C. Wrede. Also children's with some lovely long chapter titles!", "created": 1617376406.0, "author": "CuratedFeed", "score": 3, "replies": [], "commentid": "gt5buyh"}, {"body": "The best part about bookselling? Reading all the kids books so that you can recommend them. I love it. Plus there are so many diverse reads coming out", "created": 1618035866.0, "author": "indigohan", "score": 2, "replies": [], "commentid": "gu0ow55"}], "commentid": "gt24lkz"}, {"body": "**The Unspoken Name** by K.A. Larkwood will qualify for this on hard mode (I'm partway through it now). Sample chapter title: \"Two Completely Predicable Things\". \n\nFeatures: female warrior arc protagonist, dying worlds connected by magical gates, very creepy cults, old gods, and what I'm pretty sure is angling to be a lesbian love story.", "created": 1617296265.0, "author": "Nineteen_Adze", "score": 24, "replies": [{"body": "Finished it a couple of weeks ago. It's a great read and on my 2020 bingo card.", "created": 1617315433.0, "author": "wheresmylart", "score": 3, "replies": [], "commentid": "gt2xnge"}], "commentid": "gt1sgqw"}, {"body": "Had a quick rifle through the physical books I read last year:\n\n[The Bone Ships](https://www.goodreads.com/book/show/43521682-the-bone-ships?ac=1&amp;from_search=true&amp;qid=ulNgIcFvJS&amp;rank=1) \\- R.J. Barker (hard mode)\n\n[The Ten Thousand Doors of January](https://www.goodreads.com/book/show/43521657-the-ten-thousand-doors-of-january?ac=1&amp;from_search=true&amp;qid=M2W9aMSk76&amp;rank=1) \\- Alix E. Harrow (hard mode)\n\n[The Fifth Season](https://www.goodreads.com/book/show/19161852-the-fifth-season?ac=1&amp;from_search=true&amp;qid=xsiDMXsZbI&amp;rank=2) \\- N.K. Jemisin (hard mode)", "created": 1617297848.0, "author": "Krilllian", "score": 21, "replies": [], "commentid": "gt1vxd2"}, {"body": "The Parasol Protectorate by Gail Carriger has great chapter titles (hard mode)\n\nThe Hobbit and Lord of the Rings by Tolkien have chapter titles (hard mode)", "created": 1617298665.0, "author": "Asheweaver", "score": 18, "replies": [], "commentid": "gt1xv3u"}, {"body": "* **A Curse of Roses** by Diana Pinguicha\n* **The Lord of Stariel** by A.J. Lancaster\n* **Jade City** by Fonda Lee\n* **The Bone Season** by Samantha Shannon\n* **The Winternight Trilogy** by Katherine Arden\n* **The Diviners** by Libba Bray\n* **Scythe** by Neal Shusterman\n* **The Ten Thousand Doors of January** by Alix E. Harrow\n* **Nevernight** by Jay Kristoff\n* **Witchmark** by C.L. Polk\n* **Beneath Black Sails** by Clare Sager\n* **The Goblin Emperor** by Katherine Addison", "created": 1617301437.0, "author": "cubansombrero", "score": 12, "replies": [], "commentid": "gt241ev"}, {"body": "**Howl's Moving Castle** by Diana Wynn Jones has some of my favorite chapter titles and counts for Hard Mode.", "created": 1617311929.0, "author": "monsteraadansonii", "score": 11, "replies": [], "commentid": "gt2qjse"}, {"body": "**Fourth Mansions** and **The Reefs of Earth** are R.A. Lafferty novels that are memorably amazing for hard mode. \n\n**The Wheel of Time** also works as hard mode.\n\nedit: Hard mode requires all chapter titles to be more than one word, so some WoT books may not work. Several have a chapter titled \"Leavetakings.\" The Lafferty books still fit though.", "created": 1617297314.0, "author": "tarvolon", "score": 8, "replies": [], "commentid": "gt1urib"}, {"body": "**The Fifth Season** by N.K. Jemisin (whole series, HM)\n\n**Kingshold** &amp; **Ioth, City of Lights** by D.P. Woolliscroft \n\n**Aching God** by Mike Shel (whole series, HM)\n\n**Into the Labyrinth** by John Bierce (whole series, HM)\n\n**Between Two Fires** by Christopher Buehlman (HM)\n\n**Guild of Tokens** by Jon Auerbach (HM)\n\n**Balam, Spring** / **Spit and Song** / **The Narrows** by Travis M. Riddle (me) (HM)", "created": 1617315658.0, "author": "eightslicesofpie", "score": 7, "replies": [], "commentid": "gt2y36d"}, {"body": "The Girl who Circumnavigated Fairyland in a Ship of her own Making by Catherynne Valente is hard mode, iirc\n\nHarrow the Ninth by Tamsin Muir - hard mode", "created": 1617333534.0, "author": "oboist73", "score": 2, "replies": [], "commentid": "gt3tk9h"}, {"body": "Robocopter Ski Patrol, Untitled Spy Story, and Ruben's Cube Alaska by Aaron C. Cross \n\nRC: A mercenary group gets back together to try to stop a dictator from taking over a huge supply of yellow cake uranium. Hijinks and reality messes ensue. There's also a robotic helicopter.\n\nUSS: Four government agents get burned and have to find a way to clear their names while exploring the world and getting to the bottom of a sinister cabal's plan. Lou Bega makes an appearance and hasn't sued me yet, which is nice of him.\n\nRCA: A man up in Alaska both is and isn't himself and has to figure it out. There's also a cube that can change time and reality. Also, there's a semi-immortal Russian with a direwolf. He's pretty fun.\n\nThese books are also eligible for Hard Mode since the chapter titles are long and may be the best part of the books!", "created": 1617391954.0, "author": "aaronccross", "score": 1, "replies": [], "commentid": "gt6753a"}, {"body": "* [**Dusk or Dark or Dawn or Day**](https://www.goodreads.com/book/show/31183180) by Seanan McGuire (HM)\n* [**In the Vanishers' Palace**](https://www.goodreads.com/book/show/41724928) by Aliette de Bodard\n* [**A Wizard of Earthsea**](https://www.goodreads.com/book/show/13642) by Ursula K. Le Guin\n* [**Travel Light**](https://www.goodreads.com/book/show/827276) by Naomi Mitchison\n* [**Sisters of the Vast Black**](https://www.goodreads.com/book/show/44581558) by Lina Rather\n* [**The Glass Hotel**](https://www.goodreads.com/book/show/45754981) by Emily St. John Mandel\n* [**The Thirteenth Tale**](https://www.goodreads.com/book/show/40440) by Diane Setterfield", "created": 1617316029.0, "author": "Amarthien", "score": 2, "replies": [], "commentid": "gt2ysy4"}, {"body": "* ***Green Rider*** series by Kristen Britain (hard mode)\n* Any of Jasper Fforde's works like the ***Thursday Next*** series, ***Nursery Crime Series***, etc. (hard mode)\n* ***Johannes Cabal the Necromancer*** by Jonathan L. Howard (hard mode)", "created": 1617310255.0, "author": "paperwhites", "score": 2, "replies": [], "commentid": "gt2n02a"}, {"body": "**The Ruthless Lady's Guide to Wizardry** by CM Waggoner qualifies for hard mode.\n\nKate Elliott's Crown of Stars series has chapter titles. Many have two or more words.", "created": 1617309677.0, "author": "Dsnake1", "score": 1, "replies": [], "commentid": "gt2lrpv"}, {"body": "Hard Mode:\n\n\\*\\*The Charley Davidson series\\*\\* (13 books long, complete series) by Darynda Jones - The chapter title are all cheesey sayings of the kind you would find on a tee shirt or bumper sticker. \n\nUrban Fantasy/Romance/Comedy. MC is the Grim Reaper. Strong female lead, body positivity\n\n\\*\\*The Fever series\\*\\* (10 books and a graphic novel, complete series) by Karen Marie Moning- The chapter titles are all song lyrics. \n\nUrban Fantasy/Romance. Features strong female leads, fae, portal magic, old gods.", "created": 1617305242.0, "author": "Kathulhu1433", "score": 2, "replies": [], "commentid": "gt2c5ya"}, {"body": "**A  Deadly Education** by Naomi Novik (hard)\n\n**The Left Hand of Darkness** by Ursula K Le Guin (hard)\n\n**City of Stairs** by Robert Jackson Bennett (hard; first in a trilogy; waaayy better than Foundryside IMO!)", "created": 1617340550.0, "author": "willalala", "score": 3, "replies": [{"body": "Having just finished City of Stairs, I want to add here it doesn't fit hard mode - there are a couple of one-word titles, and there's even a couple chapters without a title at all. See the titles [here](https://divinecities.fandom.com/wiki/City_of_Stairs)", "created": 1619984464.0, "author": "KaPoTun", "score": 2, "replies": [], "commentid": "gwpa71v"}], "commentid": "gt43h9j"}, {"body": "Thanks for allowing resident authors to rec their works. [Harpyness is Only Skin Deep](https://www.goodreads.com/book/show/53332248-harpyness-is-only-skin-deep) and [Finding Your Harpy Place](https://www.goodreads.com/book/show/55681173-finding-your-harpy-place) both qualify for Chapter Titles, hard mode. \n\nI really hope someone picks one of these for their bingo, it takes me forever to come up with fun and interesting chapter titles for my books! My favorite chapter title so far: *Ogres Eleven*", "created": 1617567067.0, "author": "Kululu17", "score": 2, "replies": [], "commentid": "gtdp963"}, {"body": "Clockwork Angel by Cassandra Clark is my pick. Her other books probably have them too.", "created": 1617302768.0, "author": "Endalia", "score": 1, "replies": [], "commentid": "gt26u9c"}, {"body": " [The Legends of the First Empire Series by Michael J. Sullivan](https://www.goodreads.com/series/135626-the-legends-of-the-first-empire) and they're hard mode I believe.", "created": 1617327657.0, "author": "BohemianPeasant", "score": 2, "replies": [], "commentid": "gt3jqr6"}, {"body": "The Ruthless Ladies Guide to Wizardry by C M Waggoner has excellent long chapter titles.", "created": 1617302667.0, "author": "xenizondich23", "score": 3, "replies": [], "commentid": "gt26mcz"}, {"body": "**False Value** by *Ben Aaronovitch* qualifies for hard mode. This is the latest installment in the River of London series. I think the previous installments qualify too, but they were library reads so I can't actually check that.", "created": 1617569524.0, "author": "Myamusen", "score": 1, "replies": [], "commentid": "gtdtz5n"}, {"body": "Every Aru Shah book by Roshani Chokshi has multi word chapter titles, plus a lot of them are puns or pop culture references. \nI\u2019m currently reading chapter 17 of the fourth book titled \u201cYou get a quest! And you get a quest!\u201d\nIt\u2019s MG, but so good! Own Voice Hindu mythology based adventure", "created": 1618035702.0, "author": "indigohan", "score": 1, "replies": [], "commentid": "gu0op56"}, {"body": "Joannes Cabal, Necromancer qualifies for hard mode here", "created": 1617316523.0, "author": "c_ocean", "score": 1, "replies": [], "commentid": "gt2zrhc"}, {"body": "Hello, James G. Robertson here. I have two works out that are out, the first fits this category as the second is mostly dates.\n\nThe first one is Afterworld (Next Life, #1). It is a dark fantasy/sci-fi and though it has very few reviews it has won a few small awards. It is getting a second edition this summer along with an audiobook. Please give it a try!", "created": 1617329247.0, "author": "ThrowBackFF", "score": 3, "replies": [], "commentid": "gt3mgn9"}, {"body": "The **Earthsea** books by Ursula K. Le Guin and it works for hard mode.", "created": 1617392707.0, "author": "shadowkat79", "score": 1, "replies": [], "commentid": "gt68nk7"}, {"body": "&gt; Chapter title is more than a single word.\n\nNative Star by MK Hobson (hard mode)", "created": 1617306648.0, "author": "JiveMurloc", "score": 1, "replies": [], "commentid": "gt2f8p4"}, {"body": "Wheel of Time by Robert Jordan (HM)\n\nStormlight Archive by Brandon Sanderson (HM)", "created": 1617302263.0, "author": "Arette", "score": 4, "replies": [], "commentid": "gt25rkh"}, {"body": "[The Camaro Murders](https://www.amazon.com/dp/B077W12M7R) by Ian Lewis", "created": 1617393555.0, "author": "IanLewisFiction", "score": 1, "replies": [], "commentid": "gt6acb9"}, {"body": "**The Lord of the Rings** (hard)", "created": 1617381608.0, "author": "BohemianPeasant", "score": 1, "replies": [], "commentid": "gt5mbnd"}, {"body": "Children of the Dead City by Noor Al-Shanti (full disclosure, I'm the author) has chapter titles. The majority of them are more than a single word, though there are a few single word ones so not sure if it would count for hard mode.", "created": 1617315942.0, "author": "NStorytellerDragon", "score": 3, "replies": [{"body": "I'm pretty sure that would count.", "created": 1617333454.0, "author": "GALACTIC-SAUSAGE", "score": 3, "replies": [], "commentid": "gt3tftp"}], "commentid": "gt2ymvs"}, {"body": "Hard mode\nThe Dragon Prophecy #2\n**Blade of Empire**\nMercedes Lackey &amp; James Mallory \n\nI nominate this book for having the *longest* chapter titles I've seen. I actually went in the ebook formatting to change the font sizes and formatting on my kindle. They were taking up a page to page and a half on the screen. \n\nExample:\n\nCHAPTER EIGHTEEN \nSWORD MOON TO THUNDER MOON: THE END OF THE WEST", "created": 1617301178.0, "author": "Gyr-falcon", "score": 4, "replies": [{"body": "I'll one up you on this one.  Steven Brust, in *The Phoenix Guards:*\n\n**\"Chapter the Eleventh: In Which The Plot, Behaving in Much the Manner of a Soup to Which Corn Starch Has Been Added, Begins, At Last, to Thicken\"**\n\nBut that's just Paarfi for you.  Never use one word when five will serve the same purpose, and any sentence with less than three commas is not actually a real sentence.", "created": 1617308081.0, "author": "Phyrkrakr", "score": 14, "replies": [], "commentid": "gt2iaue"}, {"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617301365.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt23vy4"}], "commentid": "gt23hpb"}, {"body": "Strange the Dreamer by Laini Taylor is both a fantastic book AND perfect for this!", "created": 1617299895.0, "author": "Frostguard11", "score": 5, "replies": [], "commentid": "gt20qn4"}, {"body": "**Jade City** by Fonda Lee (edit: works for Hard Mode)", "created": 1622500780.0, "author": "moralTERPitude", "score": 1, "replies": [], "commentid": "h04p8bl"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\nFor this square, they are: \n\nLady's Vago's Malediction by AKM Beach\n\nA Change of Blood by G. P. Gabriel\n\nTruth and Other Lies by Lyra Wolf\n\nWindborn by Alex Bradshaw\n\nEyes Last Seen Dying by Colin Adams\n\nWizardoms by Jeffrey L. Kohanek\n\nThe Iron Crown by LL MacRae\n\nThrone of Ice and Ash by J. D. L. Rosell\n\nPath of Darkness by CM Lackner\n\nSword of Cho Nisi by D.L. Gardner\n\nDive: Endless Skies by Chris Reign\n\nDark Apprentice by Val Neil", "created": 1622828695.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0lbrp0"}, {"body": "It has been a while since I read them, but I recall that the **Eragon** books had chapter titles and would count for hard mode.", "created": 1617300855.0, "author": "DrMDQ", "score": 1, "replies": [], "commentid": "gt22t4p"}, {"body": "Digging through my physical TBR and checking:\n\n**Daughter of the Empire** by Feist and Wurts fits\n\n**The Merro Tree** by Katie Waitman fits\n\n**Dust Girl** by Sarah Zettel fits hard mode (this is a YA that I don't know much about, but I got it on the basis of her incredible first contact novel)\n\n**The Best of All Possible Worlds** by Karen Lord fits  (all but the first chapter are multiple words, but it seems that won't be enough for hard mode)", "created": 1617306973.0, "author": "tarvolon", "score": 1, "replies": [], "commentid": "gt2fxon"}, {"body": "Frith Chronicles series by Shami Stovall would qualify for hard mode. First book is Knightmare Arcanist.", "created": 1617297674.0, "author": "JMellac", "score": 5, "replies": [{"body": "Thank you! Was hoping to get this book into Bingo", "created": 1617375073.0, "author": "sfi-fan-joe", "score": 2, "replies": [], "commentid": "gt597ye"}], "commentid": "gt1vjpb"}], "commentid": "gt1p9g1"}, {"body": "**SFF-Related Nonfiction** \\- Back by popular demand! Any nonfiction book that is related to SFF. Could be a book about the history of something in SFF, writing SFF, essays from a SFF writer, etc.  **HARD MODE:** Published within the last five years.", "created": 1617294805.0, "author": "kjmichaels", "score": 20, "replies": [{"body": "Last time I read **The Art of Language Invention: From Horse-Lords to Dark Elves, the Words Behind World-Building** by David J Peterson. It's about conlangs (= constructed languages, like Quenya or Dothraki). It's heavy on the linguistics aspect - phonology, morphology, syntax, etc - so if you're interested in a Linguistics 101 course with a fantasy theme, this is the perfect book! Official recommendation from a linguistics PhD student ;) \\[For all linguists, skip/skim it, it's meant for keen lay people.\\]", "created": 1617312566.0, "author": "sailorfish27", "score": 30, "replies": [], "commentid": "gt2rvft"}, {"body": "I highly recommend Grady Hendrix's Paperbacks from Hell. It's a history of paperback horror novels and it's very funny. Also fits hard mode", "created": 1617296162.0, "author": "phonz1851", "score": 27, "replies": [{"body": "That sounds right up my alley. And it's $4 on kindle right now.", "created": 1617297121.0, "author": "The_Vampire_Barlow", "score": 4, "replies": [{"body": "For me at least i recommend the paperback the art is a big part of the book as he talks a lot about cover artists and trends in cover art", "created": 1617297303.0, "author": "phonz1851", "score": 5, "replies": [], "commentid": "gt1uqni"}], "commentid": "gt1uc7t"}, {"body": "Ooo I have that sitting on my audible - I think it was free? Perfect.", "created": 1617332448.0, "author": "P0PSTART", "score": 1, "replies": [{"body": "As I said above the art is a big part of this book so I highly recommend the paper back", "created": 1617332513.0, "author": "phonz1851", "score": 2, "replies": [], "commentid": "gt3rxup"}], "commentid": "gt3ru3f"}], "commentid": "gt1s8d2"}, {"body": "u/FarragutCircle put together a list of Locus Magazine links for non-fiction recs. Here is Locus's recommended picks for the past few years (scroll down to the non-fiction section):\n\n2016: [https://locusmag.com/2017/01/2016-locus-recommended-reading-list/](https://locusmag.com/2017/01/2016-locus-recommended-reading-list/) \n\n2017: [https://locusmag.com/2018/02/2017-locus-recommended-reading-list/](https://locusmag.com/2018/02/2017-locus-recommended-reading-list/) \n\n2018: [https://locusmag.com/2019/02/2018-locus-recommended-reading-list/](https://locusmag.com/2019/02/2018-locus-recommended-reading-list/) \n\n2019: [https://locusmag.com/2020/02/2019-locus-recommended-reading-list/](https://locusmag.com/2020/02/2019-locus-recommended-reading-list/) \n\n2020: [https://locusmag.com/2021/02/2020-locus-recommended-reading-list/](https://locusmag.com/2021/02/2020-locus-recommended-reading-list/)\n\nIn addition, if you want a *fuller* list (not just their recommended titles), their yearly directories of books they reviewed/looked at/have information about also have nonfiction sections: \n\n2016: [http://www.locusmag.com/2016/Directory2.html#nf](http://www.locusmag.com/2016/Directory2.html#nf) \n\n2017: [https://locusmag.com/2017-directory-page-2/#nf](https://locusmag.com/2017-directory-page-2/#nf) \n\n2018: [https://locusmag.com/2018-directory/#nf](https://locusmag.com/2018-directory/#nf) \n\n2019: [https://locusmag.com/2019-directory/#nf](https://locusmag.com/2019-directory/#nf) \n\nSadly there's no 2020 directory link.", "created": 1617301863.0, "author": "kjmichaels", "score": 26, "replies": [{"body": "Thanks for this, I have found something that I am SUPER excited to read!", "created": 1617391189.0, "author": "DemiLisk", "score": 3, "replies": [], "commentid": "gt65l0m"}], "commentid": "gt24xqc"}, {"body": "This is the perfect time to read T**he Dark Fantastic: Race and the Imagination from Harry Potter to the Hunger Games** by [Ebony Elizabeth Thomas](https://www.goodreads.com/author/show/6194760.Ebony_Elizabeth_Thomas)\n\nI've  had it on my radar for a year or so.", "created": 1617298121.0, "author": "colorsneverfaded", "score": 24, "replies": [], "commentid": "gt1wkg1"}, {"body": "*Dreams Must Explain Themselves: the Selected Non-Fiction of Ursula K. LeGuin* is a wonderful book. It came out in 2018 so it counts for hard mode, although many of the essays are much older.", "created": 1617297053.0, "author": "GALACTIC-SAUSAGE", "score": 22, "replies": [], "commentid": "gt1u6pd"}, {"body": "When this was about last time I read/listened to Neil Gaiman's *The* *View from the Cheap Seats.* It's a collection of his articles and essays. He reads the audiobook himself, which makes it extra good. \n\n*The Secret Loves of Geeks* (The Sequel to the Secret Love of Geek Girls) is an interesting anthology looking at how authors, illustrators and more got into genre fiction and their experiences with it.", "created": 1617296811.0, "author": "adventuresinplot", "score": 12, "replies": [], "commentid": "gt1tnn7"}, {"body": "**Wonderbook** by Jeff VanderMeer is a SFF-focused writing craft book. Read it last week, and I'd recommend it.", "created": 1617303330.0, "author": "Dsnake1", "score": 12, "replies": [{"body": "I was searching for the ebook, and discovered it is available on EBSCO - you can access it for free through your public of school library. You can only download 100 pages, but if you have remote access you can read it whenever you feel like it. It is a beautiful book!", "created": 1623803861.0, "author": "cmha150", "score": 2, "replies": [], "commentid": "h1wwe5n"}, {"body": "Oh I love Wonderbook! Bought it for myself last year and have been dipping in and out when I am in the mood to curl up in my comfy chair and have a reflective break. It\u2019s gorgeous to look at - definitely needs to be in physical form for me", "created": 1617454585.0, "author": "blahdee-blah", "score": 2, "replies": [], "commentid": "gt8ous6"}, {"body": "I have slowly been reading this for the last little while. Lots to absorb! It's a great book, for sure.", "created": 1617324971.0, "author": "GALACTIC-SAUSAGE", "score": 1, "replies": [], "commentid": "gt3f4sn"}], "commentid": "gt281ub"}, {"body": "One of the best resources for non fiction SFF books I have found is Locus magazine. They publish a recommended reading list every February and there is always a non-fiction section of books. \n\n[Link](https://locusmag.com/2021/02/2020-locus-recommended-reading-list/) to this year's list", "created": 1617297124.0, "author": "JiveMurloc", "score": 9, "replies": [], "commentid": "gt1ucii"}, {"body": "The last time I did this square I read Jo Walton's *What Makes This Book Great* which led me to many new different books to pile onto Mount TBR", "created": 1617296066.0, "author": "BitterSprings", "score": 24, "replies": [{"body": "I\u2019ve been meaning to read Walton\u2019s non-fiction for a while. Guess this is the year it happens", "created": 1617297134.0, "author": "Fryktelig_variant", "score": 5, "replies": [], "commentid": "gt1udc4"}], "commentid": "gt1s0m1"}, {"body": "Geek Elders Speak, published by Forest Path Books, fits hard mode for this square.\n\n It's a collection of essays by women about their experience in fandom. I'd personally recommend reading a couple or a few at a time in between other books \u2014 rather than reading it all at once.", "created": 1617296143.0, "author": "Kopratic", "score": 8, "replies": [], "commentid": "gt1s6t7"}, {"body": "Would a book about a specific SFF book (or other form of media) count? I just bought *Inside Black Mirror* by Charlie Brooker and Annabel Jones, about the TV show. (Also in this category would be As You Wish by Cary Elwes, if anyone is interested. It is fantastic.)", "created": 1617297552.0, "author": "triftmakesbadchoices", "score": 9, "replies": [{"body": "I sure hope so! I have As You Wish and this would be a great way to nudge it up the list.", "created": 1617494879.0, "author": "oirish97", "score": 3, "replies": [{"body": "I\u2019m counting it. I figure it can\u2019t be any farther removed from fantasy than \u201cessays from a SFF writer.\u201d", "created": 1617495396.0, "author": "triftmakesbadchoices", "score": 1, "replies": [], "commentid": "gtargqw"}], "commentid": "gtaqm4r"}], "commentid": "gt1va2k"}, {"body": "I'm reading The World of Critical Role by Liz Marsham and loving it, but I imagine it's only interesting if you're a fan of Critical Role!\n\n(contains spoilers for all of campaign one and up to episode \\~95 of campaign two)", "created": 1617299148.0, "author": "RubiscoTheGeek", "score": 7, "replies": [], "commentid": "gt1z0hq"}, {"body": "**Hard Mode Books:**\n\n* **The Geek Feminist Revolution** by Kameron Hurley (also works for BotM)\n* **Appropriately Aggressive: Essays About Books, Corgis, and Feminism** by Krista D. Ball\n* **The Ministry of Truth: The Biography of George Orwell's \"1984\"** by Dorian Lynskey\n* **Broken Places &amp; Outer Spaces: Finding Creativity in the Unexpected** by Nnedi Okorafor\n* **Daemon Voices: On Stories and Storytelling** by Philip Pullman\n\n**Regular Mode Books:**\n\n* **The Black Count: Glory, Revolution, Betrayal, and the Real Count of Monte Cristo** by Tom Reiss (if you consider *The Count of Monte Cristo* to be fantastical enough), but it was published in 2012.\n* **On Writing: A Memoir of the Craft** by Stephen King\n* **Understanding Comics: The Invisible Art** by Scott McCloud (graphic novel)\n* **Why Not Catch-21?** by Gary Dexter (essays about the references in famous book titles. Not all are SFF.)\n* **A Tolkien Bestiary** by David Day (massive coffee table book with illustrations and details about creatures of Middle Earth)\n\nThere are also a number of biographies of actors from major SFF shows that may be of interest.", "created": 1617301092.0, "author": "SmallFruitbat", "score": 8, "replies": [{"body": "&gt; Appropriately Aggressive: Essays About Books, Corgis, and Feminism\n\nDedicated to r/Fantasy! aww", "created": 1620496265.0, "author": "potterhead42", "score": 3, "replies": [], "commentid": "gxeqqwf"}], "commentid": "gt23b25"}, {"body": "Does anyone have any recommendations for nonfiction about LGBT/queer representation in SFF?  It feels like this must exist, but I'm having a bit of trouble finding anything.", "created": 1617395819.0, "author": "CJGibson", "score": 7, "replies": [{"body": "I can't think of a single one honestly.", "created": 1617413490.0, "author": "KristaDBall", "score": 2, "replies": [{"body": "I may fall back on reading Carmen Maria Machado's memoir, but I'd kind of prefer something broadly about the topic. If you come across anything, I'd love to know about it.", "created": 1617417491.0, "author": "CJGibson", "score": 1, "replies": [{"body": "I'll let you know if something comes to mind, or if I find a new one", "created": 1617417827.0, "author": "KristaDBall", "score": 2, "replies": [], "commentid": "gt7i3dw"}], "commentid": "gt7hj8w"}], "commentid": "gt7arv6"}, {"body": "I haven't read it, but in my search for this square I came across **Old Futures: Speculative Fiction and Queer Possibility** by Alexis Lothian.", "created": 1617834116.0, "author": "RovingManor", "score": 5, "replies": [], "commentid": "gtqpjwq"}, {"body": "[https://www.goodreads.com/book/show/353325.The\\_Motion\\_of\\_Light\\_in\\_Water?from\\_search=true&amp;from\\_srp=true&amp;qid=Lkkxnw7RNL&amp;rank=12](https://www.goodreads.com/book/show/353325.The_Motion_of_Light_in_Water?from_search=true&amp;from_srp=true&amp;qid=Lkkxnw7RNL&amp;rank=12)\n\nI'm surprised nobody has mentioned this--it's exactly what you're looking for!", "created": 1618585619.0, "author": "pagevandal", "score": 2, "replies": [], "commentid": "guqd1ua"}], "commentid": "gt6etop"}, {"body": "Don\u2019t know how it is but *Astounding: John W Campbell, Isaac Asimov, Robert Heinlein, L. Ron Hubbard, and the Golden Age of Science Fiction* by Alec Nevala-Lee, was recommended to me and would fit", "created": 1617312677.0, "author": "endless_warehouse", "score": 2, "replies": [{"body": "There's a really good interview with the author on a recent episode of the Our Opinions Are Correct podcast - it wasn't really something I thought be interested in until I listened!", "created": 1617468771.0, "author": "psyche_13", "score": 4, "replies": [], "commentid": "gt9dspd"}], "commentid": "gt2s42q"}, {"body": "I recommend  [The Letters of J.R.R. Tolkien by J.R.R. Tolkien](https://www.goodreads.com/book/show/20882513-the-letters-of-j-r-r-tolkien) . Some wonderful insights into the creation of his legendarium.", "created": 1617326870.0, "author": "BohemianPeasant", "score": 2, "replies": [], "commentid": "gt3ie1v"}, {"body": "Ursula K. Le Guin has published a number of essay collections about writing that I recommend checking out.\n\nAlso if you're interested in one of the most interesting figures in classic sf,  ***Meet Me At Infinity*****: The Uncollected Tiptree: Fiction and Nonfiction** is what I'm planning on reading for this square.", "created": 1617308515.0, "author": "thequeensownfool", "score": 6, "replies": [], "commentid": "gt2j8ec"}, {"body": "I heartily recommend **Disfigured** by Amanda Leduc (hard mode), which examines disability in fairy tales and superhero narratives.", "created": 1617328346.0, "author": "historicalharmony", "score": 2, "replies": [], "commentid": "gt3kx7q"}, {"body": "I've been eyeing **Monster, She Wrote: The Women Who Pioneered Horror and Speculative Fiction** by Lisa Kroger for a while now - glad to have a reason to pick it up. I believe it's also illustrated!\n\nLast time I read **Sleeping With Monsters: Readings and Reactions in Science Fiction and Fantasy** by tor.com reviewer, Liz Bourke.", "created": 1617317397.0, "author": "perditorian", "score": 6, "replies": [], "commentid": "gt31fwn"}, {"body": "If anybody has read it, would Mallory O'Meara's **The Lady From The Black Lagoon** fit here?  If I understand correctly, it's a biography of Millicent Patrick, who did special effects on *The Creature from the Black Lagoon* movie.  It got nominated for a Hugo, so I would think that means it's close enough to SFF-related, and it came out in 2019 so it counts for hard mode, too.\n\nI'll also recommend Ryan North's **How To Invent Everything: A Survival Guide for the Stranded Time Traveler**, which is an absolutely hilarious book that is exactly what it says on the tin.", "created": 1617376883.0, "author": "Phyrkrakr", "score": 1, "replies": [], "commentid": "gt5ct9l"}, {"body": "**An Informal History of the Hugos: A Personal Look Back at the Hugo Awards, 1953-2000**, Jo Walton (Tor) - counts for HM.  I picked this up a couple years ago, I think when Krista D. Ball recommended it.  It was a great read and it helped me a ton in finding  classic SF titles for my book club.\n\n**As You Wish: Inconceivable Tales from the Making of The Princess Bride** by Cary Elwes.  I listened to this on audio and it was pleasant.  Not earth shattering, but enjoyable with some good little tidbits.  The audio is mostly read by Cary Elwes with some of the other cast and Rob Reiner reading parts.  It came out in 2014, so just a bit too old for HM.", "created": 1617424672.0, "author": "Tigrari", "score": 3, "replies": [], "commentid": "gt7sibu"}, {"body": "**'Alien and Philosophy: I infest, therefore I am'** (2017)\n\nA series of essays that interrogate the philosophy you can find within the four Ripley films of the *Alien* franchise.", "created": 1617302061.0, "author": "raix-corvus", "score": 3, "replies": [], "commentid": "gt25ccr"}, {"body": "Does any one know if **The rivan codex** by David Eddings fits this square or is that too much fic and not enough facts?", "created": 1621793047.0, "author": "The_knug", "score": 1, "replies": [], "commentid": "gz6og8y"}, {"body": "For the German speaking population: **Niegeschichte by Dietmar Dath**. This counts for hard mode.", "created": 1617303898.0, "author": "knuffigerork", "score": 5, "replies": [], "commentid": "gt299qm"}, {"body": "I read it last year but any one who likes the Universal Monsters might want to check out The Lady From the Black Lagoon about Millicent Patrick who designed the Creature from the Black Lagoon. Its from 2019.", "created": 1617306996.0, "author": "cmmosher", "score": 3, "replies": [], "commentid": "gt2fzi5"}, {"body": "I have two kind of unconventional recommendations.\n\n[\"Go Team Venture!: The Art and Making of The Venture Bros.\"](https://www.powells.com/book/go-team-venture-the-art-making-of-the-venture-bros-9781506704876) would qualify for HM. It is an art book, but it is extremely hefty and goes deep into the creative process and thinking behind each episode and between each season. It's one of the funniest and most inspiring books about the creative process that I know.\n\nThe other one is [\"Manga in Theory and Practice\"](https://www.powells.com/book/manga-in-theory-practice-the-craft-of-creating-manga-9781421594071) by Hirohiko Araki, aka the JoJo's Bizarre Adventure guy. Despite the title, the book is really a more general look at the process of storytelling, thus I would recommend it to anyone interested in telling stories, not just drawing them. Unlike the above Venture Bros. book, I would recommend it even if you've never watched or read JoJo. I'm unsure if this counts for HM because the English translation came out in 2017, but the original Japanese version came out in 2015.", "created": 1617552941.0, "author": "DoctorCello", "score": 1, "replies": [], "commentid": "gtcxtjl"}, {"body": "For anyone with an interest in horror, I recommend **End of the Road** by Brian Keene, which will work for hardcore. It's it's a gonzo journalism -style account of the last cross country signing trip he did with musings on the horror genre and the world at large and it's up for a Stoker Award.\n\nFor anyone who was a Babylon 5 fan back in the day, JMS's **Becoming Superman** would be a good hardcore pick as well.", "created": 1617305045.0, "author": "PennsylvaniaWeirdo", "score": 3, "replies": [], "commentid": "gt2bqr6"}, {"body": "*I Am Not Spock* and *I Am Spock*, Leonard Nimoy's autobiographies.\n\nSome good pop-sci books, for example *Physics of the Impossible*, Michio Kaku; *The Physics of Star Trek*, Lawrence M. Krauss. Also Asimov has a ton of essays and pop-sci writings.\n\n*Sci-Fi Movie Freak*, Robert C. Ring.\n\n*Strange and Amazing Facts about Star Trek*, Daniel Cohen.\n\n*The Ultimate Star Trek and Philosophy: The Search for Socrates*, ed. Kevin S. Decker. (Published April 4th, 2016, so it should qualify for hard mode.)", "created": 1617301126.0, "author": "smartflutist661", "score": 5, "replies": [], "commentid": "gt23do5"}, {"body": "How about a book on various RW mythologies that have influenced fantasy? For example, the Elder Edda which I have sitting on my shelf, or a book on RW Shamanic practices, which have shown up in fantasy SF.", "created": 1617327717.0, "author": "Kerney7", "score": 2, "replies": [], "commentid": "gt3jug4"}, {"body": "I'll be reading Terry Pratchett's A Slip of the Keyboard for this one. I'd recommend Neil Gaiman's The View From the Cheap Seats, Stephen King's On Writing and Ursula le Guin's Dreams Explain Themselves", "created": 1617304789.0, "author": "soullesssunrise", "score": 4, "replies": [], "commentid": "gt2b74y"}, {"body": "If video games are ok, then I can recommend *The Heart of Dead Cells* by Beno\u00eet Reinier. A very interesting hybrid between art book and behind the scenes book of the video game **Dead Cells**.", "created": 1617301227.0, "author": "Axeran", "score": 2, "replies": [], "commentid": "gt23lfg"}, {"body": "**The Road to the Dark Tower: Exploring Stephen King's Magnum Opus** by Bev Vincent\n\n**Worldbuilding For Fantasy Fans And Authors** by MD Presley (HM)", "created": 1617315137.0, "author": "eightslicesofpie", "score": 2, "replies": [], "commentid": "gt2x2bh"}, {"body": "I recently listened to **The Science of Sci-Fi From Warp Speed to Interstellar Travel** by Erin Macdonald and really enjoyed it. It's included in the Plus membership on audible \n\nI also love Krista D. Ball's **What Kings Ate and Wizards Drank** about what food you could include in writing medieval-ish fantasy beyond bread and cheese", "created": 1617345233.0, "author": "Dianthaa", "score": 3, "replies": [], "commentid": "gt4904e"}], "commentid": "gt1p78l"}, {"body": "**Found Family** \\- Or as TV Tropes calls it - Family of Choice. Often not biologically related, these relationships in a group typically form through bonds of shared experiences and become as important (in some cases more) as family members. **HARD MODE:**  Featuring an LGBTQ+ character as a member of the found family.", "created": 1617294720.0, "author": "kjmichaels", "score": 19, "replies": [{"body": "The House in the Cerulean Sea fits Hard Mode. (but I suspect most of us already used it for the 2020 Bingo haha)", "created": 1617297138.0, "author": "ullsi", "score": 63, "replies": [{"body": "Damn i can't believe i am just finding out about this book. It's perfect for me.", "created": 1617298783.0, "author": "phonz1851", "score": 20, "replies": [{"body": "It's like reading a hug. :) It definitely fits the Comfort Read square as well.", "created": 1617299935.0, "author": "ullsi", "score": 11, "replies": [], "commentid": "gt20tu1"}], "commentid": "gt1y5n0"}, {"body": "Such a great book. Anyone who hasn't read it is absolutely required to read it for Bingo 2021 (not really, but it is that good).", "created": 1617307177.0, "author": "kjmichaels", "score": 12, "replies": [{"body": "I agree - it should be part of the r/fantasy canon!", "created": 1617309060.0, "author": "ullsi", "score": 7, "replies": [], "commentid": "gt2kfg7"}], "commentid": "gt2gdns"}], "commentid": "gt1udlk"}, {"body": "Obligatory mention of The Long Way to a Small, Angry Planet by Becky Chambers (HM).", "created": 1617296469.0, "author": "kalina789", "score": 49, "replies": [{"body": "Would the sequel count for hard mode? Loved the first one!", "created": 1617300009.0, "author": "DrMDQ", "score": 3, "replies": [{"body": "Sequel definitely counts! It may be my favorite in the wayfarers series so far", "created": 1617303187.0, "author": "BombusWanderus", "score": 9, "replies": [{"body": "I\u2019m close to finishing and it\u2019s fucking amazing! Definitely a 10/10!! Shame I can\u2019t use it for the bingo.", "created": 1617319541.0, "author": "NoopGhoul", "score": 1, "replies": [{"body": "I\u2019m hoping the fourth one coming this month might count! For sure for this square or a comfort read", "created": 1617321191.0, "author": "BombusWanderus", "score": 4, "replies": [{"body": "The fourth one is excellent, and it definitely is in my list of comfort reads now \ud83d\ude0a", "created": 1617408879.0, "author": "soullesssunrise", "score": 3, "replies": [{"body": "Eep!! I cannot wait, thanks for building the hype!", "created": 1617420884.0, "author": "BombusWanderus", "score": 3, "replies": [], "commentid": "gt7mysi"}], "commentid": "gt72xvq"}], "commentid": "gt38gft"}], "commentid": "gt35g8e"}], "commentid": "gt27qsr"}], "commentid": "gt20zm8"}], "commentid": "gt1sx04"}, {"body": "**In Other Lands** by Sarah Rees Brennan fits hard mode and is one of my favorite books. It's a coming-of-age school fantasy comedy/ coming-of-age story in a secondary world that touches on ours and manages to deal with everything from \"will my iPod explode at this magical barrier?\" to \"what is the right way to deal with interpersonal and intercultural conflict?\".\n\nThe core found family consists of one pissy bisexual pacifist, one golden-boy gay fighter/genuine sweetheart, and one fierce straight elf warrior girl. They go through various permutations of friendship and dating, and the coming-out journeys are essential to the plot. Elliot, Luke, and Serene-Heart-in-the-Chaos-of-Battle are the intense weirdo table and now I *really* want to use this for my reread square.", "created": 1617297441.0, "author": "Nineteen_Adze", "score": 32, "replies": [{"body": "Bless you a thousand times for this suggestion.  I'm nearly done with Age 16, and I'm so in love.  How is Elliot such a shit but also I love him?  Serene is fantastic down the ground in all her glory and flaws.  And Luke?  Precious noodle!  My precious, precious noodle, oh god can I just protect him?  \n\nThey are the best weirdo table and I'm overcome.  I need to yell about this book to everyone I know, it's fantastic.  And how is it not more suggested around here?\n\nIt got me through a sleepless baby-related night, and oh man.  Could not love this book more.", "created": 1621517241.0, "author": "zinjadu", "score": 2, "replies": [{"body": "&gt;How is Elliot such a shit but also I love him? \n\nYES. You're very welcome! I'm so glad you like it-- I always love seeing how their flaws and bright spots play off each other. And a coming-of-age story that covers the whole teenage span like this gives you so much space for things to happen naturally instead of cramming character arcs into an action-packed week or month.\n\nAt a guess, some people are reluctant to try it because it was marketed/shelved in YA and that bracket gets tarred with an unfairly broad brush based on the most generic/trope-heavy stuff that's popular at a given time.\n\nIf you're interested in more of SRB's work, I *really* like the Lynburn Legacy trilogy. It's sort of a teen-Gothic adventure centered on a young reporter and the weird family who just moved back to town, with some slow-moving romance and excellent group friendships.\n\nThe last few chapters of In Other Lands are my very favorite part, and I envy you getting to read them for the first time. \\^\\^", "created": 1621530652.0, "author": "Nineteen_Adze", "score": 2, "replies": [{"body": "&gt;  I always love seeing how their flaws and bright spots play off each other. \n\nThey're such good kids... in their own weird ways.  \n\nI get that.  I'm a bit leery of YA, but your description got me over the hurdle and I'm so happy for it!  \n\nI'm for sure going to check out her other work.  New author, I'm so excited!", "created": 1621538628.0, "author": "zinjadu", "score": 3, "replies": [], "commentid": "gyuxcw0"}, {"body": "Update: I finished the book and AAAAH, I need more.  I can't remember the last time I went looking for fanfic after I finished a book.  I just... can I read it again already?!  But no, no I don't want to overdo it.\n\nI just.  THIS BOOK IS AMAZING.  And bless you a thousand more times for this suggestion.", "created": 1621606213.0, "author": "zinjadu", "score": 3, "replies": [{"body": "There's a short story from Luke's point of view called \"Wings in the Morning\" if you want another little taste. I *really* hope there's a full sequel one day too.\n\nSo glad you loved it!", "created": 1621624824.0, "author": "Nineteen_Adze", "score": 3, "replies": [{"body": "Might've already gone hunting for it!  Thank you!  And I hope there's a full sequel one day too.  I need more of those dumb-dumbs like I need air.", "created": 1621627920.0, "author": "zinjadu", "score": 3, "replies": [], "commentid": "gyzcxc4"}], "commentid": "gyz6e4a"}], "commentid": "gyy13fp"}], "commentid": "gyueb0q"}], "commentid": "gytiwpc"}, {"body": "Thank you for this recommendation, I am crying with laughter at this and have recommended it to some friends.", "created": 1620040142.0, "author": "lady_gryphon", "score": 3, "replies": [{"body": "You're very welcome, and I'm so glad you like it! I always love how funny and how emotional it can be.", "created": 1620046053.0, "author": "Nineteen_Adze", "score": 2, "replies": [], "commentid": "gwryza0"}], "commentid": "gwrp4bf"}], "commentid": "gt1v1h7"}, {"body": "I think The Expanse books fit for this, plus book nine comes out later this year!", "created": 1617297675.0, "author": "librarylackey", "score": 22, "replies": [{"body": "ooh yes, I've been wanting to continue that series!", "created": 1617298264.0, "author": "ullsi", "score": 6, "replies": [], "commentid": "gt1wxgt"}], "commentid": "gt1vjpt"}, {"body": "*The Long Way to a Small, Angry Planet* by Becky Chambers works for hard mode!\n\nThe *Circle of Magic* books by Tamora Pierce also work; technically hard mode but characters aren't openly revealed to be LGBTQ until much later in the series.\n\nETA: *Winter Tide* by Ruthanna Emrys also works for hard mode! It's a lovely take on Lovecraft's work, dealing with trying to rebuild a life after being kept in the WWII internment camps and in a USA that still doesn't trust you. Found family is one of the major themes in the book and there are LGBTQ characters galore.", "created": 1617296697.0, "author": "sophia_s", "score": 20, "replies": [{"body": "I thought Circle Of Magic right away too!", "created": 1617297042.0, "author": "dasatain", "score": 11, "replies": [{"body": "It's the ultimate found family story!", "created": 1617298262.0, "author": "sophia_s", "score": 10, "replies": [], "commentid": "gt1wxbv"}], "commentid": "gt1u5sn"}], "commentid": "gt1tetg"}, {"body": "**The Books of the Raksura** are an excellent fit. And honestly, sticking with Martha Wells, I think you could make a good argument for **Network Effect** (Murderbot book #5)", "created": 1617299401.0, "author": "tarvolon", "score": 16, "replies": [{"body": "Are they HM too?", "created": 1617393180.0, "author": "WWTPeng", "score": 1, "replies": [{"body": "I suppose they are...Raksura are non-humans, but they\u2019re bisexual", "created": 1617393223.0, "author": "tarvolon", "score": 2, "replies": [], "commentid": "gt69os2"}], "commentid": "gt69lmg"}, {"body": "I agree with both your recommendations.", "created": 1617301533.0, "author": "ullsi", "score": 2, "replies": [], "commentid": "gt248qv"}], "commentid": "gt1zmao"}, {"body": "My book, *Kitra*, fits the found family square! The main character is a young, Turkish woman who also happens to be bi - so it works for hard mode as well.", "created": 1617300732.0, "author": "GideonMarcus", "score": 15, "replies": [{"body": "I\u2019ve slotted it on my card. Thanks for posting!", "created": 1617346007.0, "author": "cheryllovestoread", "score": 1, "replies": [], "commentid": "gt49thc"}], "commentid": "gt22jkt"}, {"body": "- Fragile Remedy by Maria Ingrande-Mora (HM)\n- Kitra by Gideon Marcus (HM)\n- Mage Errant series by John Bierce (HM)\n- The Last Sun by K. D. Edwards (HM)", "created": 1617296106.0, "author": "eriophora", "score": 10, "replies": [{"body": "What does HM stand for? I keep seeing this.", "created": 1617325595.0, "author": "SimAhRi", "score": 2, "replies": [{"body": "OOOOh. It's hard mode, isn't it?", "created": 1617325619.0, "author": "SimAhRi", "score": 10, "replies": [{"body": "Now you\u2019re part of the cool kids\u2019 club. You\u2019ll be using bingo lingo like a pro in no time! \ud83d\ude0e", "created": 1617345649.0, "author": "cheryllovestoread", "score": 7, "replies": [], "commentid": "gt49fw9"}], "commentid": "gt3g8vx"}, {"body": "It's short for \"Hard Mode\" :)", "created": 1617326003.0, "author": "eriophora", "score": 3, "replies": [], "commentid": "gt3gwav"}], "commentid": "gt3g7fy"}], "commentid": "gt1s3rp"}, {"body": "* Cemetery Boys by Aiden Thomas HM\n* Raybearer by Jordan Ifueko HM\n* A Song Below Water by Bethany C. Morrow\n* Catfishing on Catnet by Naomi Kritzer HM", "created": 1617297768.0, "author": "Dianthaa", "score": 9, "replies": [{"body": "Do you think Redemptor by Jordan Ifueko would also count? I loved Raybearer and would love to use the sequel in my bingo square", "created": 1617355652.0, "author": "FromTheStars24", "score": 1, "replies": [{"body": "My memory of the ending of Raybearer is very foggy, but seeing how central it was in book 1 I'd been very surprised if there wasn't some of it in book 2. I plan to read it  but obv haven't yet.", "created": 1617356141.0, "author": "Dianthaa", "score": 2, "replies": [{"body": "I'll still read it either way but would be happy if it fitted here", "created": 1617356975.0, "author": "FromTheStars24", "score": 1, "replies": [], "commentid": "gt4k6ig"}], "commentid": "gt4jelb"}], "commentid": "gt4iyb8"}], "commentid": "gt1vqzf"}, {"body": "- The Vanished Birds by Simon Jimenez  \n- Wayfarers by Becky Chambers", "created": 1617296389.0, "author": "TheFourthReplica", "score": 9, "replies": [], "commentid": "gt1sqna"}, {"body": "The Dreamer's Pool trilogy by Juliet Marillier should count for this one.\n\nEvery Heart a Doorway by Seanen McGuire\n\nHowl's Moving Castle by Diana Wynne Jones\n\nSix of Crows by Leigh Bardugo\n\nThe Long Way to a Small Angry Planet by Becky Chambers\n\nThe Host by Stephanie Meyer\n\nHeart of Ice by K.M. Shea\n\nThe Goose Girl by Shannon Hale\n\nWould Kings of the Wyld and Bloody Rose by Nicholas Eames count?", "created": 1617296850.0, "author": "Asheweaver", "score": 25, "replies": [{"body": "&gt; Would Kings of the Wyld and Bloody Rose by Nicholas Eames count?\n\nYes, absolutely.  Both count for HM as well.", "created": 1617420337.0, "author": "Tigrari", "score": 2, "replies": [], "commentid": "gt7m3m4"}], "commentid": "gt1tqny"}, {"body": "I wonder if the latest Wayfarer book counts for this! I'll be reading it either way, but it would be nice if it fits into bingo!", "created": 1617297176.0, "author": "EmpressRey", "score": 7, "replies": [{"body": "Mmh, not really I think? \n\nIts more about a chance meeting of very different individuals and how they influence each other and potentially their lifes going forward. I didn't get the feeling of a family as much as in angry planet or common orbit tbh.", "created": 1619355957.0, "author": "Krystall_Waters", "score": 2, "replies": [], "commentid": "gvtbs6s"}], "commentid": "gt1ugl7"}, {"body": "**A Long Way to a Small Angry Planet** by Becky Chambers\n\n**All Systems Red** by Martha Wells (H?)\n\n**The House in the Cerulean Sea (H)** by T.J. Klune \n\n**Station Eleven** by Emily St. John Mandel\n\n**The Sparrow** by Mary Doria Russell\n\n**Borne** by Jeff VanderMeer (both heartwarming and fucked up in your usual \"what the fuck is happening\" VaderMeer way. I LOVE Borne)\n\n**Percy Jackson Series** by Rick Riordan\n\n**The Singer of All Songs** by Kate Constable\n\n**The Girl with All the Gifts** by M.R. Carey \n\n**The Raven Cycle (H)** by Maggie Stiefvater \n\n**A Robot in the Garden** by Deborah Install \n\nAny **Harry Potter** book\n\n**The Drawing of the Three** (Book #2 in The Gunslinger series) by Stephen King (it's possible more of the books count, but this one is the most obvious)\n\n**The Host** by Stephenie Meyer (I read this a long time ago as a teenager, but remember finding it very compelling with the society hidden in the desert)", "created": 1617297950.0, "author": "fuckit_sowhat", "score": 19, "replies": [{"body": "Read Borne for last year's bingo, it's indeed and excellently fucked-up choice for this square.", "created": 1617298728.0, "author": "RevolutionaryCommand", "score": 2, "replies": [], "commentid": "gt1y0r1"}], "commentid": "gt1w5r3"}, {"body": "* anything by Becky Chambers (hard mode)  \n* **The Tarot Sequence** by K.D. Edwards (hard mode)  \n* **Seven Summer Nights** by Harper Fox (hard mode)  \n* **The House in the Cerulean Sea** by T.J. Klune (hard mode)  \n* most **Valdemar** books by Mercedes Lackey, but especially the Arrows trilogy  \n* most **Wayward Children** novellas by Seanan McGuire    \n* **The Heretic's Guide to Homecoming** by Sienna Tristen (probably?)    \n* **The Goblin Emperor** by Katherine Addison     \n* **Books of the Raksura** by Martha Wells    \n* **In Other Lands** by Sarah Rees Brennan (hard mode)  \n* **Winter Tide** by Ruthanna Emrys (I think? Been a while. Also it's hard mode.)  \n* **Upright Women Wanted** by Sarah Gailey (hard mode)  \n* **The Imaginary Corpse** by Tyler Hayes", "created": 1617321675.0, "author": "improperly_paranoid", "score": 7, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617322170.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt3a7tm"}], "commentid": "gt39bt5"}, {"body": "I've read all but the last of the Wayfarers books by Becky Chamber, and I'd say all fit the bill. All are about finding family and home, each book brimming with so much compassion. Truly optimistic SF.", "created": 1617308323.0, "author": "MaaDFoXX", "score": 2, "replies": [], "commentid": "gt2it8g"}, {"body": "Does Winter's Orbit work for that prompt?", "created": 1619029424.0, "author": "AggravatingAnt4157", "score": 1, "replies": [], "commentid": "gvcp5kz"}, {"body": "*One Piece* can cover hard mode here.", "created": 1617326577.0, "author": "Lesserd", "score": 1, "replies": [], "commentid": "gt3hvkb"}, {"body": "There's some pretty great found families in webfiction. I'm particularly fond of the ongoing, but split into big book sized books **Practical Guide to Evil** by erraticerrata.   \n\n\n**Worm** should also count (and Ward maybe? I havent read it).", "created": 1617300740.0, "author": "daavor", "score": 3, "replies": [{"body": "**Practical Guide to Evil** also counts for hard mode because the MC is bi.  The first six-10 chapters or so of the first book are kinda rough, but it's worth sticking with it.  By the time Catherine gets to the War College, I was in love with the story and devoured it from there on.", "created": 1617309438.0, "author": "Phyrkrakr", "score": 2, "replies": [], "commentid": "gt2l8zf"}, {"body": "&gt; (and Ward maybe? I havent read it).\n\nWard would definitely fit! And it works for hard mode.", "created": 1617315029.0, "author": "perditorian", "score": 2, "replies": [], "commentid": "gt2wuiz"}, {"body": "**Pale by Wildbow** 100% counts and would be hard mode. It's not finished yet, but should be this year.\n\nIt also counts for Cat Smusher (it's at 1,000,000+ words now), Trans/NB (not HM, but there's a POV interlude), and Witches (HM). It will probably count for Forest Setting also.\n\nWard would also count, as would Twig (though that's less found family than made family).", "created": 1617399951.0, "author": "DamnitRuby", "score": 1, "replies": [], "commentid": "gt6mray"}], "commentid": "gt22k99"}, {"body": "Tales of the Ketty Jay series by Chris Wooding\n\nExtraordinary Adventures of the Athena Club series by Theodora Goss", "created": 1617298552.0, "author": "RubiscoTheGeek", "score": 3, "replies": [], "commentid": "gt1xlhr"}, {"body": "Any of Will Wight's Cradle books, in my opinion", "created": 1617335759.0, "author": "acexacid", "score": 1, "replies": [], "commentid": "gt3wxi3"}, {"body": "Was asked to reply to each relevant tile, so here we go!\n\n[Cradle of Sea and Soil](https://www.amazon.com/Cradle-Sea-Soil-Islandborn-Book-ebook/dp/B08936MB2T), by me, Bernie An\u00e9s Paz.\n\nNarune, the son POV, has a close relationship with his only two friends and eventually lives alongside one when his mother begins to care for that friend. He also has a father figure who mentors him and is romantically involved with his mother despite his station forbidding him from marrying or having children without approval, which isn't given lightly.\n\n**HARD MODE:** Featuring an LGBTQ+ character as a member of the found family.\n\nColibr\u00ed, the mother of the other POV, is bisexual (most of the Islandborn are), though the culture of the tribes removes all emphasis on gender or sexuality as a qualifier. Traditionally male and female gender roles do still exist (fighters/hunters and homemakers/gathers who raise the children), but they exist in a warrior-warden dynamic that has nothing to do with gender or sexuality (you grow up and choose between giving a warrior's oaths or a warden's oaths). \n\nWardens vow to protect the homes of warriors and safeguard their children, and also ensure warriors have arms willing to embrace them when they return from the horrors of the forest.", "created": 1617803310.0, "author": "BernieAnesPaz", "score": 2, "replies": [], "commentid": "gtorlne"}, {"body": "I think you can argue Stormlight for this with Kaladin and Bridge Four. Even the hardmode fits.", "created": 1617296625.0, "author": "phonz1851", "score": 11, "replies": [{"body": "Bridge Four is absolutely a found family!", "created": 1617299128.0, "author": "Frostguard11", "score": 7, "replies": [], "commentid": "gt1yyot"}], "commentid": "gt1t95x"}, {"body": "My book, Dive: Endless Skies, fits for Found Family on regular mode. A young woman goes on a quest in a virtual world and finds a courage, power, and acceptance in a team of guild mercenaries.", "created": 1621575877.0, "author": "ChrisReign", "score": 1, "replies": [], "commentid": "gywwhbd"}, {"body": "*The City We Became* fits, and ticks the box for hard mode too.", "created": 1617332040.0, "author": "in_niz_bogzarad", "score": 3, "replies": [], "commentid": "gt3r63u"}, {"body": "* **The Vanished Birds** by Simon Jimenez\n* **A Tale of Stars and Shadow** by Lisa Cassidy", "created": 1617298959.0, "author": "barb4ry1", "score": 1, "replies": [], "commentid": "gt1ykod"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares [here](https://www.reddit.com/r/Fantasy/comments/npvcfe/spfbo_7_is_now_live_megathread/h0kt8cd?utm_source=share&amp;utm_medium=web2x&amp;context=3).\n\nFor this square, they are:\n\nThe Demons We See by Krista D Ball\n\nQuantum Cultivation by Jace Kang\n\nSpirit of Shadow by D. A. Holley\n\nSair\u014d's Claw by Virginia McClain\n\nAlong the Razor's Edge by Rob J Hayes\n\nWindward by S. Kaeth\n\nThe Iron Crown by LL MacRae\n\nArmy of the Cursed by Karim Soliman\n\nThrone of Ice and Ash by J. D. L. Rosell\n\nBy the Pact by Joanna Maciejewska\n\nStone &amp; Shield by Thomas J Devens\n\nSword of Cho Nisi by D.L. Gardner\n\nDive: Endless Skies by Chris Reign", "created": 1622824085.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0l0zsm"}, {"body": "**The Host** by Stephanie Myer\n\n**A Tale of Stars and Shadow** by Lisa Cassidy\n\n**Sufficiently Advanced Magic** by Andrew Rowe\n\n**Truthwitch**  by Susan Dennard", "created": 1617301130.0, "author": "lightning_fire", "score": 5, "replies": [], "commentid": "gt23e0p"}, {"body": "**The Lightning-Struck Heart** and sequels by TJ Klune. I would say Gary, Tiggy, Morgan, and Kevin are at least as important to Sam as his parents and love interest. Definitely meets hard mode many times over!", "created": 1617303823.0, "author": "StarlightEstel", "score": 6, "replies": [], "commentid": "gt2941y"}, {"body": "Love this trope!\n\n* The Raven Cycle by Maggie Steifvater (HM)\n* The Others by Anne Bishop\n* The Emperor's Edge by Lindsay Buroker (HM)", "created": 1617299513.0, "author": "Dragon_Lady7", "score": 1, "replies": [], "commentid": "gt1zvwp"}, {"body": "Demon Haunted (explicit), Demons Within (less explicit), both by me, Ashe Armstrong.", "created": 1617304655.0, "author": "ashearmstrong", "score": 4, "replies": [], "commentid": "gt2awjv"}, {"body": "Would **The Stone Sky** count? I feel like the first two in the trilogy count, but in the third one &gt;!most everyone is dead!&lt;.", "created": 1617300175.0, "author": "CurvatureTensor", "score": 1, "replies": [], "commentid": "gt21ck5"}, {"body": "My Collaborator series (Traitor-Fugitive-Rebel) fits this for hard mode. \n\nI think [this review](https://www.reddit.com/r/Fantasy/comments/8oi6q2/review_traitor_by_krista_d_ball_another_journey/) summarizes the series well.", "created": 1617332620.0, "author": "KristaDBall", "score": 1, "replies": [], "commentid": "gt3s40q"}, {"body": "It may have already been mentioned, but **The Black Veins** by Ashia Monet is a perfect HM choice!", "created": 1617488681.0, "author": "quigukipromqueen", "score": 1, "replies": [], "commentid": "gtag28r"}, {"body": "*The Mask of Mirrors* by M.A. Carrick\n\n*The Forever Sea* by Joshua Philip Jackson", "created": 1617298627.0, "author": "StompyStompsalot", "score": 4, "replies": [], "commentid": "gt1xrvg"}, {"body": "* **The Gilda Stories** by Jewelle L Gomez \n\n* **The Strange Case of the Alchemist's Daughter** by Theodora Goss\n\n* **Raybearer** by Jordan Ifueko\n\n* **A Skinful of Shadows** by Frances Hardinge\n\n* **Twig** by Wildbow (okay, this is a chonker, but it's my favourite found family book)", "created": 1617301484.0, "author": "perditorian", "score": 4, "replies": [{"body": "Twig is an excellent choice for so many of these squares:\n\n* Found Family\n\n* 1st Person POV\n\n* Gothic Fantasy\n\n* Backlist Book\n\n* Revenge Seeking Character (debatable?)\n\n* Mystery Plot (debatable)\n\n* Cat Squasher\n\n* Self Published\n\n* Chapter Titles\n\n* Trans Character", "created": 1617308921.0, "author": "iceman012", "score": 3, "replies": [{"body": "Thanks for laying this out! Are any of those hard mode?", "created": 1617317171.0, "author": "Dyed_Productions", "score": 1, "replies": [{"body": "* Found Family - yes\n\n*  1st person POV - Nope\n\n* Gothic Fantasy - Yes\n\n* Backlist Book - No\n\n* Revenge Seeking Character - You know, I think that's really unclear.  It definitely is for some arcs.  Maybe even most?  but I'm not sure about the overall story. \n\n* Mystery Plot - Some arcs.  Early ones.  Not all. \n\n* Cat Squasher -  Yes.  At 1,000,000+ words, that is well covered.   Including hard mode.  Online, so considering a conversion of 500 words / page it comes in at 3,000 pages.  \n\n* Chapter Titles - No.  ETA:  Possibly doesn't count at all.  If it does, it's hard mode.  (Esprit de Corpse, Lamb to the Slaughter, etc.)  It's all a bit fuzzy, really.  Probably better not. \n\n* Trans Character - No.  \n\n* Self-published - No. (512 reviews)", "created": 1617324852.0, "author": "Vermilion-red", "score": 4, "replies": [{"body": "Thanks for answering! If you do count the story for the Chapter Titles square then it also counts for hard mode, but I suppose it is up for debate on whether the story counts for that square or not. \n\nI was thinking the arc titles would count as chapter titles, since they do split the story up into 20 pieces. Since each arc is the size of a novella and is further subdivided, then you could argue that the arc titles don't count as chapter titles at all. The size of the \"book\" makes it difficult to classify, so it's just up to whoever reads it.", "created": 1617333214.0, "author": "iceman012", "score": 2, "replies": [{"body": "Yeah, you're right.  Edited.", "created": 1617333623.0, "author": "Vermilion-red", "score": 1, "replies": [], "commentid": "gt3tp93"}], "commentid": "gt3t2ai"}], "commentid": "gt3exh4"}], "commentid": "gt310h5"}], "commentid": "gt2k4d6"}], "commentid": "gt2450k"}, {"body": "Fire Logic by Laurie J. Marks fits hard mode. It's the first book of a finished quartet.", "created": 1617394987.0, "author": "CaddyJellyby", "score": 1, "replies": [], "commentid": "gt6d6nf"}, {"body": "The Order of the Pure Moon Reflected in Water by Zen Cho fits Hard Mode.", "created": 1617357169.0, "author": "RevolutionaryCommand", "score": 3, "replies": [], "commentid": "gt4kd4e"}, {"body": "I just finished aGoT for the first time and I think it kinda fits because of &gt;!Jon and the brothers on the Wall!&lt;. However, I am new to bingo so let me know if it does not. Anway, I can't count this because I read most of the book before the date.", "created": 1617378604.0, "author": "_imagine_7", "score": 0, "replies": [], "commentid": "gt5g8vk"}, {"body": "Both books in my series *The Chronicler Saga* \\- ***Construct*** and ***Companion*** \\- contain found family elements!\n\nWhen I have some more time to compile some, I'll expand this comment with recs for other authors' books.", "created": 1617308884.0, "author": "Luke_Matthews", "score": 2, "replies": [], "commentid": "gt2k1dd"}, {"body": "**Strange Practice** by Vivian Shaw was a fun read and I think fits this well.  Hard mode.\n\nAlso the **Parasol Protectorate** series by Gail Carriger should hit hard mode too.", "created": 1617339665.0, "author": "Tigrari", "score": 1, "replies": [], "commentid": "gt42c4y"}, {"body": "The Book of the Ancestor by Mark Lawrence (series)\n\nThe Arm of the Sphinx by Josiah Bancroft\n\nThe Seventh Sword by Dave Duncan (series)\n\nDies the Fire by SM Stirling\n\nTigana by Guy Gavriel Kay", "created": 1617351778.0, "author": "apcymru", "score": 2, "replies": [], "commentid": "gt4ffxw"}, {"body": "Most **Valdemar** books fit for this. Of note is the **Arrows** trilogy. I'm pretty sure every single one fits hard mode, though for **Arrows** the LGBTQ+ characters are not in the limelight. Most of the other series in the universe have more central LGBTQ+ characters.", "created": 1617671080.0, "author": "beldaran1224", "score": 2, "replies": [], "commentid": "gtip722"}, {"body": "Does the order of the pure moon reflected in water count?", "created": 1620371944.0, "author": "Space_dragon05", "score": 1, "replies": [], "commentid": "gx8ya9n"}, {"body": "The Infinity Courts by Akemi Dawn Bowman", "created": 1617302861.0, "author": "Endalia", "score": 1, "replies": [], "commentid": "gt271bz"}], "commentid": "gt1p0hq"}, {"body": "**Forest Setting** \\-  This setting must be used be for a good portion of the book. **HARD MODE:** The entire book takes place in this setting.", "created": 1617294824.0, "author": "kjmichaels", "score": 17, "replies": [{"body": "Uprooted by Naomi Novik", "created": 1617297823.0, "author": "adventuresinplot", "score": 51, "replies": [{"body": "Is it hard mode?", "created": 1617360471.0, "author": "trilbynorton", "score": 1, "replies": [{"body": "It's not, there are scenes that take place in a city outside the forest.", "created": 1617365274.0, "author": "bubblegumgills", "score": 5, "replies": [{"body": "Oh, that's a shame. Hard mode for Forest Setting is turning out to be rather hard. Why can't fantasy authors be more considerate of online reading challenges?", "created": 1617365602.0, "author": "trilbynorton", "score": 20, "replies": [{"body": "[removed]", "created": 1617647887.0, "author": "[deleted]", "score": 3, "replies": [{"body": "Ooh I haven\u2019t read any Redwall, this may be a good excuse to do so. Any good entry points that may be hard mode?", "created": 1617846129.0, "author": "tarvolon", "score": 1, "replies": [], "commentid": "gtrd5oe"}], "commentid": "gthd6t6"}, {"body": "I mean, considering the forest is itself a character of sorts? Idk, I'd count it.", "created": 1617671430.0, "author": "beldaran1224", "score": 1, "replies": [], "commentid": "gtipva5"}], "commentid": "gt4tjn0"}], "commentid": "gt4t40x"}], "commentid": "gt4nk44"}], "commentid": "gt1vvcu"}, {"body": "The Greenhollow Duology: [Silver in the Wood](https://www.goodreads.com/book/show/43459657-silver-in-the-wood?from_search=true&amp;from_srp=true&amp;qid=oDtupmyjUA&amp;rank=1) and [Drowned Country](https://www.goodreads.com/book/show/49928905-drowned-country) \\- Emily Tesh - book 1 would qualify as hard mode as it takes place in and is about a magical forest. There's a case for book 2 qualifying too but a bit more tenuous.", "created": 1617298007.0, "author": "Krilllian", "score": 29, "replies": [{"body": "I'm now supremely miffed that I forgot to download the first book when Tor gave it away for free!", "created": 1617365335.0, "author": "bubblegumgills", "score": 3, "replies": [], "commentid": "gt4t6w3"}], "commentid": "gt1waj0"}, {"body": "Most of Juliet Marillier's books\n\nThe Bear and the Nightingale by Katherine Arden\n\nUprooted by Naomi Novik\n\nStardust by Neil Gaiman I would think\n\nThe Hunger Games by Suzanne Collins\n\nGraceling by Kristin Cashore\n\nSisters of the Winter Wood by Rena Rossner", "created": 1617298073.0, "author": "Asheweaver", "score": 21, "replies": [{"body": "Does Dreamer's Pool work?", "created": 1619028571.0, "author": "AggravatingAnt4157", "score": 1, "replies": [], "commentid": "gvcn57h"}], "commentid": "gt1wg5i"}, {"body": "**Regular Mode:**\n\n* **The Guinevere Deception** by Kiersten White (sentient forest bonus!)\n* **Lady Knight** by Tamora Pierce (building a refugee camp in a forest, #4 in a series)\n* **The Tropic of Serpents** by Marie Brennan (dragons in a swamp/rainforest, #2 in a series)\n* **A Barrel of Laughs, A Vale of Tears** by Jules Feiffer has a significant portion of the book take place in a forest\n* **The Mirror Empire** by Kameron Hurley has some POVs living in forest cities and other POV characters fighting off carnivorous trees\n* **California** by Edan Lepucki (also backlist &amp; debut) about a couple living in the forest post-climate collapse. They come across a small commune in a resettled ghost town in the middle of the woods. *Arguably* hard mode, but I'm iffy on it.\n\n**Hard Mode:**\n\n* **Into the Forest** by Jean Hegland takes place in the woods around a crumbling house with two sisters during a pandemic.\n* **Devolution: A Firsthand Account of the Rainier Sasquatch Massacre** by Max Brooks is about an eco-commune in the mountains plagued by a violent sasquatch invasion after a volcanic eruption destroys their territory.", "created": 1617302285.0, "author": "SmallFruitbat", "score": 14, "replies": [{"body": "Is tropic of serpents hard mode?", "created": 1617728169.0, "author": "WWTPeng", "score": 1, "replies": [{"body": "I don't remember.", "created": 1617731727.0, "author": "SmallFruitbat", "score": 1, "replies": [], "commentid": "gtlfa6z"}, {"body": "It spends a pretty good amount of time getting the expedition ready in the London parallel whose name I forget, so I would think it doesn't.", "created": 1621633896.0, "author": "euphoniousmonk", "score": 1, "replies": [{"body": "I read it. It doesn't meet the criteria.", "created": 1621648734.0, "author": "WWTPeng", "score": 1, "replies": [], "commentid": "gz0gqsb"}], "commentid": "gyzpber"}], "commentid": "gtl7353"}, {"body": "Wolf-Speaker by Tamora Pierce too! My queen \ud83d\udc51", "created": 1617325213.0, "author": "willalala", "score": 3, "replies": [], "commentid": "gt3fjs7"}], "commentid": "gt25t7j"}, {"body": "**Green Rider** by Kristen Britain definitely fits. Not quite hard mode probably as she is out of the forest towards the end.", "created": 1617297705.0, "author": "KaPoTun", "score": 13, "replies": [{"body": "This is such a fun series- I first started reading it as a horse-obsessed teenager in 1998 when it first came out, and have sadly fallen behind. I should use this as an excuse to re-read 1-4 and then the rest. \n\nFYI, just looked it up and book no. 07, \"Winterlight\" comes out this September.", "created": 1617304535.0, "author": "Kathulhu1433", "score": 3, "replies": [{"body": "Haha exactly the same for me, except I was a horse-obsessed teen a bit later than that! I picked it up and read the first one ages and ages ago in 2002 or something, and only just this Christmas went back to it and finally read 1-3.", "created": 1617316863.0, "author": "KaPoTun", "score": 2, "replies": [], "commentid": "gt30f21"}], "commentid": "gt2an9v"}], "commentid": "gt1vm2z"}, {"body": "**The Wendigo** is an atmospheric slow-burn horror novella by Algernon Blackwood. Takes place entirely in a forest. \n\n**Shadows for Silence in the Forests of Hell** by Brandon Sanderson is a horror novella where ghosts attack light and fire and noise, and an innkeeper does what she needs to do to protect her family and way of life. \n\n**Sixth of the Dusk** is another Sanderson novella that takes place on a rainforest island and focuses on a traditional hunter/trapper who's afraid of losing his way of life. \n\nIt's been a while since I've read it, but **The Year of the Witching** by Alexis Henderson has a very important forest in it, and I think it gets a lot of page time.", "created": 1617306107.0, "author": "Dsnake1", "score": 11, "replies": [], "commentid": "gt2e0wu"}, {"body": "The Queens of Renthia series by Sarah Beth First would count for hard mode (at least the first two do, I haven't read the third yet)", "created": 1617305049.0, "author": "SaxintheStacks", "score": 8, "replies": [{"body": "For those looking for that author, it's Durst (autocorrect struck)", "created": 1617335454.0, "author": "theonlyAdelas", "score": 6, "replies": [{"body": "Oh shoot thanks for pointing that out. I didn't even notice, dang phone autocorrect", "created": 1617406752.0, "author": "SaxintheStacks", "score": 2, "replies": [], "commentid": "gt6z81b"}], "commentid": "gt3wh4n"}, {"body": "The third does leave the forest for at least some of the time, so not hard mode.  But definitely still normal mode.  The companion novel The Deepest Blue isn't set in the forest, though does have some time on a forested island so might still work - but I can't remember exactly how long we're on that forested island so don't trust me completely on that one.", "created": 1617316113.0, "author": "MedusasRockGarden", "score": 1, "replies": [], "commentid": "gt2yyut"}], "commentid": "gt2br2t"}, {"body": "Was asked to reply to each relevant tile, so here we go!\n\n[Cradle of Sea and Soil](https://www.amazon.com/Cradle-Sea-Soil-Islandborn-Book-ebook/dp/B08936MB2T), by me, Bernie An\u00e9s Paz. The archipelago setting is covered in an interconnected semi-sentient forest. These trees are so large their roots and lower branches form layers, pathways, and even bridges between islands.\n\nThe setting remains the same throughout the book so it can fit hardmode as well.", "created": 1617802300.0, "author": "BernieAnesPaz", "score": 2, "replies": [{"body": "This sounds interesting. Would this count for HM?", "created": 1617896428.0, "author": "lucidrose", "score": 2, "replies": [{"body": "Yep! I should add that, thanks.", "created": 1617903971.0, "author": "BernieAnesPaz", "score": 1, "replies": [{"body": "Cool. Added either way!", "created": 1617907140.0, "author": "lucidrose", "score": 2, "replies": [], "commentid": "gtua9zw"}], "commentid": "gtu2wjv"}], "commentid": "gttkze7"}], "commentid": "gtopjic"}, {"body": "- Arrows Flight by Mercedes Lackey\n\n- The Last Light of the Sun by Guy Gavriel Kay\n\n- Oath of Gold by Elizabeth Moon\n\n- The Dragon Bone Chair by Tad Williams\n\n- The Forge in the Forest by Michael Scott Rohan", "created": 1617350570.0, "author": "apcymru", "score": 2, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation thread: **Elizabeth Moon**, veteran author of Fantasy and Sci-Fi](https://www.reddit.com/r/Fantasy/comments/6x54cu/author_appreciation_thread_elizabeth_moon_veteran/?utm_content=comments&amp;utm_medium=hot&amp;utm_source=reddit&amp;utm_name=Fantasy) from user u/Tigrari \n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n* [RIP **Michael Scott Rohan**, author of THE WINTER OF THE WORLD and THE SPIRAL series](https://www.reddit.com/r/Fantasy/comments/96xxzn/rip_michael_scott_rohan_author_of_the_winter_of/?utm_content=full_comments&amp;utm_medium=message&amp;utm_source=reddit&amp;utm_name=frontpage) from user u/Werthead \n* [Author Appreciation Thread: **Michael Scott Rohan** (1951-2018)](https://www.reddit.com/r/Fantasy/comments/9l1akm/author_appreciation_thread_michael_scott_rohan/) from user u/Mournelithe \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617350937.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt4eo8d"}], "commentid": "gt4ebnq"}, {"body": "**The Book of Koli** by M.R. Carey\n\n**Kept From Cages** by Phil Williams\n\n**Annihilation** by Jeff VanderMeer\n\n**Black Leopard, Red Wolf** by Marlon James (possibly HM? Can't remember for sure)\n\n**Flesh Eater** by Travis M. Riddle (me)", "created": 1617315850.0, "author": "eightslicesofpie", "score": 3, "replies": [{"body": "In case anyone is still looking at this, Annihilation doesn't count for hard mode, a good chunk of it is on a beach.", "created": 1619990548.0, "author": "KaPoTun", "score": 1, "replies": [{"body": "That's true, good call! I'll remove that from my post", "created": 1619995562.0, "author": "eightslicesofpie", "score": 2, "replies": [], "commentid": "gwpwftv"}], "commentid": "gwpmjg7"}, {"body": "would flesh eater work on hard mode?", "created": 1617324698.0, "author": "oirish97", "score": 1, "replies": [{"body": "I guess that kinda depends on how strict the rule is. The setting is a valley that's mostly covered in forest, so in that sense it is entirely set in a forest, but there are large sections of the book in cities within/surrounded by the forest and a bit in underground tunnels.", "created": 1617329609.0, "author": "eightslicesofpie", "score": 4, "replies": [], "commentid": "gt3n2ki"}], "commentid": "gt3enxy"}], "commentid": "gt2yglj"}, {"body": "The Mine by Frances Carden (HM), though this takes place in a jungle vs. forest, so hopefully it counts.", "created": 1617650626.0, "author": "imrightontopthatrose", "score": 1, "replies": [], "commentid": "gthj5sr"}, {"body": "The Drowning Cities by Paolo Bacigalupi is set in a Jungle/Swamp/Post-apocalyptic nature-reclaimed cities setting (might count for hard mode but I haven't finished it yet so I don't know)", "created": 1617303783.0, "author": "Pseutri", "score": 3, "replies": [], "commentid": "gt290yn"}, {"body": "Not hard mode, but a good (and very memorable) chunk of Marlon James's **Black Leopard, Red Wolf** takes place in a forest city.", "created": 1617299369.0, "author": "characterlimit", "score": 4, "replies": [], "commentid": "gt1zjmr"}, {"body": "Does Cloud Roads by Martha Wells (book 1 of Raksura series) count for hard mode?\n\nCrossroads of Canopy by Thoraiya Dyer (HM)\n\nMythago Wood by Robert Holdstock\n\nDragon Keeper (Rain Wilds Chronicles 1) by Robin Hobb\n\nSilver in the Wood by Emily Tesh (HM, I think)", "created": 1617301656.0, "author": "Arette", "score": 2, "replies": [{"body": "Cloud Roads probably doesn't count for hard mode. They travel outside of the forest, if I remember correctly.", "created": 1617384170.0, "author": "ylesren", "score": 3, "replies": [], "commentid": "gt5rjox"}], "commentid": "gt24i79"}, {"body": "Rusalka by C. J. Cherryh.", "created": 1617394744.0, "author": "CaddyJellyby", "score": 2, "replies": [], "commentid": "gt6cp5q"}, {"body": "**Wilder Girls** by Rory Power", "created": 1617302043.0, "author": "perditorian", "score": 1, "replies": [{"body": "Is this hard mode? I'm having real trouble finding a hard mode forest-set book that isn't part of a series.", "created": 1617367094.0, "author": "trilbynorton", "score": 1, "replies": [{"body": "No, I don't think so. It's set on a forested island and the forest is a major part of the plot, but a lot of the action takes place in a school (which is surrounded by forest, but I don't think that counts).", "created": 1617378092.0, "author": "perditorian", "score": 2, "replies": [], "commentid": "gt5f7yh"}, {"body": "I think **Into the Forest** by Jean Hegland would fit hard mode and it's a standalone. Also fits backlist hard mode.", "created": 1617848513.0, "author": "SmallFruitbat", "score": 2, "replies": [{"body": "Oh, cool. Thanks for the recommendation!", "created": 1617870932.0, "author": "trilbynorton", "score": 1, "replies": [], "commentid": "gtsd4ie"}], "commentid": "gtrhvo4"}], "commentid": "gt4vlmw"}], "commentid": "gt25b1t"}, {"body": "Would Ursula K LeGuin's **The Word for World Is Forest** count? I'll probably read it no matter what, so I guess I'll find out.", "created": 1618263610.0, "author": "DrSavoy", "score": 1, "replies": [], "commentid": "guawc38"}, {"body": "It appears that Rivers Solomon's new book coming out next month will fit this. It is about a pregnant woman who flees a religious cult by hiding and giving birth in the woods. She is still being hunted by the people from the compound and her body begins changing. It deals with the history of government experimentation on black people.\n\nI read The Deep last and thought it was wonderful.", "created": 1617432150.0, "author": "DaphneFallz", "score": 2, "replies": [], "commentid": "gt81fp1"}, {"body": "The Redwall books would be great for this. I think I'm personally going to read *Mossflower*.", "created": 1622222873.0, "author": "WhiteHawk1022", "score": 2, "replies": [], "commentid": "gzs5lj0"}, {"body": "Would any of the Robin Hobb *Rain Wild Chronicles* count for hard mode on this square? I really need an incentive to read them and this would seriously help!", "created": 1617301336.0, "author": "bubblegumgills", "score": 2, "replies": [{"body": "Hmmm, I don't think so unfortunately. I borrowed this series from the library so I can't check for sure, but from what I remember they all have at least one plotline not in the forest.", "created": 1617306799.0, "author": "RubiscoTheGeek", "score": 3, "replies": [{"body": "That's a shame! Thanks for the comment, I'll have to just make myself read it anyway because I want to see how it all ends.", "created": 1617307376.0, "author": "bubblegumgills", "score": 1, "replies": [{"body": "Oh yeah, I still recommend them as good reads!", "created": 1617307910.0, "author": "RubiscoTheGeek", "score": 1, "replies": [], "commentid": "gt2hxv0"}], "commentid": "gt2gt8y"}], "commentid": "gt2fkck"}, {"body": "I doubt it. If you'd allow a ruined city within a jungle then maybe but fairly sure she brings other areas into it in every book.", "created": 1617308044.0, "author": "qwertilot", "score": 2, "replies": [], "commentid": "gt2i80p"}], "commentid": "gt23tq8"}, {"body": "Thoraiya Dyer's **Crossroads of Canopy** and its sequels are perfect for hard mode.", "created": 1617298884.0, "author": "Millennium_Dodo", "score": 6, "replies": [], "commentid": "gt1yekm"}, {"body": "For horror, maybe The Memory of Trees by F.G. Cottam. The protagonist is tasked with creating a forest in Pembrokeshire, Wales by a wealthy benefactor, hoping to restore welsh folklore. Pembrokeshire, might I add, is a lovely place. Pembroke Castle being really something else.", "created": 1617521589.0, "author": "jordancoleauthor", "score": 3, "replies": [], "commentid": "gtbs8uh"}, {"body": "*  the Queen of blood by Sara Beth Durst and its sequel (HM, I think)\n* The Witch's Heart by Genevieve Gornichec", "created": 1617377643.0, "author": "Cardboard_Junky", "score": 2, "replies": [{"body": "Can anyone second Queen of Blood? I've had it in my TBR pile for ever but keep pushing it to the side. If it fits for HM, I think I can convince myself to just pick it up and move forward with it.", "created": 1617392703.0, "author": "Virtual_Mammoth1013", "score": 3, "replies": [], "commentid": "gt68nce"}], "commentid": "gt5ebq3"}, {"body": "The vast majority of Adrian Tchaikovsky's **Guns of the Dawn** takes place in a jungle. Pretty damn good book.", "created": 1617312337.0, "author": "Vaeh", "score": 4, "replies": [], "commentid": "gt2refw"}, {"body": "Both books in my series *The Chronicler Saga* \\- ***Construct*** and ***Companion*** *-* have significant portions set in a forest setting.\n\nWhen I have some more time to compile some, I'll expand this comment with recs for other authors' books.", "created": 1617309015.0, "author": "Luke_Matthews", "score": 2, "replies": [], "commentid": "gt2kbtp"}, {"body": "I think Twilight by Stephenie Meyer works for hard mode for this ;)", "created": 1617350334.0, "author": "kaahr", "score": -2, "replies": [], "commentid": "gt4e3fi"}, {"body": " - **Mythago Wood** by Robert Holdstock\n - **The Enchanted Forest Chronicles** by Patricia Wrede\n - **In the Forests of Serre** by Patricia McKillip.\n\nDon't think any qualify for hard mode though.", "created": 1617301967.0, "author": "Brian", "score": 5, "replies": [], "commentid": "gt255gf"}, {"body": "KINGS OF THE WYLD\n\nMuch of The Faithful and The Fallen takes place in one forest or another - especially WRATH.", "created": 1618427062.0, "author": "SeldomlySeriously", "score": 2, "replies": [], "commentid": "guiqbq8"}, {"body": "* **The Woods** Vol. 1 - 9 by James Tynion Iv\n* **The Second Bell** by Gabriela Houston\n* **Kept from Cages** by Phil Williams\n* **Silver in The Wood** by Emily Tesh\n*", "created": 1617299686.0, "author": "barb4ry1", "score": 3, "replies": [], "commentid": "gt209yb"}, {"body": "Hmm. They Mostly Come out at Night by Benedict Patrick (not Hard Mode, because Villages). Spooky fantasy, fairytaleish retellings. I loved it very much.", "created": 1617749447.0, "author": "sad_butterfly_tattoo", "score": 1, "replies": [], "commentid": "gtmifze"}, {"body": "My fourth book, By Demons Be Driven, works for this. Comes out in October.", "created": 1617305771.0, "author": "ashearmstrong", "score": 2, "replies": [], "commentid": "gt2dalx"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\nFor this square, they are:\n\nA Change of Blood by G. P. Gabriel\n\nSair\u014d's Claw by Virginia McClain\n\nKept From Cages by Phil Williams", "created": 1622826447.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0l6hob"}, {"body": "**Code of the Communer** by Kai Greenwood\n\nI assume some of the **Yarnsworld** books will work, but I've only read They Mostly Come Out at Night (which I believe would serve for hard mode, but which I don't necessarily recommend as a starting point)", "created": 1617298422.0, "author": "tarvolon", "score": 5, "replies": [{"body": "From the Shadows of the Owl Queen's Court is the other Yarnsworld novel that fits this square.", "created": 1617300948.0, "author": "AltheaFarseer", "score": 5, "replies": [], "commentid": "gt2307u"}, {"body": "I decided in my mind that They Mostly Come Out at Night had some village (though in the middle of the forest) in it, so I wasn't counting it for HM.", "created": 1617749607.0, "author": "sad_butterfly_tattoo", "score": 2, "replies": [], "commentid": "gtmirk3"}], "commentid": "gt1xam5"}], "commentid": "gt1p8pd"}, {"body": "**Comfort Read** \\- This is one of those 'personal to you' squares. Any book that brings you comfort while reading it. You can use a reread on this square and it WON'T count for your '1 reread'. **HARD MODE:** Don't use a reread, find a brand new comfort read!", "created": 1617294790.0, "author": "kjmichaels", "score": 15, "replies": [{"body": "This hard mode exists specifically for me and the three other people who haven't read **The House in the Cerulean Sea** yet, thank u mods", "created": 1617297665.0, "author": "characterlimit", "score": 102, "replies": [{"body": "I'm one of these three other people (only discovered it thanks to 2020 bingo reviews) -- thank you for the recommendation \\^\\^", "created": 1617298207.0, "author": "Harkale-Linai", "score": 18, "replies": [], "commentid": "gt1wsan"}, {"body": "make it 4 people as I haven't read it yet. I was planning on using the 4th wayfarers book that is coming out but maybe both :p", "created": 1617299750.0, "author": "NeoBahamutX", "score": 12, "replies": [{"body": "OMG the 4th Wayfarers book! You just made my Comfort Read Hard Mode selection for me, thank you very much indeed!", "created": 1617322846.0, "author": "sarahlynngrey", "score": 3, "replies": [], "commentid": "gt3bent"}], "commentid": "gt20f1y"}, {"body": "Four others if you include me. I will be delighted to pull this off the TBR list.", "created": 1617349783.0, "author": "apcymru", "score": 2, "replies": [], "commentid": "gt4dka0"}, {"body": "I DNF\u2019d Cerulean Sea a few months ago but I might read it for this bingo, muahuahuahua.", "created": 1617319669.0, "author": "NoopGhoul", "score": 3, "replies": [], "commentid": "gt35oqk"}, {"body": "Definitely count me in. I hope to finally get to it this year!", "created": 1617301613.0, "author": "xenizondich23", "score": 4, "replies": [], "commentid": "gt24etp"}, {"body": "*raises hand* i knew i was delaying for a reason", "created": 1617305675.0, "author": "tigrrbaby", "score": 4, "replies": [], "commentid": "gt2d38u"}, {"body": "I'm currently reading this. Started just before the new bingo card so I could include it for this year. At 39% when the new card dropped so it's allowed.", "created": 1617315303.0, "author": "wheresmylart", "score": 5, "replies": [], "commentid": "gt2xe59"}], "commentid": "gt1vizn"}, {"body": "For me, comfort reads are often returning to books I read as a kid.  Tamora Pierce, Diana Wynne Jones, Patrica Wrede, etc.", "created": 1617297162.0, "author": "dasatain", "score": 28, "replies": [{"body": "my ultimate comfort read is The Lives of Christopher Chant by Diana Wynne Jones", "created": 1617301081.0, "author": "soullesssunrise", "score": 16, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Diana Wynne Jones**](https://www.reddit.com/r/Fantasy/comments/9z89ao/author_appreciation_diana_wynne_jones/) from user u/balletrat \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617301369.0, "author": "RedditFantasyBot", "score": 2, "replies": [], "commentid": "gt23w9b"}], "commentid": "gt23a6v"}, {"body": "For hard mode, maybe you could read a book from those authors that you never got to as a kid?", "created": 1617321712.0, "author": "xenzua", "score": 4, "replies": [], "commentid": "gt39e9n"}, {"body": "Same here. The stuff that got me into reading or fantasy like Tamora Pierce, Chronicles of Narnia, Diane Duane, Mercedes Lackey, etc.", "created": 1617671341.0, "author": "beldaran1224", "score": 2, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617671407.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gtiptnw"}], "commentid": "gtipoxp"}], "commentid": "gt1ufks"}, {"body": "**The House in the Cerulean Sea** by T.J. Klune \n\n**A Robot in the Garden** by Deborah Install\n\n**The Long Way to a Small Angry Planet** by Becky Chambers\n\n**The Goblin Emperor** by Katherine Addison \n\n**Carry On** by Rainbow Rowell (YA)\n\n**Artemis Fowl** by Eoin Colfer (Children's/Young teens)", "created": 1617300017.0, "author": "fuckit_sowhat", "score": 26, "replies": [], "commentid": "gt21096"}, {"body": "For me, that would be any book with kind and caring characters... among the books I've read for last year's bingo, I'd recommend:\n\n* Becky Chambers' *Wayfarers* series,\n* Martha Well's *Murderbot Diaries* series\n* and Meredith Katz' *Cybernetic Teashop* novella.", "created": 1617298062.0, "author": "Harkale-Linai", "score": 23, "replies": [], "commentid": "gt1wf68"}, {"body": "Oh man, I am keen to reread either Piranesi by Susanna Clarke or The Goblin Emperor by Katherine Addison", "created": 1617297717.0, "author": "DemiLisk", "score": 16, "replies": [{"body": "If you love the beautiful prose and lovely descriptions in Piranesi you should check out, \"The Starless Sea\" by Erin Morgenstern.", "created": 1617304996.0, "author": "Kathulhu1433", "score": 3, "replies": [{"body": "Cheers! I think I have a copy on my kindle so this is great to hear", "created": 1617307586.0, "author": "DemiLisk", "score": 2, "replies": [], "commentid": "gt2h9dd"}], "commentid": "gt2bmwc"}], "commentid": "gt1vn1c"}, {"body": "I absolutely loved **Charmed Life** and **The Lives of Christopher Chant** by Diana Wynne Jones when I was younger. They are both very sweet stories!", "created": 1617302849.0, "author": "DrMDQ", "score": 13, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Diana Wynne Jones**](https://www.reddit.com/r/Fantasy/comments/9z89ao/author_appreciation_diana_wynne_jones/) from user u/balletrat \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617303207.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt27s9u"}], "commentid": "gt270fm"}, {"body": "- Valdemar by Mercedes Lackey\n- The Goblin Emperor by Katherine Addison\n- Sourdough by Robin Sloan\n- Chalice by Robin McKinley", "created": 1617296630.0, "author": "eriophora", "score": 13, "replies": [], "commentid": "gt1t9j7"}, {"body": "Have not read it yet, but based on how much I love the comfort of **Howl's Moving Castle** (or anything Diana Wynne Jones) and Ghibli movies, I'm betting **Kiki's Delivery Service** by Eiko Kadono will also be lovely and sweet.", "created": 1617315775.0, "author": "wombatstomps", "score": 7, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Diana Wynne Jones**](https://www.reddit.com/r/Fantasy/comments/9z89ao/author_appreciation_diana_wynne_jones/) from user u/balletrat \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617316455.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt2zmut"}], "commentid": "gt2ybc1"}, {"body": "I'll be reading one of T. Kingfisher's books for this one. If you like fluffy romantic fantasy that makes you laugh but also touches on some darker themes and has a neat world, let me recommend Swordheart or Paladin's Grace. I've not yet read the Clockwork Boys or Paladin's Strength, but I'll be using one of them for HM on this square for sure", "created": 1617331165.0, "author": "morisian", "score": 7, "replies": [{"body": "Oh brilliant idea! I follow her on Twitter and I've been meaning to pick up one of her books and as luck would have it, *The Seventh Bride* is on Kindle Unlimited. Great recommendation!", "created": 1617366078.0, "author": "bubblegumgills", "score": 2, "replies": [], "commentid": "gt4u6ly"}], "commentid": "gt3ppgk"}, {"body": "Thanks for allowing resident authors to rec their works. Many reviewers of [Harpyness is Only Skin Deep](https://www.goodreads.com/book/show/53332248-harpyness-is-only-skin-deep) and [Finding Your Harpy Place](https://www.goodreads.com/book/show/55681173-finding-your-harpy-place) mention these as comfort reads. \n\nAnd I mean, come on, how could a book with a title like *Finding Your Harpy Place* be anything *but* a comfort read!", "created": 1617566688.0, "author": "Kululu17", "score": 2, "replies": [], "commentid": "gtdojkw"}, {"body": "I am also one of those who revisits old favorites. Some of these may work for other people, though, so I'll offer them up, in approximately the order I think others might find them comforting:\n\n* Of Tamora Pierce, the Circle of Magic books in particular.\n* Earthsea, Ursula K. Le Guin.\n* The Blending, Sharon Green.\n* Symphony of Ages, Elizabeth Haydon.\n* Pern, Anne McCaffrey.\n* The Drenai saga, David Gemmell.\n* Anne Bishop's Black Jewels.\n* The Wheel of Time, Robert Jordan.", "created": 1617381589.0, "author": "smartflutist661", "score": 1, "replies": [], "commentid": "gt5mabo"}, {"body": "* **The Goblin Emperor** by Katherine Addison and I guess its upcoming sequel will probs fit too  \n* **The Healers' Road** by S.E. Robertson  \n* **Central Station** by Lavie Tidhar, there was something very calming about it   \n* **Sourdough** by Robin Sloan    \n* **The House in the Cerulean Sea** by T.J. Klune  \n* the **Wayfarers** series by Becky Chambers   \n* **The Curse of Chalion** and the **Penric** series by Lois McMaster Bujold  \n* **Valdemar** by Mercedes Lackey, just in general\n  \n...though just to illustrate the subjectivity of this square, the second to last time I wanted a comfort read, I went and reread the present-day parts of The Sparrow (not the space mission ones, the recovery ones), which most people would consider the polar *opposite* of a comfort read but idk, I'm weird.", "created": 1617324526.0, "author": "improperly_paranoid", "score": 5, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617324671.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt3emao"}], "commentid": "gt3ed8s"}, {"body": "Haven't read it yet, but I'm fairly sure Christian Sterling's **Into the Wildbarrens** is going to be a comfort read for me.", "created": 1617310884.0, "author": "thepixelmurderer", "score": 1, "replies": [], "commentid": "gt2oczy"}, {"body": "One series I would consider my comfort read is A.M. Sohma's *Second Age of Retha* series. A very humorous stuck-in-a-video-game LitRPG with really creative SFW curses. I don't think a single series has made me laugh as much as this one has (especially the third book)", "created": 1617300788.0, "author": "Axeran", "score": 1, "replies": [], "commentid": "gt22nzj"}, {"body": "For those looking to hard mode I can recommend \n\n\nSweet:\n\n- The Goblin Emperor by Katherine Addison\n\n- A Long Way to a Small Angry Planet by Becky Chambers\n\n- Paladins Grace by T Kingfisher\n\nBeautiful\n\n- A Song for Arbonne by Guy Ka", "created": 1617350098.0, "author": "apcymru", "score": 2, "replies": [], "commentid": "gt4dv9s"}, {"body": "This is sort difficult for me, I'm not a comfort/feel good reader. Most of what I read is grimdark, chaotic neutral sort of stuff. The only thing I ever (re)read for comfort are Sherlock Holmes books, but they aren't fantasy. Help! Can I substitute something for this topic?", "created": 1617431530.0, "author": "dmeantit", "score": 1, "replies": [{"body": "It doesn't have to be a re-read. Maybe you will find a Sherlock Holmes fantasy retelling comforting. I recently read and loved The Angel of the Crows by Katherine Addison which read like historical fiction with fantastical elements. But you are allowed to substitute one square; see the rules section on the official Bingo post for specifics.", "created": 1617506857.0, "author": "scoutdaniels", "score": 4, "replies": [], "commentid": "gtba8na"}], "commentid": "gt80rde"}, {"body": "I am one of those very strange people who revisits Realm of the Elderlings for a comfort read so maybe don\u2019t listen to me", "created": 1617327146.0, "author": "dragon_morgan", "score": 4, "replies": [], "commentid": "gt3iuzc"}], "commentid": "gt1p5zl"}, {"body": "**Witches** \\- A book featuring witches. Note - characters practicing what is traditionally in their culture referred to as witchcraft would also count. For example brujos or brujas would count for this square. **HARD MODE:** A witch is a main protagonist.", "created": 1617294857.0, "author": "kjmichaels", "score": 13, "replies": [{"body": "* **Truthwitch** by Susan Dennard\n\n* **Sorcerer to the Crown** by Zen Cho\n\n* **The Bear and the Nightingale** by Katherine Arden", "created": 1617303023.0, "author": "perditorian", "score": 16, "replies": [{"body": "Seconding Bear and the Nightingale and the entire trilogy in general.", "created": 1617809603.0, "author": "devilsangel360live", "score": 2, "replies": [], "commentid": "gtp5dda"}], "commentid": "gt27dw8"}, {"body": "Once and Future Witches by Alix E. Harrow would qualify for Hard Mode. \n\nIf you prefer romance with your witches, the obvious choice would the A Discovery of Witches.", "created": 1617296987.0, "author": "entwined_Rhino", "score": 13, "replies": [], "commentid": "gt1u1iu"}, {"body": "The main characters in *Ring Shout* refer to themselves as witches and have The Sight.", "created": 1617296616.0, "author": "BitterSprings", "score": 11, "replies": [], "commentid": "gt1t8hj"}, {"body": "Cemetery Boys by Aiden Thomas (Hard Mode)\n\nPratical Magic by Alice Hoffman(Hard Mode)\n\nThe Once and Future Witches by Alix E. Harrow (Hard Mode)\n\nThese Witches Won't Burn by Isabel Sterling (Hard Mode)\n\nCirce by Madeline Miller (Hard Mode)\n\nEqual Rites by Terry Pratchett (Hard Mode)", "created": 1617296616.0, "author": "VictorySpeaks", "score": 32, "replies": [{"body": "Did not know Circe had witches.  Interesting.", "created": 1617300557.0, "author": "Gillbergs_Powerhour", "score": 3, "replies": [{"body": "Circe is considered the original witch! I\u2019m not sure if they name her as a witch in the book, but mythology usually refers to her as a witch.", "created": 1617300620.0, "author": "VictorySpeaks", "score": 19, "replies": [{"body": "She is named as witch, and as the original one in the book.", "created": 1617391380.0, "author": "blahblahpoopfart", "score": 5, "replies": [], "commentid": "gt65z2z"}], "commentid": "gt22ay0"}], "commentid": "gt2260p"}, {"body": "Would I enjoy/understand Equal Rites without having read any other Discworld books?", "created": 1617308855.0, "author": "tdweaver", "score": 4, "replies": [{"body": "Yes! Most of the Discworld books work as standalones as well as linking together.", "created": 1617334669.0, "author": "Housewife-AK", "score": 3, "replies": [{"body": "That\u2019s great to hear because it sounds like a lot of fun. Thanks!", "created": 1617372021.0, "author": "tdweaver", "score": 1, "replies": [{"body": "There are few authors/books that I say this about, but TP is truly laugh-out-loud funny", "created": 1617383981.0, "author": "Housewife-AK", "score": 2, "replies": [], "commentid": "gt5r5ti"}], "commentid": "gt53k4l"}], "commentid": "gt3vb8b"}], "commentid": "gt2jz4j"}, {"body": "Circe is a really fun read. I applaud her use of prose and metaphors.", "created": 1617305943.0, "author": "blitzbom", "score": 4, "replies": [], "commentid": "gt2do3w"}, {"body": "Are the books for teenagers or adults? Is there any adult content? Thanks!", "created": 1617333488.0, "author": "AWESOME_Snape", "score": 1, "replies": [{"body": "I have not read the Hoffman book so I can\u2019t say. \n\nThe rest do not have explicit content. Cemetery Boys and These Witches Don\u2019t Burn are YA, the rest are adult fantasy. Circe is more literary, Once and Future Witches is historical fantasy, and Equal Rites has a lot of humor.", "created": 1617341426.0, "author": "VictorySpeaks", "score": 3, "replies": [{"body": "Thanks!!!", "created": 1617377995.0, "author": "AWESOME_Snape", "score": 1, "replies": [], "commentid": "gt5f0yr"}], "commentid": "gt44kpk"}, {"body": "Circe has &gt;!a rape scene. It isn't particularly graphic or long, if I recall correctly. It mainly focuses on the emotions the character feels afterwards!&lt;.", "created": 1617580917.0, "author": "mfctxtz", "score": 2, "replies": [{"body": "Oh yeah I've read Circe before! It's a really good book! Any recs?", "created": 1617585066.0, "author": "AWESOME_Snape", "score": 1, "replies": [], "commentid": "gtem8bx"}], "commentid": "gteewat"}], "commentid": "gt3thph"}, {"body": "Great list!", "created": 1617299748.0, "author": "ullsi", "score": 4, "replies": [], "commentid": "gt20eus"}], "commentid": "gt1t8gc"}, {"body": "Most obvious books would be The Witches books in the Discworld series by Terry Pratchett (all hard mode too). Equal Rites, Wyrd Sisters, Witches Abroad, Lords and Ladies, Maskerade, Carpe Jugulum", "created": 1617295614.0, "author": "superdragonboyangel", "score": 21, "replies": [{"body": "His Tiffany Aching series would count also! Starting with Wee Free Men.\n\nEdit: Wee Free Men isn't hard mode, I think, but the sequels are.", "created": 1617300905.0, "author": "Pseutri", "score": 10, "replies": [], "commentid": "gt22wxy"}], "commentid": "gt1qzyl"}, {"body": "Roald Dahl's The Witches is good for those who want to go down memory lane\n\nDiscovery of Witches by Deborah Harkness\n\nWitch by Finbar Hawkins\n\nWitch Week by Diana Wynne Jones\n\nThe Ocean at the End of the Lane by Neil Gaiman\n\nCirce by Madeline Miller", "created": 1617302002.0, "author": "soullesssunrise", "score": 7, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Diana Wynne Jones**](https://www.reddit.com/r/Fantasy/comments/9z89ao/author_appreciation_diana_wynne_jones/) from user u/balletrat \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617302557.0, "author": "RedditFantasyBot", "score": 2, "replies": [], "commentid": "gt26dur"}], "commentid": "gt25824"}, {"body": "* **The Witches of St. Petersburg** by Imogen Edwards-Jones (historical fantasy set during the Russian revolution, \\*cue Rasputin by Boney M).\n* **The Witch's Heart** by Genevieve Gornichec (Norse mythology retelling)\n* **A Discovery of Witches** by Deborah Harkness\n* **The Master and Margarita** by Mikhail Bulgakov (Russian magical realism)\n* **Otherworld Series** by Kelley Armstrong\n* **Green Creek Series** by T.J. Klune\n* **Mercy Thompson Series** by Patricia Briggs", "created": 1617309601.0, "author": "thequeensownfool", "score": 6, "replies": [{"body": "Ummmm I love Rasputin by Boney M. Epic. Thank you, now playing.", "created": 1622354087.0, "author": "Dianafire", "score": 1, "replies": [], "commentid": "gzy6pmn"}, {"body": "Highly recommend Kelley Armstrong's **Dime Store Magic** specifically for hard mode. It's mid-series, but with revolving narrators you can start here (I did - then I went back and read the rest!).", "created": 1617470504.0, "author": "psyche_13", "score": 2, "replies": [], "commentid": "gt9h4pz"}], "commentid": "gt2llri"}, {"body": "**Trying to go for ones who haven't been named--**\n\nDune by Frank Herbert (Hard Mode, really surprised this wasn't mentioned)\n\nSvaha and Mystery of Grace by Charles De Lint (De Lint's only SF and hard mode for the former and undead for the latter, probably a few De Lint with witches)\n\nAmong Others by Jo Walton (Hard Mode)\n\nBear Daughter by Judith Berman (haven't read yet)", "created": 1617324921.0, "author": "Kerney7", "score": 5, "replies": [], "commentid": "gt3f1qc"}, {"body": "**The Ravens** by Kass Morgan (fits hard mode as well). A contemporary YA Novel featuring a sorority of witches in college. The book alternates between two POV protagonists, both of which are witches.", "created": 1617751604.0, "author": "samskuantch", "score": 1, "replies": [], "commentid": "gtmmqza"}, {"body": "Any book by Debora Geary - all of them fit hard mode.  And if you haven\u2019t read them, they\u2019ll also likely fit hard mode for the comfort read square.", "created": 1622587173.0, "author": "Bookdragon345", "score": 1, "replies": [], "commentid": "h08whvr"}, {"body": "The Witch\u2019s Heart by Genevieve Gornichec ticks the HM box", "created": 1617303507.0, "author": "blindpandacub", "score": 1, "replies": [], "commentid": "gt28fm1"}, {"body": "Steven Brust's *Vlad Taltos* novels count for Hard Mode: Vlad is a witch (and the distinction between that and other magic users is often important!)", "created": 1617340826.0, "author": "CommodoreBelmont", "score": 3, "replies": [], "commentid": "gt43tsb"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\n**For this square, the ones I saw are:** \n\nThe Demons We See by Krista D Ball\n\nDoomsayer Prince by Rune S. Nielsen\n\nDark Apprentice by Val Neil", "created": 1622829588.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0ldtak"}, {"body": "My second book, The Ripper has many witch characters. I'm in the process of creating an ensemble cast audiobook (30+ voice actors) and adding a few minor revisions to the ebook before releasing the paperback. This book will be in its final form in all formats come sometime in May. \n\n If you have any questions, please feel free to message me!", "created": 1617328118.0, "author": "ThrowBackFF", "score": 1, "replies": [], "commentid": "gt3kj9s"}, {"body": "The Lost Coast by Amy Rose Capetta is about a group of witches in California and would qualify for Hard Mode. Here's the blurb: \"The spellbinding tale of six queer witches forging their own paths, shrouded in the mist, magic, and secrets of the ancient California redwoods.\" I read this last year and it really sucked me in. I'd love to recommend it wholeheartedly because the characters and writing are great but I was pretty disappointed in the ending.", "created": 1617390991.0, "author": "darcys_coleslaw", "score": 2, "replies": [], "commentid": "gt656oh"}, {"body": "Akata Witch by Nnedi Okorafor. (Hard Mode)", "created": 1617368371.0, "author": "alicecooperunicorn", "score": 2, "replies": [], "commentid": "gt4xi1f"}, {"body": "YA- Serpent &amp; Dove by Shelby Mahurin", "created": 1617304861.0, "author": "jsing14", "score": 1, "replies": [], "commentid": "gt2bcly"}, {"body": "The Witches of Eileanan by Kate Forsyth (TW: &gt;!there is rape of a child in the first book!&lt;) - HM\n\nA Night in the Lonesome October by  Roger Zelazny\n\nThe Gods are Bastards by D D Webb has a witch main character in latter books. \n\nThe Child Thief by Brom\n\nWhich Witch? by Eva Ibbotson - middle grade but HM\n\nThe Vampire Knitting Club by Nancy Warren - HM\n\nEnchanted Forest Chronicles by Patricia C Wrede \n\nChrestomanci by Diana Wynne Jones\n\nTons of urban fantasy / paranormal romance. (L J Smith, Charlaine Harris, Deborah Harkness, Heather Blake, Kim Harrison etc)", "created": 1617302056.0, "author": "xenizondich23", "score": 4, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation Thread: **Roger Zelazny**](https://www.reddit.com/r/Fantasy/comments/5d96ap/author_appreciation_thread_roger_zelazny/?st=ivm72j5d&amp;sh=9ecd534a) from user u/CommodoreBelmont \n* [Author Appreciation: **Diana Wynne Jones**](https://www.reddit.com/r/Fantasy/comments/9z89ao/author_appreciation_diana_wynne_jones/) from user u/balletrat \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617302555.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt26doo"}], "commentid": "gt25c0n"}, {"body": "His Dark Materials - Golden Compass, Subtle Knife, Amber Spyglass. \n\nReally cool interpretation of witches that's both traditional and unique, and they factor pretty heavily into the story in all three.", "created": 1618791765.0, "author": "bmullberry", "score": 1, "replies": [], "commentid": "gv0zz44"}, {"body": "The Witch's Daughter By: Paula Brackston  \n\nThe Worlds of Chrestomanci Series (4 books in total) By: Diana Wynne Jones  \n\nThe Vine Witch By: Luanne G. Smith  \n\nThe Age of Witches By: Louisa Morgan  \n\nA Witch in Time By: Constance Sayers  \n\nAlso, any of the following Discworld books By Terry Pratchett \n\nEqual Rites  \nWyrd Sisters   \nWitches Abroad  \nLords and Ladies   \nMaskerade  \nCarpe Jugulum", "created": 1617335788.0, "author": "Housewife-AK", "score": 2, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Diana Wynne Jones**](https://www.reddit.com/r/Fantasy/comments/9z89ao/author_appreciation_diana_wynne_jones/) from user u/balletrat \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617336331.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt3xrdr"}], "commentid": "gt3wz2y"}, {"body": "The Hollows series by Kim Harrison (HM, urban fantasy)\n\nWitches of Eileanan by Kate Forsyth (HM)\n\nTruthwitch by Susan Dennard (HM)", "created": 1617303927.0, "author": "Arette", "score": 1, "replies": [], "commentid": "gt29c0u"}, {"body": "**The Once and Future Witches** by Alix E. Harrow and **The Year of the Witching** by Alexis Henderson are both hard mode qualifying.\n\nEdit: **The Starless Sea** by Erin Morgenstern probably fits non-hard mode. The protagonist's mother is a witch, and tarot's regularly featured.", "created": 1617310060.0, "author": "Dsnake1", "score": 2, "replies": [], "commentid": "gt2ml28"}, {"body": "Wild Seed by Octavia Butler (hard mode) \n\nThe main character is referred to as a witch by herself and other characters. It does not line up with a traditional definition of witchcraft though but I think it counts since that's the term used to define what she and other people in this world are? Someone can correct me if you think it wouldn't work for this square.", "created": 1621272037.0, "author": "akayu", "score": 1, "replies": [], "commentid": "gygugf6"}, {"body": "**These Witches Don\u2019t Burn** by Isabel Sterling (HM)  \n**Labyrinth Lost** by Zoraida Cordova (HM)  \n**Witch Week** by Diana Wynne Jones (HM, middle grade)", "created": 1617312190.0, "author": "hairymclary28", "score": 1, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Diana Wynne Jones**](https://www.reddit.com/r/Fantasy/comments/9z89ao/author_appreciation_diana_wynne_jones/) from user u/balletrat \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617312793.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt2scog"}], "commentid": "gt2r38j"}, {"body": "I haven't read it yet, but judging by the title **Witches Steeped in Gold** by Ciannon Smart sounds like it would count. \n\n**Seashells, Spells &amp; Caramels** by Erin Johnson - cozy mystery\n\n**Mooncakes** by Suzanne Walker  Wendy Xu (graphic novel)", "created": 1617351655.0, "author": "Dianthaa", "score": 1, "replies": [], "commentid": "gt4fbxh"}, {"body": "Hi, my novel **Doomsayer Prince** is an epic fantasy that features:\n\n**Witches - HARD MODE**\n\nI hope you have a great 2021 Fantasy Bingo experience :-)  \n[Buy Doomsayer Prince](https://runesnielsen.com/availablefrom). It's only 99 cents while on sale from June 1-7th.", "created": 1622646439.0, "author": "Rune_S_Nielsen", "score": 1, "replies": [], "commentid": "h0bkgmg"}, {"body": "[The Ruthless Lady's Guide to Wizardry](https://www.goodreads.com/book/show/52448445-the-ruthless-lady-s-guide-to-wizardry?ac=1&amp;from_search=true&amp;qid=oOWB15z352&amp;rank=1) by C.M. Waggoner is a perfect fit here for hard mode. Unfortunately I read it a few months ago before I even knew about bingo being a thing, so I won't be rereading it again now. :)\n\nIt also works for the Genre Mashup, since it's also romance, but not as hard mode there.", "created": 1617391438.0, "author": "b3nj03", "score": 2, "replies": [], "commentid": "gt663e2"}, {"body": "* [**The Witch's Diary**](https://www.goodreads.com/book/show/55345505) by Rebecca Brae (HM)", "created": 1617306334.0, "author": "Amarthien", "score": 2, "replies": [], "commentid": "gt2ejek"}, {"body": "* ***Eva Evergreen, Semi-Magical Witch*** by Julie Abe (Middle grade, Hard Mode)\n* ***Kiki's Delivery Service*** by Eiko Kadono, translated by Emily Balistrieri (Middle grade, Hard Mode)\n* ***The Witches of Cambridge*** by Menna van Praag (Adult, Hard Mode)\n* Paula Brackston has quite a few books about witches, most qualify for Hard Mode: ***The Witch's Daughter***, ***The Midnight Witch***, ***The Silver Witch***, ***The Winter Witch***, ***The Return of the Witch***", "created": 1617313893.0, "author": "paperwhites", "score": 3, "replies": [], "commentid": "gt2ula7"}, {"body": "If someone wants to go into scifi with this square:\n\n**The Rise and Fall of D.O.D.O.**  by Neal Stephenson\u00a0and\u00a0Nicole Galland.\n\nIt is about a modern day military agency finding out about time traveling witches. It has some comedic undertone about bureaucracy and sometimes dives straight into parody. It is a fun and exciting read. Although, a warning: the ending is, like it often happens with Neal Stephenson, not very satisfying.", "created": 1617341361.0, "author": "slojonka", "score": 2, "replies": [], "commentid": "gt44hts"}, {"body": "[**Kiki's Delivery Service**](https://www.goodreads.com/book/show/53029302-kiki-s-delivery-service?ac=1&amp;from_search=true&amp;qid=Y47EhJb1Qc&amp;rank=1) by Eiko Kadono (HM). Definitely for those who are Ghibli fans", "created": 1617809339.0, "author": "devilsangel360live", "score": 1, "replies": [], "commentid": "gtp4rmp"}, {"body": "Would a Wheel of Time book count? Making my way through the series for the first time. The Aes Sedai are basically witches/ sorcerers", "created": 1617329552.0, "author": "OlivanderQueen10", "score": 3, "replies": [{"body": "Well the Children of the Light always refer to them as witches", "created": 1617483539.0, "author": "NeoBahamutX", "score": 3, "replies": [], "commentid": "gta6s7b"}], "commentid": "gt3mz2k"}, {"body": "Does **Witchmark** by C.L. Polk count? (I know it\u2019s in the name, but I wanted to make sure before committing.)\n\nAnd what about **Circe** by Madeline Miller? Circe was described as a witch in \u201cThe Odyssey\u201d but I\u2019m not sure if demi-goddesses can also be witches. Opinions?", "created": 1617300526.0, "author": "DrMDQ", "score": 6, "replies": [{"body": "Since Circe describes herself as being like the proto-type for a witch, I think it would count.", "created": 1617302042.0, "author": "Dragon_Lady7", "score": 9, "replies": [], "commentid": "gt25aza"}, {"body": "Yes, they're called witches in Witchmark so i'd say it firmly counts.", "created": 1617351070.0, "author": "Dianthaa", "score": 4, "replies": [], "commentid": "gt4esmj"}], "commentid": "gt223ii"}, {"body": "**Pale**, which is a webserial by Wildbow. It's not finished yet, but should be completed this year. It's 100% hard mode.\n\nIt also fits Found Family (HM), Trans/NB character, Forest Setting, and Cat Squasher (if it's not HM now, it will be - it's 1,000,000+ words), Self-Published, Mystery, and since it's ongoing, Published in 2021.", "created": 1617400508.0, "author": "DamnitRuby", "score": 1, "replies": [], "commentid": "gt6nt9e"}, {"body": "**Truthwitch** by Susan Dennard.\n\n**Harry Potter** by JK Rowling.\n\n**Baker Thief** by Claudie Arsenault.\n\n**The Bone Witch** by Rin Chupeco.\n\nAll hard mode", "created": 1617302322.0, "author": "lightning_fire", "score": 2, "replies": [], "commentid": "gt25w40"}, {"body": "Any of the books in the All Souls Trilogy by Deborah Harkness \n\nAny books in the Witchlands series by Susan Dennard\n\nThe Witch\u2019s Heart by Genevieve Gornichec\n\nAll would qualify for hard mode", "created": 1617302057.0, "author": "Neee-wom", "score": 1, "replies": [], "commentid": "gt25c2b"}, {"body": "* **Sworn to the Night** by Craig Schaefer\n* **Necromancer's House** by Christopher Buehlman", "created": 1617299759.0, "author": "barb4ry1", "score": 3, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Craig Schaefer**](https://www.reddit.com/r/Fantasy/comments/7vva6z/author_appreciation_craig_schaefer/?utm_content=comments&amp;utm_medium=hot&amp;utm_source=reddit&amp;utm_name=Fantasy) from user u/barb4ry1 \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617299802.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt20j7t"}], "commentid": "gt20frr"}, {"body": "The Diana Tregarde books by Mercedes Lackey (hm).  Urban fantasy with investigating of magical troubles, vampires, etc.\n\nThe Tir Alain Trilogy by Anne Bishop (hm).  The first book is pretty x rated and it can be cheesy, but on the whole a solid trilogy.", "created": 1617316909.0, "author": "oboist73", "score": 2, "replies": [{"body": "X rated and a bit cheesy is my favorite, thanks for the rec!", "created": 1617586094.0, "author": "dasatain", "score": 2, "replies": [], "commentid": "gteo1ih"}, {"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617316924.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt30j7w"}], "commentid": "gt30i56"}, {"body": "The Near Witch by Victoria Schwab\n\nAkata Witch by Nnedi Okorafor\n\nWitches of Lychford novellas by Paul Cornell", "created": 1617326720.0, "author": "kleos_aphthiton", "score": 6, "replies": [], "commentid": "gt3i4pr"}, {"body": "**Witches of Echo Park** series (by \u2018ex witch\u2019 Amber Benson). Hard mode.", "created": 1617354768.0, "author": "mankaded", "score": 1, "replies": [], "commentid": "gt4i5cg"}, {"body": "The Vine Witch by Luanne G. Smith\n\nBewitching Season by Marissa Doyle", "created": 1617309087.0, "author": "Asheweaver", "score": 2, "replies": [], "commentid": "gt2khk2"}, {"body": "Anita, by Keith Roberts (HM)", "created": 1619790089.0, "author": "wd011", "score": 1, "replies": [], "commentid": "gwfa8lt"}, {"body": "I shall henceforth plug *Alexandra Quick* again (works for hard mode). I really do need to get around to writing that spotlight post I've been putting off...", "created": 1617326644.0, "author": "Lesserd", "score": 2, "replies": [], "commentid": "gt3hzsh"}, {"body": "[Nyx](https://www.goodreads.com/book/show/17785979-nyx?ac=1&amp;from_search=true&amp;qid=7qiwj7brnL&amp;rank=1) by D.M. Livingston is about a fairy and a group of witches trying to escape Hell.", "created": 1617331651.0, "author": "Swagggmaster69", "score": 1, "replies": [], "commentid": "gt3qiyf"}], "commentid": "gt1pbd6"}, {"body": "**Cat Squasher: 500+ Pages** \\- Time to go tome hunting--find a book that is over 500 pages in length.  **HARD MODE:** Lion Squasher - a book that is over 800 pages.", "created": 1617294801.0, "author": "kjmichaels", "score": 13, "replies": [{"body": "**The Priory of the Orange Tree**, by Samantha Shannon, is an epic fantasy stand-alone that's over 800 pages long (I think it's 804 in my paperback version?). I really enjoyed it, too!", "created": 1617296345.0, "author": "GarrickWinter", "score": 34, "replies": [{"body": "Official page count is 848 pages, which includes the biblio page and blank pages. Official page count is literally every single page in the bound copy. Definitely Lion squasher and as luck would have it, #2 on my TBR pile", "created": 1617296656.0, "author": "entwined_Rhino", "score": 13, "replies": [], "commentid": "gt1tbm3"}, {"body": "Going to second this, I loved it!", "created": 1617301080.0, "author": "StormTyphoeus", "score": 2, "replies": [], "commentid": "gt23a63"}], "commentid": "gt1sn43"}, {"body": "Jonathan Strange &amp; Mr Norrell is definitely over 500 pages, but it might be juuust to short to be a cat squasher.", "created": 1617297798.0, "author": "ullsi", "score": 19, "replies": [{"body": "The edition I read earlier this year was ~840 pages, and I believe some are 1000+", "created": 1617298558.0, "author": "cubansombrero", "score": 17, "replies": [{"body": "Ugh, the editions are going to make this square a nightmare, aren't they.", "created": 1617324995.0, "author": "Vermilion-red", "score": 2, "replies": [{"body": "I figure if all/the vast majority of the editions listed on Goodreads are over 500/800 pages, you're all good.", "created": 1617325154.0, "author": "cubansombrero", "score": 2, "replies": [], "commentid": "gt3fg44"}], "commentid": "gt3f6c8"}, {"body": "thanks for checking!", "created": 1617299858.0, "author": "ullsi", "score": 3, "replies": [], "commentid": "gt20npq"}], "commentid": "gt1xm1d"}, {"body": "I'm about 250 pages into this right now! My paperback is 846, so a lion squasher. :)", "created": 1617308523.0, "author": "Nidafjoll", "score": 3, "replies": [{"body": "Oops, should've done a quick search on Goodreads before I published my comment. Hope you like the book so far!", "created": 1617309197.0, "author": "ullsi", "score": 2, "replies": [], "commentid": "gt2kq4j"}], "commentid": "gt2j91i"}], "commentid": "gt1vtey"}, {"body": "[*Kushiel's Dart*](https://www.goodreads.com/book/show/153008.Kushiel_s_Dart) by Jacqueline Carey is definitely a Lion Squasher at 1015 pages.", "created": 1617300042.0, "author": "WombatHats", "score": 17, "replies": [], "commentid": "gt21279"}, {"body": "I knew waiting to read Rhythm of War would pay off mwahahhaha.", "created": 1617306018.0, "author": "blitzbom", "score": 16, "replies": [], "commentid": "gt2du4t"}, {"body": "**Inda** by Sherwood Smith\n\n**Essalayien Universe** by Michelle Sagara West\n\nMost things by Janny Wurts, to be honest. \n\nAlso most things by Kate Elliott, including her co-written **The Golden Key**\n\nSome of the notorious ones too: Wheel of Time, Malazan, etc.", "created": 1617297205.0, "author": "tarvolon", "score": 14, "replies": [], "commentid": "gt1uiwq"}, {"body": "To Green Angel Tower (or really anything by Tad Williams).   \n\n\nDepending on how you count webfiction a lot of the big webnovels might fit well.", "created": 1617297719.0, "author": "daavor", "score": 11, "replies": [{"body": "**To Green Angel Tower**  is one of the longest books ever written I believe. It will squash even the squasher itself.", "created": 1617309135.0, "author": "Forsaken__Potato", "score": 9, "replies": [], "commentid": "gt2klcq"}, {"body": "Worm could probably squash a whole menagerie", "created": 1617336500.0, "author": "Nidafjoll", "score": 2, "replies": [], "commentid": "gt3y03f"}, {"body": "We need an average words-per-page number for fantasy/SFF fiction, multiply that by 500+ pages, and then see if the webnovel is over that wordcount or not. But I dunno what the average words-per-page is. :P\n\nOr else, look up the word count for a known 500 or 800 page cat squasher and just compare directly between that and the webnovel.", "created": 1617304525.0, "author": "Pseutri", "score": 1, "replies": [{"body": "So, To Green Angel Tower is 520,000 words, and 1100 pages, so ballparking 500 words per page. My comment about 'how you count' was more than most webnovels get referred to as a single work, even though they have arcs comparable to books in a series. A Practical Guide to Evil, my personal favorite clocks in at over 2 million words over its current 5 books (it has much more explicit books than a lot of them) I think those are comfortably cat squashers at that point.", "created": 1617306778.0, "author": "daavor", "score": 3, "replies": [{"body": "Ah, I see what you mean now! I've had a similar counting problem in the past when I've read paper omnibuses.", "created": 1617411574.0, "author": "Pseutri", "score": 1, "replies": [], "commentid": "gt77i32"}], "commentid": "gt2fiq1"}], "commentid": "gt2amku"}], "commentid": "gt1vn5y"}, {"body": "**The Mask of Mirrors** by M.A. Carrick is 643 pages in my chunky paperback copy. I haven't started it yet, but I hear it includes lots of intrigue and has a magical Venice type of setting.", "created": 1617297065.0, "author": "Nineteen_Adze", "score": 8, "replies": [], "commentid": "gt1u7m5"}, {"body": "Duncton Wood by  William Horwood - An old epic but with moles that worship standing stones like Stonehenge. Kindle $4 and 707 pages. (Also, I consider the first novel a standalone.)\n\nFoundryside by - 505 pages. The talking key is worth reading. Didn't like this book but most people do.\n\nThe Aeronaut's Windlass by Jim Butcher - 630 pages. Steampunk fantasy with silo living.\n\nDune by Frank Herbert - 661 pages\n\nLies of Locke Lamora by Scott Lynch - 752 pages. So close to hard mode. :/", "created": 1617299860.0, "author": "mandaday", "score": 9, "replies": [], "commentid": "gt20nuk"}, {"body": "According to Goodreads, *The Way of Kings* (aka Stormlight book 1) by Brandon Sanderson counte for hard mode.", "created": 1617296923.0, "author": "sophia_s", "score": 27, "replies": [], "commentid": "gt1twh6"}, {"body": "This one is kind of hard cause it depends on which copy of a book you're reading. Technically a lot of copies of **Dune** by Frank Herbert aren't 500 pages, but that's because they use the thinnest paper in existence (my copy is 489 pages).\n\n**The Book of Strange New Things** by Michael Faber \n\n**Children of Time** by Adrian Tchaikovsky \n\n**Jonathan Strange and Mr. Norrell (H)**  by Susanna Clarke \n\n**The Gray House** by Mariam Petrosyan\n\n**Jade War** (#2 Green Bone) by Fonda Lee\n\n**Wanderers (H)** by Chuck Wendig (a lot of this reminded me of the pandemic so if you can't stomach anymore of that stay clear)\n\nLots of Stephen King's work is longer than 500 pages, **11/22/63, IT, The Stand** are all probably hard mode.\n\n**The Lord of the Rings (H)** by J.R.R. Tolkien \n\n**The Time Traveler's Wife** by Audrey Niffenegger\n\nVarious **Harry Potter** books fit normal and hard mode", "created": 1617302171.0, "author": "fuckit_sowhat", "score": 6, "replies": [], "commentid": "gt25kmq"}, {"body": "For those pesky lions:\n\n* Peter F. Hamilton's Night's Dawn trilogy. Or most anything else by him.\n* Most (all?) of A Song of Ice and Fire, George R.R. Martin\n* Kingkiller Chronicles, Patrick Rothfuss\n* Lightbringer, Brent Weeks\n* Outlander, Diana Gabaldon\n* Melanie Rawn's Exiles books\n* *1Q84*, Haruki Murakami\n* Dan Simmons' *Olympos*\n* Some of Robin Hobb's Realm of the Elderlings\n* Some (book 3 only?) of Elizabeth Haydon's Symphony of Ages", "created": 1617312239.0, "author": "smartflutist661", "score": 6, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation Thread: **Melanie Rawn**, author of Dragon Prince Trilogy, Exiles, and others](https://www.reddit.com/r/Fantasy/comments/5apcr5/author_appreciation_thread_melanie_rawn_author_of/?st=iv1o6vrb&amp;sh=5d0521bd) from user u/lrich1024 \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617312791.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt2scjc"}, {"body": "I am in the middle of reading \"A Game of Thrones\". I watched the series a few years back but never read the books. So yay, I'm kind of ahead?", "created": 1617375960.0, "author": "Erberos94", "score": 1, "replies": [], "commentid": "gt5az8v"}], "commentid": "gt2r6y3"}, {"body": "I didn\u2019t see **Dragon Mage** by ML Spencer listed yet. GR has it down for 986 pages. I have a cat that is as big as a lion cub. This could squash him!", "created": 1617345316.0, "author": "cheryllovestoread", "score": 8, "replies": [], "commentid": "gt4938u"}, {"body": "Any of Andrew Rowe's **Arcane Ascension** books would work for this but they're all a bit short of hard mode.", "created": 1617304399.0, "author": "Supermirrulol", "score": 2, "replies": [], "commentid": "gt2acu8"}, {"body": "My latest book ***Companion*** clocks in at 571 pages - at least according to Amazon's estimate for the eBook!\n\nWhen I have some more time to compile some, I'll expand this comment with recs for other authors' books.", "created": 1617308948.0, "author": "Luke_Matthews", "score": 1, "replies": [], "commentid": "gt2k6fk"}, {"body": "*Wall of Storms* by Ken Liu (852 pages) and *Wanderers* by Chuck Wendig (801 pages) are the biggest on my TBR. Stephen King's *The Stand* is also huge, especially the unabridged version.", "created": 1617296972.0, "author": "BitterSprings", "score": 5, "replies": [{"body": "Good suggestion. It's a really quick 850 too", "created": 1617393717.0, "author": "WWTPeng", "score": 1, "replies": [], "commentid": "gt6anlz"}, {"body": "Reading Wanderers right now, my edition has 794 numbered pages. So frustratingly close to 800 :P", "created": 1617445506.0, "author": "Svensk_lagstiftning", "score": 1, "replies": [], "commentid": "gt8e74x"}], "commentid": "gt1u0b8"}, {"body": "* **Fortune's Fool** by Angela Boord\n* **The Empire's Ruin** by Brian Staveley", "created": 1617299271.0, "author": "barb4ry1", "score": 1, "replies": [], "commentid": "gt1zbbq"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\nFor this square, they are: \n\nDaughter of No Worlds by Carissa Broadbent\n\nWindborn by Alex Bradshaw\n\nDoomsayer Prince by Rune S. Nielsen\n\nEyes Last Seen Dying by Colin Adams\n\nThe Iron Crown by LL MacRae", "created": 1622826272.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0l6332"}, {"body": "Every book in THE FAITHFUL AND THE FALLEN series by John Gwynne is over 600 pages. The last two books are just shy of hard mode.\n\nHARD MODE:\n\nKUSHIEL'S DART by Jacqueline Carey is over 900 pages\n\nTHE EMBER BLADE by Chris Wooding\n\nI think every book in THE SONG OF ICE AND FIRE is a Lion Squasher.", "created": 1618429467.0, "author": "SeldomlySeriously", "score": 1, "replies": [], "commentid": "guivtio"}, {"body": "Children of the Dead City by Noor Al-Shanti counts for this (not hard mode). \n\n&amp;#x200B;\n\nPS: Full disclosure I'm the author :)", "created": 1617316205.0, "author": "NStorytellerDragon", "score": 2, "replies": [], "commentid": "gt2z5b9"}, {"body": "**The War of the Flowers** by Tad Williams counts for hard mode. It's also a stand-alone, so makes the 800+ pages more palatable ;)", "created": 1617393206.0, "author": "shadowkat79", "score": 1, "replies": [], "commentid": "gt69nhk"}, {"body": "* **Vagabonds** by Hao Jingfang\n\n* **Middlegame** by Seanan Mcguire\n\n* **Tess of the Road** by Rachel Hartman\n\n* **Do You Dream of Terra-Two?** by Temi Oh", "created": 1617301814.0, "author": "perditorian", "score": 1, "replies": [], "commentid": "gt24u21"}, {"body": "Ash by Mary Gentle is hard mode", "created": 1617322337.0, "author": "JiveMurloc", "score": 3, "replies": [], "commentid": "gt3aii5"}, {"body": "Does Heaven\u2019s official blessing count for hard mode? It\u2019s a webnovel, but I think it clocks at 2050 pages. Not sure though as it\u2019s online so I can\u2019t see the number of pages.", "created": 1618399139.0, "author": "Space_dragon05", "score": 1, "replies": [], "commentid": "guh4bvy"}, {"body": "The HP-fanfic I'm reading all books would fit Hard Mode: **Sacrifices Arc** by Lightning on the Waves. It's a 7 book retelling of the Harry Potter books, only this time with the question: *what if Harry had a twin brother, and also his parents raised him to protect him no matter what?*\n\nHe is sorted into Slytherin, there's a huge exploration of magic, the world, the Dark, politics, you name it. It's pretty well done, but trigger warning: &gt;!child abuse, mutilation of a minor, lots of deaths, betrayal, etc.!&lt; It's a pretty dark series, but also a wonderful read if you're at all a fan of Harry Potter (sans author).\n\n---\n\nI'll also add on Wildbow's works, as they are free to read, very good, and absolute monsters: Worm, Ward, Twig, Pale, Pact", "created": 1617301304.0, "author": "xenizondich23", "score": 2, "replies": [], "commentid": "gt23rcg"}, {"body": "Do graphic novel compendiums count? I am currently reading Saga and it\u2019s over 1300 pages and wanted to use that for this square. I checked the series list and it doesn\u2019t show for this series, anyone know if it would work?", "created": 1617309905.0, "author": "Ei8htbit", "score": 1, "replies": [{"body": "I personally wouldn't say compendiums/omnibuses count for this. Especially in this age of ebooks, it is pretty easy to get an omnibus that is 1,000+ pages. Like NK Jemisin's *Inheritance Trilogy* which you can get as a single ebook now: [https://www.amazon.com/Inheritance-Trilogy-N-K-Jemisin/dp/0316334006](https://www.amazon.com/Inheritance-Trilogy-N-K-Jemisin/dp/0316334006)", "created": 1617329633.0, "author": "eidolongitude", "score": 3, "replies": [], "commentid": "gt3n41b"}, {"body": "&gt; I am currently reading Saga and it\u2019s over 1300 pages and wanted to use that for this square. \n\nI believe graphic novel compendiums and omnibuses should count. A collection of short stories (as long as it's a novel length collection) can count for any novel-length square. So I don't see why collected works in a single volume should be treated any differently. Reading Saga Compendium One a major accomplishment.", "created": 1617797349.0, "author": "jddennis", "score": 2, "replies": [], "commentid": "gtoghf5"}], "commentid": "gt2m91d"}, {"body": "I just literally started my review of the latest Jenn Lyons book \u2018A House of Always\u2019 by describing them as Cat Squashers\ud83d\ude02\nCouldn\u2019t help it. If anyone is interested....\n\n\n\nThere is a little description floating around the internet that perfectly describes a Jenn Lyons \u2018A Chorus of Dragons\u2019 novel, a \u201ccat squasher\u201d. While we in no way want to see our feline friends hurt, it\u2019s actually pretty apt. Each book is well over 500 pages, and if you\u2019ll excuse me a moment....the first three are close to three kilos when stacked up on the bathroom scales. Don\u2019t drop them on cats!\nNot only are they weighty in size, they are hella weighty in substance (bigger on the inside if you will). When trying to describe exactly how a Jenn Lyons book is structured I often come off looking like a madman. \u201cSee, there\u2019s this guy, and a shapeshifting murderous creature, and they\u2019re both telling the story in dual timelines only it\u2019s being magically recorded and transcribed and then someone is leaving sarcastic little footnotes on the magical manuscript. What? Oh no, that\u2019s only book one, in book two...\u201d\nHowever, by the time a reader comes to \u2018The House of Always\u2019 they know what they\u2019re in for. They are messy in the best way. Nothing is straight forward, and that\u2019s just starting with the narration and timelines! \nBy the end of the third book, things were quite disastrous, and it was a long, long wait to see how the aftermath of the Ritual of Night was going to work out. Without spoilers, it\u2019s.....a LOT. \nBest part? The characters. The Four prophesied \u201csons\u201d are only the beginning. There are gods, dragons, warriors, magicians, lords, slaves, priests, lords who were slaves, emperors who were magicians, humans that became dragons, dragons who walk as humans, and a demon at the heart of everything. Plus everyone is queer. While I may not actually want to live in the world Lyons has written, I sure do like her representation. Three central characters have decided to forgo the dreaded love triangle and a tangle of pasts and feelings and just be a delightfully messy poly trio. Characters can change their physical gender by petitioning the gods and live their lives just as they\u2019re meant to. It\u2019s simply lovely.\nOn the downside, these books aren\u2019t really something that you can just visit. One needs a lot of attention, and perhaps a really good family tree. One that includes the body swapping and reincarnated souls. I had to do a reread before I could begin House of Always which was a bit time consuming, but definitely worth it.\nSo..not for the neophyte, but for a lover of clever, detailed, high fantasy, Jenn Lyons is it. If you could follow every twist and turn in ASOIAF, or read every appendix in Lord of the Rings and need something new, A Chorus of Dragons is it. If you need a workout, just try lifting these babies!\n4.5 stars, rounded up to 5", "created": 1621308539.0, "author": "indigohan", "score": 2, "replies": [], "commentid": "gyj0v5v"}, {"body": "A Plague of Giants by Kevin Hearne is 768 pages.\n\nThe sequel, A Blight of Blackwings is 720 pages", "created": 1617310857.0, "author": "entwined_Rhino", "score": 2, "replies": [], "commentid": "gt2oax9"}, {"body": "**Kingshold** &amp; **Ioth, City of Lights** by D.P. Woolliscroft\n\n**Fortune's Fool** by Angela Boord\n\n**The Ikessar Falcon** by K. S. Villoso\n\n**We Ride the Storm** &amp; **We Lie With Death** by Devin Madson\n\n**Symphony of the Wind** by Steven McKinnon\n\n**The Tyrant Baru Cormorant** by Seth Dickinson\n\n**The Hod King** by Josiah Bancroft\n\n**Aching God** by Mike Shel (whole series)\n\n**The Siege of Skyhold** by John Bierce\n\n**The Rage of Dragons** &amp; **The Fires of Vengeance** by Evan Winter\n\n**Banebringer** &amp; **Cursebreaker** by Carol A. Park\n\n**IT** by Stephen King (HM)", "created": 1617316125.0, "author": "eightslicesofpie", "score": 1, "replies": [], "commentid": "gt2yzri"}, {"body": "Hi, I'm a self-published author, and my debut novel **Doomsayer Prince** is an epic fantasy, and a:  \nCat Squasher: 500+ Pages  \nI hope you have a great 2021 Fantasy Bingo experience :-)  \n[Buy Doomsayer Prince](https://runesnielsen.com/availablefrom). It's only 99 cents while on sale from June 1-7th.", "created": 1622646171.0, "author": "Rune_S_Nielsen", "score": 1, "replies": [], "commentid": "h0bjvc4"}, {"body": "* **The Gray House** by Mariam Petrosyan  \n* **Inda** by Sherwood Smith  \n* apparently, **Curse of Chalion** by Lois McMaster Bujold is just over 500 pages \n* Malazan.", "created": 1617324871.0, "author": "improperly_paranoid", "score": 2, "replies": [{"body": "&gt;Curse of Chalion  \n&gt;  \n&gt; by Lois McMaster Bujold is just over 500 pages\n\nMust depend on the edition... my hardback is 442.", "created": 1617330140.0, "author": "GALACTIC-SAUSAGE", "score": 2, "replies": [{"body": "I checked it on goodreads (cause I read it in ebook) and it said 512 so \ud83e\udd37 Borderline cat squasher I guess.", "created": 1617354069.0, "author": "improperly_paranoid", "score": 1, "replies": [], "commentid": "gt4hilq"}], "commentid": "gt3nywl"}], "commentid": "gt3eynn"}, {"body": "All seven books in Kate Elliott's Crown of Stars series are Cat Squashers, and books 3-5 are Lion Squashers.", "created": 1617304312.0, "author": "Dsnake1", "score": 4, "replies": [], "commentid": "gt2a60k"}, {"body": "**The Curse of the Mistwraith** by Janny Wurts definitely counts for easy mode and is hard if you count the glossary (the story itself stops on page 797). Also, Melanie Rawn's **The Ruins of Ambrai** counts for hard mode.", "created": 1617304371.0, "author": "tarvolon", "score": 4, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation Thread: **Melanie Rawn**, author of Dragon Prince Trilogy, Exiles, and others](https://www.reddit.com/r/Fantasy/comments/5apcr5/author_appreciation_thread_melanie_rawn_author_of/?st=iv1o6vrb&amp;sh=5d0521bd) from user u/lrich1024 \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617304448.0, "author": "RedditFantasyBot", "score": 0, "replies": [], "commentid": "gt2aglh"}], "commentid": "gt2aant"}, {"body": "Lots of cat squasher scifi.\n\n* Neal Stephenson (almost all)\n* Children of Time or Doors of Eden by by Adrian Tchaikovskey\n* Alastair Reynolds (almost all)\n* Gnomon by Nick Harkaway - also a bunch of genre mash-ups", "created": 1617307012.0, "author": "xolsiion", "score": 3, "replies": [{"body": "This is probably the easiest square.", "created": 1617400044.0, "author": "jenh6", "score": 1, "replies": [], "commentid": "gt6mxu1"}], "commentid": "gt2g0r9"}], "commentid": "gt1p6vt"}, {"body": "**Latinx or Latin American Author** \\- Author is from Latin America or of Latinx/Hispanic heritage. **HARD MODE:** Book has fewer than 1000 Goodreads ratings.", "created": 1617294815.0, "author": "kjmichaels", "score": 11, "replies": [{"body": "Silvia Moreno-Garcia is Mexican-Canadian. *Mexican Gothic*, *Gods of Jade and Shadow*, and *Signal to Noise* are all good choices.", "created": 1617296299.0, "author": "BitterSprings", "score": 24, "replies": [{"body": "Hard second to **Mexican Gothic**, one of my favorites this year so far. I may check out one of her others for my card.", "created": 1617296941.0, "author": "Nineteen_Adze", "score": 5, "replies": [], "commentid": "gt1txug"}, {"body": "Pitch it to me? I\u2019ve heard good things but nothing more specific than \u201cit\u2019s good\u201d", "created": 1617304722.0, "author": "KiaraTurtle", "score": 1, "replies": [{"body": "*Mexican Gothic* is horror in the creepy old house filled with creepy people who have A Secret style. Sort of like *The Haunting of Hill House* and *Crimson Peak*\n\n*Gods* is lighter and about a woman who accidentally releases a Mayan God of Death and has to help him collect his body parts and regain his throne.\n\n*Signal to Noise* I've not read yet alas", "created": 1617306859.0, "author": "BitterSprings", "score": 3, "replies": [{"body": "Thank you!", "created": 1617317105.0, "author": "KiaraTurtle", "score": 1, "replies": [], "commentid": "gt30w1c"}], "commentid": "gt2fozq"}], "commentid": "gt2b1sm"}], "commentid": "gt1sjex"}, {"body": "**hard mode** options from my TBR: \n\n* [Cradle of Sea and Soil](https://www.goodreads.com/book/show/53486007-cradle-of-sea-and-soil) by Bernie An\u00e9s Paz - self-published epic fantasy, queer-normative society, currently 19 ratings\n* [Cece Rios and the Desert of Souls](https://www.goodreads.com/book/show/49613673-cece-rios-and-the-desert-of-souls) by Kaela Rivera - middle grade based on Mexican folklore, currently 93 ratings but it doesn't come out until April 19th\n* [A Curse of Roses](https://www.goodreads.com/book/show/49247031-a-curse-of-roses) by Diana Pinguicha - sapphic, based on Portuguese legend, currently 423 ratings\n* [The Assimilated Cuban's Guide to Quantum Santeria](https://www.goodreads.com/book/show/25362907-the-assimilated-cuban-s-guide-to-quantum-santeria) by Carlos Hernandez - scifi short story collection, currently 567 ratings\n* [Each of Us a Desert](https://www.goodreads.com/book/show/41555962-each-of-us-a-desert) by Mark Oshiro - slow-paced coming-of-age story of a queer girl, currently 669 ratings\n* [Lost in the Never Woods](https://www.goodreads.com/book/show/39897752-lost-in-the-never-woods) by Aiden Thomas - dark Peter Pan retelling, currently 791 ratings (published about a week ago, so will probably hit 1000 soon)\n\nas for books I have read (not HM), [Mexican Gothic](https://www.goodreads.com/book/show/52873094-mexican-gothic), [Cemetery Boys](https://www.goodreads.com/book/show/52339313-cemetery-boys), and [Beneath the Citadel](https://www.goodreads.com/book/show/36430924-beneath-the-citadel) are all great options", "created": 1617306351.0, "author": "Nat-Rose", "score": 25, "replies": [], "commentid": "gt2ekyx"}, {"body": "One Hundred Years of Solitude by Gabriel Garcia Marquez (magical realism, considered a more 'literary' read, so maybe some will think it doesn't fit?)", "created": 1617298044.0, "author": "DemiLisk", "score": 22, "replies": [{"body": "I saw someone saying magical realism definitely counts last year, and I used a Marquez myself for the translation square! I think it fits.", "created": 1617298575.0, "author": "KaPoTun", "score": 14, "replies": [], "commentid": "gt1xnhe"}], "commentid": "gt1wdou"}, {"body": "This will probably be the hardest hard mode.", "created": 1617299860.0, "author": "Udy_Kumra", "score": 20, "replies": [{"body": "Aiden Thomas' new book Lost in the Never Woods is currently at around 800 ratings, but it just came out last week and that's probably going to spike up soon.", "created": 1617307561.0, "author": "CJGibson", "score": 3, "replies": [], "commentid": "gt2h7gm"}], "commentid": "gt20nvz"}, {"body": "i haven't read her yet so I can't confirm but I've heard that Isabel Allende's books have speculative elements, and wikipedia says she's known for magical realism. I'm planning on reading House of the Spirits for this square if it fits, but I'll have to double check", "created": 1617300744.0, "author": "soullesssunrise", "score": 13, "replies": [{"body": "House of the Spirits is absolutely magical realism and has speculative elements, you're good.", "created": 1617301600.0, "author": "characterlimit", "score": 14, "replies": [{"body": "omg nice delighted with that thank you!!", "created": 1617302104.0, "author": "soullesssunrise", "score": 2, "replies": [], "commentid": "gt25fih"}, {"body": "And its an amazing book", "created": 1617318155.0, "author": "TheStraitof____", "score": 4, "replies": [], "commentid": "gt32v30"}], "commentid": "gt24dvm"}], "commentid": "gt22kis"}, {"body": "Kalpa Imperial by Ang\u00e9lica Gorodischer\n\nThe Days of the Deer (Saga of the Borderlands) by Liliana Bodoc\n\nWoven in Moonlight by Isabel Ibanez\n\nNocturna by Maya Motayne\n\nIncendiary by Zoraida Cordova\n\nLobizona by Romina Garber", "created": 1617299998.0, "author": "Arette", "score": 11, "replies": [], "commentid": "gt20yr5"}, {"body": "A couple of my favorite short story authors are Jorge Luis Borges (classic writer of literary fiction with plenty of weird and meta elements) and Carmen Maria Machado (contemporary author of feminist literary horror). Both have collections that would fit for this square.", "created": 1617299915.0, "author": "diazeugma", "score": 10, "replies": [], "commentid": "gt20s96"}, {"body": "Does anyone have suggestions for this written in relatively newbie-friendly Spanish? Latinx YA SFF maybe?\n\nEdit: especially if not available in English", "created": 1617303974.0, "author": "Pseutri", "score": 5, "replies": [{"body": "[La Flor y La Muerte](https://www.goodreads.com/book/show/54386287-la-flor-y-la-muerte) is a YA Hades and Persephone retelling I've been wanting to read. The authors [told me](https://twitter.com/iriayselene/status/1339225343270539266) they didn't think the writing would be too difficult, and it wasn't really, but still turned out to be pretty slow going, so I decided to come back to it another time.\n\nedit: just remembered these authors are Spanish, not Latinx. So still probably a good book, but not for this prompt.", "created": 1617308548.0, "author": "Nat-Rose", "score": 5, "replies": [{"body": "Does Hispanic not include people from Spain? I always thought it did", "created": 1617331447.0, "author": "morisian", "score": 3, "replies": [{"body": "I believe Hispanic means Spanish speaking (which includes Spain but not Brazil), whereas Latino means Latin American (which includes Brazil but not Spain).", "created": 1617648130.0, "author": "undeadbarbarian", "score": 3, "replies": [], "commentid": "gthdpsx"}, {"body": "You're right. I just saw the main prompt is \"Latinx or Latin American author\" and didn't realize Hispanic was included in the specifics. Not sure if the intent for the prompt is to include Spaniards or not.", "created": 1617332606.0, "author": "Nat-Rose", "score": 2, "replies": [{"body": "It does not include Spaniards.", "created": 1617548090.0, "author": "sousii13", "score": 3, "replies": [], "commentid": "gtcojdm"}], "commentid": "gt3s38h"}], "commentid": "gt3q6rf"}], "commentid": "gt2jb0y"}, {"body": "City of the Beasts by Isabel Allende, of House of the Spirits fame.", "created": 1617316961.0, "author": "KaPoTun", "score": 3, "replies": [], "commentid": "gt30ltm"}], "commentid": "gt29fkw"}, {"body": "[**The Mirror Season**](https://www.goodreads.com/en/book/show/51591682) by Anna-Marie McLemore just came out last month and fits hard mode (266 ratings right now)! She also has several other books for easy mode that mainly deal with queer characters.", "created": 1618898114.0, "author": "lolifofo", "score": 1, "replies": [], "commentid": "gv68hy8"}, {"body": "**Regular Mode:**\n\n* **Ghosts** by C\u00e9sar Aira is about ghosts haunting an Argentine construction site. Translated from Spanish.\n* **We Set the Dark on Fire** by Tehlor Kay Mejia is a YA feminist dystopia set in a future country analogous to Mexico.\n* **A People's History of the Vampire Uprising** by Raymond A. Villareal is an epistolary novel in the style of *World War Z*, just with vampires instead.\n* **Her Body and Other Parties** by Carmen Maria Machado\n* **American Street** by Ibi Zoboi (arguably magical realism)\n* **So Far from God** by Ana Castillo\n* **Fever Dream** by Samanta Schweblin\n* **Little Eyes** by Samanta Schweblin\n\n\n**Hard Mode:**\n\n* **Spirits of the Ordinary** by Kathleen Alcal\u00e1\n* **The Island of Eternal Love** by Da\u00edna Chaviano \n* **United States of Banana** by Giannina Braschi\n* **Kingdom of Women** by Rosalie Morales Kearns\n* **Ink** by Sabrina Vourvoulias\n* **Virgins &amp; Tricksters** by  Rosalie Morales Kearns (also fits short stories - hard mode)\n* **Dealing in Dreams** by Lilliam Riviera\n* **Highborn** by Yvonne Navarro\n* **AfterAge** by Yvonne Navarro (backlist - hard mode, debut)", "created": 1617376901.0, "author": "SmallFruitbat", "score": 4, "replies": [{"body": "These all sound great, thanks!", "created": 1617585651.0, "author": "dasatain", "score": 2, "replies": [], "commentid": "gten9bz"}], "commentid": "gt5cuis"}, {"body": "**Little Eyes**, by Samanta SCHWEBLIN. She now lives in Berlin, but is Argentinian. Only easy mode though.", "created": 1617599978.0, "author": "TheOneWithTheScars", "score": 2, "replies": [], "commentid": "gtf9q11"}, {"body": "Trinity Sight by Jennifer Givhan, a Mexican-American writer. It's a post-apocalyptic book set in New Mexico that draws heavily on Zuni legends. It's only got 291 ratings, so it works well for hard mode too.", "created": 1617312925.0, "author": "gggggrrrrrrrrr", "score": 2, "replies": [], "commentid": "gt2smap"}, {"body": "* **Each of Us a Desert** by Mark Oshiro (HM)\n\n* **Eartheater** by Dolores Reyes \n\n* **The Lost book of Adana Moreau** by Michael Zapata (more literary fiction than SFF, but I think it still fits)\n\n* **Things We Lost in the Fire** by Mariana Enriquez", "created": 1617303280.0, "author": "perditorian", "score": 1, "replies": [], "commentid": "gt27xyh"}, {"body": "This seems like the perfect excuse to read **Coyote Songs** by Gabino Igleseas (which should even work for hard mode as would his other novel **Zero Saints** which i also recommend).", "created": 1617308280.0, "author": "PennsylvaniaWeirdo", "score": 1, "replies": [], "commentid": "gt2ipzh"}, {"body": "**Cradle of Sea and Soil** by Bernie An\u00e9s Paz (HM)", "created": 1617316201.0, "author": "eightslicesofpie", "score": 3, "replies": [], "commentid": "gt2z52n"}, {"body": "Labyrinth Lost by Zoraida Cordova (born in Ecuador, raised in New York) - YA, fun, fast-paced, and lots of great female characters", "created": 1617298980.0, "author": "hairymclary28", "score": 2, "replies": [], "commentid": "gt1ymep"}, {"body": "Was asked to reply to each relevant tile, so here we go!\n\n[Cradle of Sea and Soil](https://www.amazon.com/Cradle-Sea-Soil-Islandborn-Book-ebook/dp/B08936MB2T), by me, Bernie An\u00e9s Paz. Puerto Rican. :D The story is partially inspired by Caribbean and Central/South American indigenous people too.", "created": 1617802017.0, "author": "BernieAnesPaz", "score": 2, "replies": [], "commentid": "gtooysz"}, {"body": "It's been on my TBR for a while, but Shadowshaper by Daniel Jose Older", "created": 1617300262.0, "author": "Dragon_Lady7", "score": 1, "replies": [], "commentid": "gt21jbo"}, {"body": "**Sal and Gabi Break the Universe** by Carlos Hernandez. I just realized that this is hard mode, so seems worth adding here. This is a middle grade book - I read it aloud to the kiddos a couple months ago, so it won't work for me. It's set in Miami with a heavily Cuban/Cuban-American cast. It definitely has a young feel, but is so much fun. The kids and I laughed aloud often. And it has some touching parts near the end. Also features found families.", "created": 1617403226.0, "author": "Moonlitgrey", "score": 2, "replies": [], "commentid": "gt6su7p"}, {"body": "* **Shadowshaper** by Daniel Jos\u00e9 Older\n* **Beneath the Citadel** by Destiny Soria\n* **Infomocracy** by Malka Older", "created": 1617299474.0, "author": "barb4ry1", "score": 3, "replies": [{"body": "**Shadowshaper Legacy**, the third book in the *Shadowshaper* trilogy fits hard mode! 368 ratings.\n\nSo does **State Tectonics** (*Infomocracy* #3, 925 ratings)", "created": 1618239831.0, "author": "SmallFruitbat", "score": 2, "replies": [], "commentid": "gu9ernp"}], "commentid": "gt1zspq"}, {"body": "felix j palma's victorian trilogy:  *The Map of Time*, *The Map of the Sky*, and *The Map of Chaos* counts for regular mode.", "created": 1617308411.0, "author": "honeybearbee9", "score": 1, "replies": [], "commentid": "gt2j051"}], "commentid": "gt1p7yy"}, {"body": "**Genre Mashup** \\- A book that utilizes major elements from two or more genres. Examples: a romance set in a fantasy world, a book that combines science fiction and fantasy, etc. **HARD MODE:** Three or more genres are combined.", "created": 1617294828.0, "author": "kjmichaels", "score": 10, "replies": [{"body": "Some possible hard modes:\n\n* **Unholy Land** by Lavie Tidhar \u2014 detective novel/spy thriller/science fiction/fantasy\n* **In the Vanishers' Palace** by Aliette de Bodard \u2014 romance/fantasy/sci-fi/Gothic?\n* **Gideon the Ninth** (and sequel) by Tamsyn Muir \u2014 mystery/fantasy/sci-fi\n* **The Haunting of Tram Car 015** (and sequel, presumably) by P. Dj\u00e8l\u00ed Clark \u2014 fantasy/historical/mystery", "created": 1617298835.0, "author": "diazeugma", "score": 21, "replies": [{"body": "Gideon the Ninth is about six genres at once.", "created": 1617371496.0, "author": "senefen", "score": 15, "replies": [{"body": "Sci-fi, horror, fantasy, gothic, livejournal/tumblr/AO3, and mystery. Checks out.", "created": 1617380565.0, "author": "Phyrkrakr", "score": 10, "replies": [], "commentid": "gt5k792"}], "commentid": "gt52n3f"}, {"body": "Unholy Land was a delight of a book - my first Lavie Tidhar and I definitely want to read more of him now! I think it fits into fantasy + alternate history as well.", "created": 1617379208.0, "author": "woolandwhiskey", "score": 2, "replies": [], "commentid": "gt5hgcp"}], "commentid": "gt1yab0"}, {"body": "Olivia Atwater's books are fantasy/romance/historical. The first one is *Half A Soul*", "created": 1617296124.0, "author": "BitterSprings", "score": 15, "replies": [{"body": "Ah yes, that\u2019s right. I was looking for a reason to buy the third book.", "created": 1617302132.0, "author": "triftmakesbadchoices", "score": 2, "replies": [], "commentid": "gt25hlf"}, {"body": "I read Half a Soul for the HEA square in last year's bingo and loved it, do you know if the 2nd book in the series: ten thousand stitches still counts for Hard Mode?", "created": 1617303937.0, "author": "StormTyphoeus", "score": 4, "replies": [{"body": "It does! There's also a third one coming out later this year. I like *Stitches* even more than the first one.", "created": 1617306658.0, "author": "BitterSprings", "score": 5, "replies": [{"body": "Aw, that's fantastic! Thank you!", "created": 1617374331.0, "author": "StormTyphoeus", "score": 1, "replies": [], "commentid": "gt57t10"}], "commentid": "gt2f9im"}], "commentid": "gt29cqf"}], "commentid": "gt1s59d"}, {"body": "Heroes Die by Mathew Stover - Fantasy/sci-fi. A fantasy world is secretly invaded by 'actors' from a scifi world who are there to have adventures and make VR television for the scifi world, wrecking the fantasy world in the process. May also count as first contact, if separate realities/dimensions count and not just planets. Ignore the famously bad cover art.\n\nStar Wars novels - science fantasy\n\nThis is How You Lose the Time War - romance sci-fi\n\nVita Nostra - fantasy 'magic school-ish'/cosmic horror\n\nGnomon by Nick Harkaway - literary scifi, fantasy, mystery, meta-fiction multilayered hard to summarize utter genius. It's very hard to pitch but please read this. Hard mode. Also counts as a cat squasher.\n\nNOS4A2 by Joe Hill - primarily horror but also kinda urban fantasy. Maybe those genres are too similar to count? But it feels like it counts, to me.\n\nMirror to the Sky by Mark S. Geston - a mostly forgotten, deeply underrated scifi/fantasy about alien art. It's scifi but in the sort of mysitical way that old scifi can get, so I think it counts. Also counts for First Contact square.\n\nThe City and the City by China Meiville - mystery scifi\n\nThe more I think about this square, the more it seems like some genre crossovers feel more crossover-y than others. A romance scifi or a mystery fantasy isn't too surprising, since the genres are based on different elements of story and as such are completely compatible, but a fantasy western or a gothic scifi is way wilder, to me.", "created": 1617303482.0, "author": "Pseutri", "score": 15, "replies": [], "commentid": "gt28dnm"}, {"body": "Gail Carriger's Parasol Protectorate series is super fun with steampunk romance and shenanigans (I think shenanigans is a genre, right?)\n\nPolaris Rising by Jessie Mihalik is a space opera romance\n\nI'd classify the Innkeeper Chronicles by Ilona Andrews as a science fantasy\n\nBurning Bright by Melissa McShane is a historical fantasy romance\n\nSwordheart by T. Kingfisher is a romantic fantasy that is super funny\n\nThe Lunar Chronicles by Marissa Meyer combine scifi and fairy tales", "created": 1617298425.0, "author": "Asheweaver", "score": 10, "replies": [{"body": " *I think shenanigans is a genre, right?* \n\nIf it's not, it should be!", "created": 1617479320.0, "author": "BookishBirdwatcher", "score": 6, "replies": [], "commentid": "gt9yunw"}, {"body": "If not, paranormal, or shapeshifting would be!!", "created": 1617570717.0, "author": "minlove", "score": 1, "replies": [], "commentid": "gtdw88f"}], "commentid": "gt1xaua"}, {"body": "**Hyperion** by Dan Simmons for HM. SF, fantasy, mystery, noir, horror, probably more since each of the characters has their own genre for backstory.", "created": 1617374367.0, "author": "Tigrari", "score": 10, "replies": [{"body": "Oh that's been on my list--great!", "created": 1617378307.0, "author": "tarvolon", "score": 2, "replies": [{"body": "Hope you love it, one of my all time favorites!", "created": 1617393299.0, "author": "Tigrari", "score": 3, "replies": [], "commentid": "gt69u91"}], "commentid": "gt5fnaz"}, {"body": "I recently read Hyperion, and am gonna continue on with Fall of Hyperion soon- would you say Fall (if you've read it) is HM too?", "created": 1617572844.0, "author": "Nidafjoll", "score": 1, "replies": [{"body": "Yes, **Fall of Hyperion** will definitely count for Genre Mashup HM.  Funny (ish) story.  I read Hyperion on the recommendation of a friend who told me, \"only read Hyperion, don't bother will Fall.\"  But, I couldn't stand that it felt so unfinished so I read Fall.  Ultimately I agreed with my friend - I thought **Hyperion** was a better book and didn't really need Fall.  That being said, lots of people like **Fall of Hyperion** and I get the motivation to read it!", "created": 1617573376.0, "author": "Tigrari", "score": 3, "replies": [{"body": "Oh interesting; I really liked Hyperion, and could have been content with it's (admittedly kooky) ending, but someone else told me to make sure to have Fall on hand because it was really one story chopped into two!", "created": 1617573543.0, "author": "Nidafjoll", "score": 2, "replies": [], "commentid": "gte1k5i"}], "commentid": "gte18ub"}], "commentid": "gte08fh"}], "commentid": "gt57vhf"}, {"body": "Literally [my Grimluk, Demon Hunter books](https://www.ashearmstrong.com/works/fiction/grimluk/). And for Hard mode, no less. Fantasy, horror, westerns.", "created": 1617305827.0, "author": "ashearmstrong", "score": 8, "replies": [], "commentid": "gt2deqn"}, {"body": "**Heroes Die** by Matthew Stover. Fits this square to a T and is just pure fun.", "created": 1617298712.0, "author": "Vaeh", "score": 8, "replies": [], "commentid": "gt1xz8k"}, {"body": "Winnowing Flame Trilogy by Jen Williams. Fantasy, Sci-fi and a bit of Horror too.", "created": 1617299883.0, "author": "dhammer5", "score": 8, "replies": [], "commentid": "gt20pqe"}, {"body": "Hello. I'm a pretty new author James G. Robertson here. I have two works out that are both dark fantasy in nature, one with a sci-fi lean, the other with a horror (as well as a historical fiction).\n\nThe first one, Afterworld, has won a few small awards and is getting a second edition this summer along with an audiobook. \n\nThe second, The Ripper, I'm in the process of creating an ensemble cast audiobook (30+ voice actors) and adding a few minor revisions to the ebook before releasing the paperback. This book will be in its final form in all formats come sometime in May. \n\nThese books are in the same \"Next Life Universe\" and are connected, but you can read them in any order. If you have any questions, please feel free to message me!", "created": 1617328952.0, "author": "ThrowBackFF", "score": 3, "replies": [], "commentid": "gt3lypt"}, {"body": "[A Study in Honor](https://www.goodreads.com/book/show/36502081-a-study-in-honor?ac=1&amp;from_search=true&amp;qid=apnoNlwAAj&amp;rank=1) by Claire O'dell - Sherlock Holmes reimagening/near future sci-fi", "created": 1617306153.0, "author": "Myamusen", "score": 6, "replies": [], "commentid": "gt2e4xv"}, {"body": "**Bunny** by Mona Awad - horror/dark comedy/magical realism?\n\n**The Library at Mount Char** by Scott Hawkins - fantasy/horror/mystery\n\n**The Sky is Yours** by Chandler Klang Smith - fantasy/sci-fi/dystopian\n\nAll of these are pretty weird and wild in a fun and somewhat unexpected way.", "created": 1617316472.0, "author": "wombatstomps", "score": 4, "replies": [], "commentid": "gt2znyf"}, {"body": "[Minimum Wage Magic](https://www.goodreads.com/book/show/42385018-minimum-wage-magic?ac=1&amp;from_search=true&amp;qid=dfgcr8PIin&amp;rank=1) by Rachel Aaron - Sci-fi/Urban Fantasy/Mystery\n\nA fun read with an opinionated AI, magical items that need to recharge, a mystery spell that may be valuable, cybernetics, dragons that can take human form and a living city.", "created": 1618597866.0, "author": "Myamusen", "score": 1, "replies": [], "commentid": "gur5cw8"}, {"body": "Pretty sure any Warhammer 40k novel would count for this (fantasy + sci fi). And if you can find a mystery novel set in the Warhammer 40k world (which I think some of the Eisenhorn novels would be?), that would satisfy hard mode.", "created": 1617643245.0, "author": "ratufa_indica", "score": 1, "replies": [], "commentid": "gth2yku"}, {"body": "Mercedes Lackey's Elemental Masters books are historical, fantasy, and usually romance \n\nI feel like the Lady Trent Memoirs by Marie Brennan ought to count.  Fantasy/adventure?  It feels historical but isn't our world; not sure whether it would count for that or not.", "created": 1617317955.0, "author": "oboist73", "score": 2, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617318352.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt338ee"}], "commentid": "gt32hhr"}, {"body": "**The Unspoken Name** by A K Larkwood (Hard Mode) - fantasy, space opera, lgbt, romance", "created": 1622501133.0, "author": "moralTERPitude", "score": 1, "replies": [], "commentid": "h04pv9v"}, {"body": "Rowena Cory Daniells writes fantasy romance.", "created": 1617298462.0, "author": "colorsneverfaded", "score": 2, "replies": [], "commentid": "gt1xe1l"}, {"body": "- **Ash: A Secret History** by Mary Gentle is...well, I could see the argument that it's fantasy or sci-fi, but probably not both, but kind of both? mashed up with military historical fiction. Doubles as a lion squasher.\n- **The Archive of Alternate Endings** by Lindsey Drager is a fairy tale retelling/historical fiction/post-apocalyptic novella in stories.\n- **The Ghost Bride** by Yangsze Choo is fantasy/historical fiction/romance.\n- **Doomsday Book** by Connie Willis and **Quietus** by Tristan Palmgren are sci-fi/historical fiction, about the Black Death mixed with time travel and aliens, respectively.", "created": 1617301163.0, "author": "characterlimit", "score": 4, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Connie Willis**](https://www.reddit.com/r/Fantasy/comments/82ykql/author_appreciation_connie_willis/?st=jeo685bv&amp;sh=888cb4fa) from user u/all_that_glitters_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617301367.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt23w3r"}, {"body": "I was going to recommend the Ghost Bride too!", "created": 1617305673.0, "author": "rugglesbee", "score": 1, "replies": [], "commentid": "gt2d33o"}], "commentid": "gt23gka"}, {"body": "I love me a good mashup. Also feel I should point out that pretty much the entire list for the mystery square will work for this one as well. I won't list most of them again, though will include the ones I think qualify for hard mode.\n\n**Hard Mode (probably)**\n\n* The Dark Tower, Stephen King. Fantasy, SF, horror, western... could probably go on.\n* Chronicles of Amber, Roger Zelazny. Fantasy, hard-boiled detective, political thriller.\n* Night's Dawn, Peter F. Hamilton. SF, horror, fantasy.\n* *Hard-Boiled Wonderland and the End of the World*, Haruki Murakami. Fantasy, hard-boiled detective, magical realism.\n\n**Easy Mode (probably)**\n\n* Dragaera, Steven Brust. Vlad Taltos is fantasy/mafia, Khaavren Romances are fantasy/classic historical adventure (think Dumas).\n* The Sharing Knife, Lois McMaster Bujold. Fantasy/romance.\n* Symphony of Ages, Elizabeth Haydon. Primarily fantasy/romance, though lots of politics in later books.\n* The Blending, Sharon Green. Similar to Symphony of Ages, politics mostly appears in the sequel series.\n* Adventures of Conrad Stargard, Leo Frankowski. Historical SF.\n* Apprentice Adept, Piers Anthony. ~~Not nearly as creepy as Xanth apparently is (as far as I remember), and~~ Never mind, just looked at a review. Still, perhaps the most literal mashup I've seen so far. Two parallel worlds, one fantasy, one SF, our protagonist moves between the two.\n* *The Stand*, Stephen King. Post-apocalyptic horror.\n* Artemis Fowl, Eoin Colfer. Fantasy/SF.\n* Otherland, Tad Williams. Fantasy/SF.\n* Mistborn, Brandon Sanderson. Era 1: fantasy heist. Era 2: fantasy western.\n* Saga of Recluce, L.E. Modesitt Jr. Fantasy/SF.\n* Tales of Alvin Maker, Orson Scott Card. Fantasy/historical fiction.\n* Ardneh Sequence, Fred Saberhagen (Books of Swords, Books of Lost Swords, Empire of the East). Fantasy/SF; like Pern, which is primary depends on where you are in the series.\n* Worldwar (Harry Turtledove) has already been mentioned, but I think it deserves emphasis (especially since it's also a First Contact). Alternate history SF.\n* The Mars Trilogy, Kim Stanley Robinson? I would say it combines political thriller and SF.", "created": 1617391187.0, "author": "smartflutist661", "score": 3, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation Thread: **Roger Zelazny**](https://www.reddit.com/r/Fantasy/comments/5d96ap/author_appreciation_thread_roger_zelazny/?st=ivm72j5d&amp;sh=9ecd534a) from user u/CommodoreBelmont \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617391285.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt65s4t"}], "commentid": "gt65kwr"}, {"body": "Any of the 40k-set books in Black Library's *Warhammer Horror* and *Warhammer Crime* could well count for Hard Mode, since the universe is a fantasy/sci-fi (broadly speaking) mashup and those two imprints are, well, Horror and Crime-focussed.", "created": 1617330371.0, "author": "StoryWonker", "score": 2, "replies": [], "commentid": "gt3od5p"}, {"body": "**A Thousand Words for Stranger** by Julie Czerneda is romance/sci-fi. \n\n**Innkeeper Chronicles** by Ilona Andrews is sci-fantasy, plus urban fantasy, sorta.", "created": 1617305915.0, "author": "tigrrbaby", "score": 2, "replies": [{"body": "Would you say book 2 of Trade Pact (*Ties of Power*) would also count? Been a while since I've read the first, but would appreciate an excuse to continue the series.", "created": 1617318411.0, "author": "smartflutist661", "score": 1, "replies": [{"body": "yes, i think so! the romance is drawn out into book 2, whereas book 3 is more focused on solving a particular problem. i suppooooose you could  say 3 is mystery + scifi but that might be a stretch.", "created": 1617327333.0, "author": "tigrrbaby", "score": 2, "replies": [], "commentid": "gt3j6my"}], "commentid": "gt33ccq"}], "commentid": "gt2dlpe"}, {"body": "The Incorruptibles by Jonh Hornor Jacobs. A really great read that's a mashup of, and I've checked, all the genres. Alternate roman history, with a bit of steampunk (trapped demons used for power rather than steam), some western, a bit of bounty hunter action, etc. all set in a world where elves and other fantastical species exist.", "created": 1617315059.0, "author": "wheresmylart", "score": 1, "replies": [], "commentid": "gt2wwpn"}, {"body": "**Outlander** by Diana Gabaldon (and any of the sequels) should hit HM - historical/fantasy/romance.  I think all (or at least most) also would be Lion Squasher status.", "created": 1617426255.0, "author": "Tigrari", "score": 2, "replies": [], "commentid": "gt7ukv8"}, {"body": "I've got lists on my TBR of mashups, and most are either horror/sci fi or fantasy/romance. I haven't read any, but hopefully they inspire!\n\n* **Darkhouse** by Karina Hall - fantasy/horror/romance? HM\n* **Pitch Dark b**y Courtney Alameda - horror/sci fi/thriller? HM\n* **Contagion** by Erin Bowman - horror/sci fi\n* **The Luminous Dead** by Caitlin Staring - horror/sci fi\n* **Salvation Day** by Kali Wallace - horror/sci fi\n* **Dead Space** by Kali Wallace - horror/mystery/sci fi? HM\n* **Ghost Planet** by Sharon Lynn Fisher - sci fi/fantasy/romance HM\n* **A Promise of Fire** by Amanda Bouchet - fantasy/romance\n* **Empire of Sand** by Tasha Suri - fantasy/romance\n* **Swordheart** by T Kingfisher - fantasy/romance\n* **Polaris Rising** by Jessie Mihalik - sci fi/romance\n* **Strange Love** by Ann Aguirre - sci fi/romance", "created": 1617469597.0, "author": "psyche_13", "score": 2, "replies": [], "commentid": "gt9fe1o"}, {"body": "*In Fury Born -* David Weber. Elements of Military Sci-fi, Mystery/revenge story and some Greek mythology thrown in just for fun. Honestly I think this book is Weber at his absolute best.\n\nInnkeeper Chronicles  - Ilona Andrews. Urban fantasy with some Sci-Fi (the amount varies depending on which book).", "created": 1617308734.0, "author": "Vezir38", "score": 1, "replies": [], "commentid": "gt2jpre"}, {"body": "Would the stand by Stephen king count?", "created": 1617414767.0, "author": "riz3r777", "score": 1, "replies": [], "commentid": "gt7cy4o"}, {"body": "Terry Pratchett's Discworld is probably a bit basic for this sub, but his City Watch books combine comedy, fantasy, and police procedurals, so I guess they would fit hard mode.", "created": 1617337156.0, "author": "FiliaSecunda", "score": 3, "replies": [], "commentid": "gt3yy0r"}, {"body": "* **The Unspoken Name** by AK Larkwood (science fiction/fantasy)\n\n* **Phoenix Extravagant** by Yoon Ha Lee (science fiction/fantasy)\n\n* **Middlegame** by Seanan Mcguire (horror/ sci fi/ fantasy?)\n\n* **Winter's Orbit** by Everina Maxwell (sci fi/ romance)\n\n* **The Night Tiger** by Yangsze Choo (mystery/ magical realism/ historical)\n\n* **The Swimmers** by Marian Womack (eco-dystopian/ gothic)", "created": 1617302775.0, "author": "perditorian", "score": 2, "replies": [], "commentid": "gt26uv0"}, {"body": "I feel Dune fits this pretty well, as does the Dragonriders of Pern series by Anne McCaffrey", "created": 1617300808.0, "author": "soullesssunrise", "score": 13, "replies": [], "commentid": "gt22pj1"}, {"body": "These are specifically Romance/Fantasy mashups \n\nBinding Vows By: Catherine Bybee  \n\nThe Muse  By: Lauren Blakely  \n\nBlood Brothers By: Nora Roberts  \n\nTouched by Fire By: Kel Carpenter  \n\nMorna's Legacy By: Bethany Claire  \n\nDark Horse By: Michelle Diener  (would also count as a \"found family\")  \n \nHow to Date Your Dragon By: Molly Harper  \n\nMorrigan's Cross By: Nora Roberts  \n\nThe Bridge Kingdom By: Danielle L. Jensen  \n\nThe Mermaid's Daughter By: Ann Claycomb  \n\nThe Awakening By: Nora Roberts  \n\nSpellbound Falls By: Janet Chapman  \n\nNice Girls Don't Have Fangs By: Molly Harper  \n\nSin &amp; Chocolate By: K.F. Breene  \n\nMake Mine Magic By: Shanna Swendson  \n\nYear One By: Nora Roberts  \n\nThe Coincidence Makers By: Yoav Blum  \n\nDark Witch By: Nora Roberts  \n\nA Discovery of Witches By: Deborah Harkness  \n\nOutlander By: Diana Gabaldon (would also count as a \"cat smasher\")  \n\nStars of Fortune By: Nora Roberts  \n\nBloodsucking Fiends: A Love Story By: Christopher Moore", "created": 1617338071.0, "author": "Housewife-AK", "score": 1, "replies": [], "commentid": "gt407y6"}, {"body": "**The Two Georges** is an old (1995 UK, 1996 US) alternate history and detective thriller, with a bit of romance and conspiracy theory thrown in. This was co-authored by *Harry Turtledove* and *Richard Dreyfuss* (yes, the actor). I think it qualifies for **hard mode**. I don't know if it would qualify for backlist because that would only be for one of the authors.", "created": 1617620663.0, "author": "Gyr-falcon", "score": 1, "replies": [], "commentid": "gtfw7gh"}, {"body": "**City of Stairs** (and sequels) by Robert Jackson Bennett -- spy thriller/fantasy\n\n**The Golem and the Jinni** by Helena Wecker -- historical fantasy\n\n**A Declaration of the Rights of Magicians** by H. G. Parry -- historical fantasy\n\n**Cloud Atlas** by David Mitchell -- literary/science fiction/magical realism", "created": 1617299947.0, "author": "LadyCardinal", "score": 6, "replies": [], "commentid": "gt20urq"}, {"body": "**Amari and the Night Brothers** (HM) by B.B. Alston fantasy/sci-fi/mystery (it's middle-grade, and I feel like maybe MG is a little more comfortable mashing up tropes that may be familiar to the audience? I dunno, just a thought)", "created": 1617378363.0, "author": "tarvolon", "score": 1, "replies": [], "commentid": "gt5fr9k"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\n**For this square, they are:**\n\n[Lady's Vago's Malediction](https://indiestorygeek.com/story/792) by AKM Beach\n\n[A Change of Blood](https://indiestorygeek.com/story/893) by G. P. Gabriel\n\n[Quantum Cultivation](https://indiestorygeek.com/story/928) by Jace Kang\n\n[Legacy of Flame](https://indiestorygeek.com/story/880) by Rebecca Bapaye\n\n[The Stars Within](https://indiestorygeek.com/story/820) by Lena Alison Knight\n\n[Daughter of No Worlds](https://indiestorygeek.com/story/988)by Carissa Broadbent\n\n[Kept From Cages](https://indiestorygeek.com/story/902) by Phil Williams\n\n[Stranger Back Home](https://indiestorygeek.com/story/963)by EL Haines\n\n[Sword of Cho Nisi](https://indiestorygeek.com/story/974) by D.L. Gardner\n\n[Snowborn](https://indiestorygeek.com/story/861) by Larema Dixon\n\n[Cursed](https://indiestorygeek.com/story/823) by Brent Miller\n\n[Blood Indigo](https://indiestorygeek.com/story/745) by Talulah J. Sullivan\n\n[The Scars of Gaia](https://indiestorygeek.com/story/738) by R P Lauer\n\n[Gathering of the Four: Book One of the Serrulata Saga](https://indiestorygeek.com/story/712) by A.E. Bennett\n\n[Out of the Dust](https://indiestorygeek.com/story/807) by Joe Coates\n\n[Waking the Witch](https://indiestorygeek.com/story/919) by W. V. Fitz-Simon\n\n[I Kill Monsters](https://indiestorygeek.com/story/955) by Dennis Liggio\n\n[Orphan's Rite](https://indiestorygeek.com/story/795) by M. Warren Askins\n\n[Ghosts of the Nightmare Gods](https://indiestorygeek.com/story/869) by Rebecca Mickley\n\n[Carrion](https://indiestorygeek.com/story/797) by Alyson Tait\n\n[This Quest is Bullshit!](https://indiestorygeek.com/story/848)\u00a0by\u00a0JP Valentine\n\n[Fool's Proof](https://indiestorygeek.com/story/854) by Eva Sandor\n\n[The Only Wizard in Town](https://indiestorygeek.com/story/977) by Heide Goody and Iain Grant\n\n[Red in Tooth and Claw](https://indiestorygeek.com/story/933) by Ryan Howse\n\n(there are likely more\u2014 a lot of the SPFBO7 books are mashups)", "created": 1622828243.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0laqo8"}, {"body": "The Midnight Bargain by C.L. Polk. Fantasy Romance, very cute, and definitely not long enough.", "created": 1617297152.0, "author": "Endalia", "score": 6, "replies": [], "commentid": "gt1uerw"}, {"body": "How many genres do we feel like are mashed up in **The Quest of the Five Clans** by Raymond St. Elmo? There\u2019s definitely romance and urban fantasy, but there\u2019s also some political conspiracy and literary elements and I don\u2019t even know. \n\nDefinitely works for this square, just not sure about hard mode", "created": 1617314278.0, "author": "tarvolon", "score": 4, "replies": [], "commentid": "gt2vd21"}, {"body": "**Finch** by Jeff VanderMeer (Ambergris #3) is a noir/mystery/fantasy/sci-fi(ish)/horror novel, but it's best after reading the fully New Weird first two books in the series. \n\n**Recursion** by Blake Crouch is a fun blockbuster-style sci-fi thriller. \n\n**The Year of the Witching** by Alexis Henderson is a horror fantasy blend that uses a lot of horror techniques and tropes in a second-world fantasy dystopian setting.", "created": 1617309396.0, "author": "Dsnake1", "score": 2, "replies": [], "commentid": "gt2l5ne"}, {"body": "[From Legend](https://www.amazon.com/dp/B07PGSDVC9) (Low Fantasy, Western, and Detective) and [The Camaro Murders](https://www.amazon.com/dp/B077W12M7R) (Ghost Story and Murder Mystery), both by Ian Lewis.", "created": 1617394316.0, "author": "IanLewisFiction", "score": 1, "replies": [], "commentid": "gt6bu8s"}, {"body": "**Temeraire** series by Naomi Novik is alternate history/naval fiction/dragons", "created": 1617342869.0, "author": "willalala", "score": 2, "replies": [], "commentid": "gt46cbj"}, {"body": "David Wong's stuff fits this!\n\n**John Dies at the End** is sci-Fi/horror/humor. John and Dave are two best friends from a non-descript town. One night, John ingests *something* that changes everything. Dave has to figure out how to help his friend. I really don't want to spoil anything, but it's absolutely hilarious. The other 2 books in the series would fit as well. Book 2 is called This Book is Full of Spiders and book 3 is What the Hell did I Just Read.\n\n**Futuristic Violence and Fancy Suits** is sci-fi/humor/a little bit of mystery. Zoey is an average girl whose life goes crazy when her exceptionally rich biological father dies and she becomes the #1 most wanted person in the country. This is probably my favorite book ever and might be my comfort read. The second book (Zoey Punches the Future in the Dick) is also very good. \n\nZoey's cat's name is Stench Machine. If that doesn't make you want to read the books, I don't know what will.", "created": 1617401303.0, "author": "DamnitRuby", "score": 1, "replies": [], "commentid": "gt6pbhe"}, {"body": "Robocopter Ski Patrol, Untitled Spy Story, and Ruben's Cube Alaska by Aaron C. Cross \n\nRC: A mercenary group gets back together to try to stop a dictator from taking over a huge supply of yellow cake uranium. Hijinks and reality messes ensue. There's also a robotic helicopter.\n\nUSS: Four government agents get burned and have to find a way to clear their names while exploring the world and getting to the bottom of a sinister cabal's plan. Lou Bega makes an appearance and hasn't sued me yet, which is nice of him.\n\nRCA: A man up in Alaska both is and isn't himself and has to figure it out. There's also a cube that can change time and reality. Also, there's a semi-immortal Russian with a direwolf. He's pretty fun.\n\nThese books are also eligible for Hard Mode since they combine comedy, fantasy, and spy/thriller genres!", "created": 1617391991.0, "author": "aaronccross", "score": 1, "replies": [], "commentid": "gt677ty"}, {"body": "Some good fantasy westerns:\n\n\\- Charlaine Harris's Gunnie Rose series, starting with An Easy Death\n\n\\- Patricia Wrede's Frontier Magic series, starting with Thirteenth Child", "created": 1617330514.0, "author": "gracefruits", "score": 3, "replies": [], "commentid": "gt3olz0"}, {"body": "For hard mode:\n\n\\- **The Spellbreaker duology** by Charlie N. Holmberg (fantasy/mystery/romance)\n\n\\- **Witchmark** by C.L. Polk (fantasy/mystery/romance)\n\n\\- **The Lord of Stariel** by A.J. Lancaster (fantasy/mystery/romance)\n\n\\- **The Lunar Chronicles** by Marissa Meyer (sci-fi/romance/fairytale retelling)\n\n\\- **The Magpie Lord** by K.J. Charles (fantasy/mystery/romance)", "created": 1617303908.0, "author": "cubansombrero", "score": 4, "replies": [{"body": "Already have The Magpie Lord penciled in! God, I love this part of Bingo!! \ud83d\ude0d", "created": 1617340796.0, "author": "cheryllovestoread", "score": 1, "replies": [{"body": "I\u2019m reading the sequel for the gothic square! I love figuring out where everything fits on my card.", "created": 1617341248.0, "author": "cubansombrero", "score": 1, "replies": [], "commentid": "gt44com"}], "commentid": "gt43sgg"}], "commentid": "gt29alm"}, {"body": "Many of the Maradaine book by Marshall Ryan Maresca work for this. For instance,  *A Murder of Mages* is mystery/police procedural and fantasy, *The Holver Alley Crew* is heist fantasy, *The Thorn of Dentonhill* is fantasy-meets-superhero novel, etc. The books intersect a lot, but I think all three I mentioned can be read as standalones (*Murder* and *Thorn* certainly can).\n\n*The Spirit Lens* by Carol Berg is also at least as much murder mystery as it is fantasy.", "created": 1617301443.0, "author": "sophia_s", "score": 4, "replies": [], "commentid": "gt241yl"}, {"body": "Lot of alternate history which has a SF/Fantasy/Horror source, like Harry Turtledove's Worldwar series or Kim Newman's Anno Dracula work very well.", "created": 1617328683.0, "author": "Kerney7", "score": 2, "replies": [], "commentid": "gt3li3z"}, {"body": "The Bas-Lag books by China Mieville should probably count for HM", "created": 1617311024.0, "author": "RevolutionaryCommand", "score": 6, "replies": [{"body": "Thanks for suggesting this. I've got *The Scar* but haven't read it yet!", "created": 1617334268.0, "author": "DoesTheOctopusCare", "score": 3, "replies": [], "commentid": "gt3uppl"}], "commentid": "gt2onsh"}, {"body": "**Sharon Shinn** is a wonderful fit for this square - romance &amp; fantasy.", "created": 1617671916.0, "author": "beldaran1224", "score": 1, "replies": [], "commentid": "gtiqssh"}, {"body": "I would have thought Terry Pratchett's Discworld comes in here under either:  \nFantasy/Comedy   \nor   \nComedic Fantasy/Satire", "created": 1621228898.0, "author": "MomoMilo", "score": 1, "replies": [], "commentid": "gyeurop"}, {"body": "Gideon the 9th by Tamsyn Muir (sci fi, fantasy and mystery)\n\nIlona Andrews: Hidden Legacy &amp; The Edge series (mix of urban fantasy/fantasy and romance. All Hidden Legacy books also have a mystery plot so that could count as third genre)\n\nIlona Andrews: Kate Daniels series (urban fantasy, post-apocalyptic, mystery/action)\n\nIlona Andrews Innkeeper series (mix of urban fantasy and very light sci fi elements)\n\nRebecca Roanhorse: Trail of Lightning (urban fantasy, post-apocalyptic, mystery/action)", "created": 1617302069.0, "author": "Arette", "score": 2, "replies": [], "commentid": "gt25cyh"}, {"body": "Just started **Orconomics** by J. Zachary Pike and it's definitely mashing up some genres as well as being self-published and his debut", "created": 1617308293.0, "author": "xolsiion", "score": 2, "replies": [], "commentid": "gt2iqyn"}], "commentid": "gt1p920"}, {"body": "**First Person POV** \\- defined as:  a literary style in which the narrative is told from the perspective of a narrator speaking directly about themselves. [Link for examples.](https://examples.yourdictionary.com/examples-of-point-of-view.html) **HARD MODE:**  There is more than one perspective, but each perspective is written in First Person.", "created": 1617294727.0, "author": "kjmichaels", "score": 8, "replies": [{"body": "**Kushiel's Dart** and sequels by Jacqueline Carey\n\n**Spinning Silver** by Naomi Novik (HM)\n\n**Never Let Me Go** by Kazuo Ishiguro\n\n**Anathem** by Neal Stephenson\n\n**The First Fifteen Lives of Harry August** by Claire North\n\n**Cloud Atlas** by David Mitchell is a weird case--it has more than one first-person POV but not every section is written in first person\n\n**They Both Die at the End** by Adam Silvera (HM)\n\nmost books by Octavia Butler\n\nmost books by Haruki Murakami", "created": 1617297456.0, "author": "LadyCardinal", "score": 21, "replies": [{"body": "Spinning Silver seems like ultra-hardcore mode because not only are there 6 narrators, their sections aren't labelled by their names! You just have to figure it out. Which.... is actually quite easy. I was impressed.", "created": 1617307113.0, "author": "Merle8888", "score": 24, "replies": [{"body": "I listened to this one in Audiobook which made this quite challenging.", "created": 1617309693.0, "author": "CJGibson", "score": 2, "replies": [{"body": "Haha I\u2019ll bet, did they have one reader doing them all? It seems like the best answer would be six different voice actors!", "created": 1617310154.0, "author": "Merle8888", "score": 1, "replies": [{"body": "Yeah it was a single voice for the whole book.", "created": 1617310296.0, "author": "CJGibson", "score": 1, "replies": [{"body": "I thought it was actually pretty easy to tell who was speaking. The three MC were pretty easy to pick out and the others were distinct in other ways.", "created": 1617326573.0, "author": "Kerney7", "score": 2, "replies": [], "commentid": "gt3hvbk"}], "commentid": "gt2n37l"}], "commentid": "gt2ms6d"}], "commentid": "gt2lsxy"}], "commentid": "gt2g8l0"}, {"body": "Is This Is How You Lose The Time War first person POV? I just started it earlier today so I\u2019m not very far into it, but so far it\u2019s all been third person POV.", "created": 1617833959.0, "author": "AltheaFarseer", "score": 2, "replies": [{"body": "I just opened up my copy, and you're right. I only remembered the epistolary parts. Sorry about that; I'll edit my comment with the correction.", "created": 1617834069.0, "author": "LadyCardinal", "score": 2, "replies": [], "commentid": "gtqpgf9"}], "commentid": "gtqp89p"}], "commentid": "gt1v2kz"}, {"body": "* **Ring Shout** by P. Djeli Clark\n* **Legendborn** by Tracy Deonn\n* **Snowspelled** by Stephanie Burgis\n* **The Memoirs of Lady Trent** by Marie Brennan\n* **Lady Astronaut** by Mary Robinete Kowal\n* **Fable** by Adrienne Young\n* **Aurora Rising** by Amie Kaufman and Jay Kristoff (hard)\n* **Hall of Smoke** by H.M. Long\n* **An Ember in the Ashes** by Sabaa Tahir (hard)\n* **A Dowry of Blood** by S.T. Gibson\n* **All the Murmuring Bones** by A.G. Slatter\n* **Raybearer** by Jordan Ifueko\n* **The Philosopher's Flight** by Tom Miller\n* **Ancestral Night** by Elizabeth Bear\n* **Cold Fire** by Kate Elliott\n* **The Bedlam Stacks** by Natasha Pulley\n* **The Bone Season** by Samantha Shannon\n* **Circe** and **The Song of Achilles** by Madeline Miller\n* **The Harp of Kings** by Juliet Marillier (hard)\n* **Lancelot** by Giles Kristian\n* **Witchmark** by C.L. Polk", "created": 1617301687.0, "author": "cubansombrero", "score": 13, "replies": [], "commentid": "gt24kik"}, {"body": "**The Nothing Within** by Andy Giesler is a very nice example of this. It actually includes two first-person narrators, which *might* mean it counts for hard mode, but one of the first-person narrator also narrates the actions of two other POV characters, so it might not. \n\nOther easy mode examples that are good:\n\n**Chasing Graves** by Ben Galley\n\n**The Murderbot Diaries** by Martha Wells\n\n**A Deadly Education** by Naomi Novik", "created": 1617296965.0, "author": "tarvolon", "score": 10, "replies": [{"body": "Thank you. Really wanted to work in Chasing Graves into Bingo", "created": 1617377042.0, "author": "sfi-fan-joe", "score": 1, "replies": [{"body": "FWIW it also has chapter titles (and, as you no doubt know, is self-published)", "created": 1617377337.0, "author": "tarvolon", "score": 1, "replies": [], "commentid": "gt5dpit"}], "commentid": "gt5d4iw"}], "commentid": "gt1tzs7"}, {"body": "A lot of YA fiction will fit this square. \n\nBook of a Thousand Days by Shannon Hale\n\nPercy Jackson series by Rick Riordan\n\nA Natural History of Dragons by Marie Brennan\n\nA Deadly Education by Naomi Novik", "created": 1617297056.0, "author": "Asheweaver", "score": 9, "replies": [], "commentid": "gt1u6wa"}, {"body": "Robin Hobb's Farseer Trilogy, and in general all of the Fitz books in the ROTE series (I don't think it fits HM, but a few books later in the series might? Not 100% sure I'm afraid, it's been a while).", "created": 1617296544.0, "author": "kalina789", "score": 8, "replies": [{"body": "The Fitz and the Fool trilogy, i.e. the last trilogy of the RotE series fits Hard Mode.", "created": 1617297315.0, "author": "ullsi", "score": 10, "replies": [], "commentid": "gt1urlr"}, {"body": "Liveship Traders fits here, too, right?", "created": 1617672573.0, "author": "beldaran1224", "score": 1, "replies": [{"body": "Liveship Traders is third-person.", "created": 1617824825.0, "author": "AltheaFarseer", "score": 2, "replies": [{"body": "Oh, I guess it is. Feels very 1st person.", "created": 1617826416.0, "author": "beldaran1224", "score": 2, "replies": [], "commentid": "gtq8ng4"}], "commentid": "gtq4ya0"}], "commentid": "gtis3ao"}], "commentid": "gt1t2sv"}, {"body": "Most of the **Vlad Taltos** books by Steven Brust are written from Vlad's POV, but *only* his, so no hardmode.\n\nLots of urban fantasy likes to use first person POV - the **Kate Daniels** books by Ilona Andrews is the most recent one I've read that does it.  Pretty sure **Dresden Files** and **Sandman Slim** are both FPPOV, too.\n\nKate Elliott's newest one, **Unconquerable Sun**, is an interesting one - one of the viewpoint characters is FPPOV, but nobody else is.  I think that *all* of the viewpoint characters have to be first person, so no hardmode for this one either.\n\nI *think* that **Sorcery &amp; Cecelia, or, the Enchanted Chocolate Pot** by Stevermer and Wrede would count for hard mode for this.  It's an epistolary novel where the two viewpoint characters are writing letters back and forth to each other, so naturally, each is writing their respective letters in the first person.  I don't remember any bits that fall outside their correspondence, so it stays in first person for the entire book.", "created": 1617313598.0, "author": "Phyrkrakr", "score": 7, "replies": [], "commentid": "gt2tzqz"}, {"body": "Innkeeper's Song by Peter S. Beagle fits Hard Mode, and it's an excellent standalone.", "created": 1617295817.0, "author": "RevolutionaryCommand", "score": 8, "replies": [], "commentid": "gt1rgjf"}, {"body": "*The Future of Another Timeline* by Annalee Newitz (HM)", "created": 1617297506.0, "author": "GALACTIC-SAUSAGE", "score": 8, "replies": [], "commentid": "gt1v6iw"}, {"body": "* **The Blacktongue Thief** by Christopher Buehlman", "created": 1617299010.0, "author": "barb4ry1", "score": 7, "replies": [{"body": "Thank you! One extra reason to read this book!", "created": 1617303962.0, "author": "SA090", "score": 1, "replies": [], "commentid": "gt29ep1"}], "commentid": "gt1yoxn"}, {"body": "The Memoirs of Lady Trent by Marie Brennan (series)\n\nThe Magic of Recluse by LE Modessitt\n\nThe Imager Portfolio by LE Modessitt (series)\n\nBroken Empire by Mark Lawrence (series)\n\nSixteen Ways to Defend a Walled City by KJ Parker\n\nTears of a Heart by Chase Blackwood", "created": 1617352209.0, "author": "apcymru", "score": 1, "replies": [], "commentid": "gt4fu2o"}, {"body": "would Dracula count for Hard Mode?", "created": 1619037215.0, "author": "masterthes79", "score": 1, "replies": [{"body": "One of the newspaper sections is not in first person, but that is like 2 pages in a 440 page book so depends on how strict you want to be. Rest is FP and many different POV.", "created": 1619264222.0, "author": "Svensk_lagstiftning", "score": 1, "replies": [], "commentid": "gvoep1r"}], "commentid": "gvd7dls"}, {"body": "I have a terrible memory for plots and characters let alone which POV is being used, but I think all of these apply. I'll edit as I think of more.\n\n**~~The Invisible Life of Addie LaRue~~** ~~by V.E. Schwab~~\n\n**The Song of Achilles** by Madline Miller?\n\n**Piranesi** by Susanna Clarke\n\n**Red Rising** by Pierce Brown", "created": 1617298284.0, "author": "fuckit_sowhat", "score": 2, "replies": [{"body": "The Invisible Life of Addie LaRue is written in third person POV actually!", "created": 1617299666.0, "author": "maybe_from_jupiter", "score": 3, "replies": [{"body": "Thank you!", "created": 1617302336.0, "author": "fuckit_sowhat", "score": 2, "replies": [], "commentid": "gt25x90"}], "commentid": "gt208b2"}], "commentid": "gt1wz43"}, {"body": "[The Camaro Murders](https://www.amazon.com/dp/B077W12M7R) by Ian Lewis.", "created": 1617394063.0, "author": "IanLewisFiction", "score": 1, "replies": [], "commentid": "gt6bc6c"}, {"body": "**Reborn Empire** books by Devan Madsen are hard mode.\n\n\n**Seven Kennings** books by Kevin Hearne are hard mode.", "created": 1617394268.0, "author": "WWTPeng", "score": 3, "replies": [], "commentid": "gt6bqrq"}, {"body": "Uprooted by Naomi Novik \n\nSpinning Silver by Naomi Novik is great for hard mode \n\nThe Murderbot Diaries by Martha Wells \n\nSunshine by Robin McKinley", "created": 1617319058.0, "author": "oboist73", "score": 3, "replies": [], "commentid": "gt34jye"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\nFor this square, they are: \n\nTruth and Other Lies by Lyra Wolf (Hard Mode) \n\nDaughter of No Worlds by Carissa Broadbent (Hard Mode)\n\nWindborn by Alex Bradshaw\n\nAlong the Razor's Edge by Rob J Hayes\n\nStranger Back Home by EL Haines", "created": 1622824591.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0l263u"}, {"body": "The Bobiverse series probably qualifies for hard mode. I could see an argument against it, but I think it counts.", "created": 1618203225.0, "author": "ConnorF42", "score": 1, "replies": [], "commentid": "gu8204r"}, {"body": "Rivers of London series by Ben Aaronovitch\n\nMontague Siblings series by Mackenzie Lee\n\nThe Bedlam Stacks by Natasha Pulley", "created": 1617299398.0, "author": "RubiscoTheGeek", "score": 3, "replies": [], "commentid": "gt1zm30"}, {"body": "**The Red Rising Saga**, one of my favorite book series. The books from the second trilogy (*Iron Gold* and *Dark Age* so far) fit hard mode too. I still havent read Dark Age so I have the perfect book for this if I want to give the bingo a try.", "created": 1617569986.0, "author": "OpusCanopus", "score": 1, "replies": [], "commentid": "gtduubx"}, {"body": "**Dresden Files**!!! The first few also qualify as mashups of noir/mystery/fantasy too", "created": 1617389140.0, "author": "Housewife-AK", "score": 2, "replies": [{"body": "Is storm front hm?", "created": 1617550251.0, "author": "Erberos94", "score": 1, "replies": [{"body": "Yes, that's Book 1 of the series, but Jim Butcher (the author) recommends starting with Summer Knight (bk 4) as that's where the series really takes off and the writing improves dramatically.  \n\nStrom Front was Butcher's first ever novel and began as a college writing exercise, so it's pretty simple/clunky.  I enjoyed it, but I'll read just about anything - others I've chatted with about it didn't really like the first few, but just about everyone enjoys from Summer Knight onward in the series", "created": 1617640034.0, "author": "Housewife-AK", "score": 2, "replies": [{"body": "Thank you for the info. It's a series I've heard a lot about and I am looking forward to it. I read \"Restoration of Faith\" to get a small taste of the concept and I really liked it. I don't mind starting from book 1.", "created": 1617648890.0, "author": "Erberos94", "score": 2, "replies": [], "commentid": "gthfdu7"}], "commentid": "gtgvu9h"}], "commentid": "gtcslwh"}], "commentid": "gt61j7y"}, {"body": "* The Lady Astronaut series by Mary Robinette Kowal\n* Piranesi by Susanna Clarke\n* The Farseer Trilogy by Robin Hobb", "created": 1617298698.0, "author": "ullsi", "score": 2, "replies": [], "commentid": "gt1xy3z"}, {"body": "Thanks for allowing resident authors to rec their works.  [Harpyness is Only Skin Deep](https://www.goodreads.com/book/show/53332248-harpyness-is-only-skin-deep) and [Finding Your Harpy Place](https://www.goodreads.com/book/show/55681173-finding-your-harpy-place) qualify for First Person POV, hard mode.", "created": 1617566255.0, "author": "Kululu17", "score": 2, "replies": [], "commentid": "gtdnpnj"}, {"body": "**The Scorpio Races** by Maggie Stiefvater. Not only is it freaking amazing, it also does count for hard mode. One of the few YA novels where the genre is not to its detriment.", "created": 1617298358.0, "author": "Vaeh", "score": 5, "replies": [{"body": "Scorpio Races is hard mode? Woah. . . I've had it on my TBR for a few months and didn't think there was any way to fit it onto a hard mode card. Thanks!", "created": 1617305184.0, "author": "tarvolon", "score": 1, "replies": [], "commentid": "gt2c1ib"}], "commentid": "gt1x59u"}, {"body": "* [**The Stars Are Legion**](https://www.goodreads.com/book/show/29090844) by Kameron Hurley (HM)", "created": 1617485442.0, "author": "Amarthien", "score": 1, "replies": [{"body": "Would this work for hard mode??", "created": 1617672313.0, "author": "akayu", "score": 1, "replies": [{"body": "Yes, two POVs in first person.", "created": 1617693100.0, "author": "Amarthien", "score": 1, "replies": [], "commentid": "gtjn0du"}], "commentid": "gtirkzs"}], "commentid": "gtaa99i"}, {"body": "All of Wildbow's works are written in first person, but the other perspectives tend to be third person. Worm, Twig, Ward, Pact, Pale. Also most of those are very long, but worth reading!", "created": 1617301478.0, "author": "xenizondich23", "score": 2, "replies": [{"body": "Pale isn't 1st person (but everyone should read it anyways)! It fits sooo many other squares.", "created": 1617402827.0, "author": "DamnitRuby", "score": 3, "replies": [], "commentid": "gt6s43x"}], "commentid": "gt244ja"}, {"body": "**Piranesi** by Susanna Clarke\n\n**We Ride the Storm** by Devin Madson (whole series, HM)", "created": 1617316243.0, "author": "eightslicesofpie", "score": 6, "replies": [], "commentid": "gt2z82f"}, {"body": "The Rampart Trilogy by Mike Carey. **The Book of Koli** is single perspective and **The Trials of Koli** is two perspectives.", "created": 1617348504.0, "author": "GSV_Zero_Gravitas", "score": 1, "replies": [], "commentid": "gt4cbqn"}, {"body": "[removed]", "created": 1618077590.0, "author": "[deleted]", "score": 1, "replies": [{"body": "[removed]", "created": 1619178077.0, "author": "[deleted]", "score": 1, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Sofia Samatar**](https://www.reddit.com/r/Fantasy/comments/6fx308/author_appreciation_sofia_samatar/?st=j3npk9z8&amp;sh=704d1089) from user u/thequeensownfool_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1619178185.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gvk0l13"}], "commentid": "gvk0fjx"}], "commentid": "gu2cxtq"}, {"body": "Tales of the Otori trilogy (starting with Across the Nightingale Floor) works for hard mode alternating between two first persons. Also works for Asia and Revenge squares", "created": 1617324229.0, "author": "hanhub", "score": 2, "replies": [{"body": "I loved this series", "created": 1617348358.0, "author": "Ahuri3", "score": 1, "replies": [], "commentid": "gt4c6l4"}], "commentid": "gt3duda"}, {"body": "**Annihilation** by Jeff Vandermeer (HM), two first person perspectives.", "created": 1619990814.0, "author": "KaPoTun", "score": 1, "replies": [], "commentid": "gwpn2lh"}], "commentid": "gt1p0zl"}, {"body": "**Set in Asia** \\- Any book set in Asia or an analogous fantasy setting that is based on a real-world Asian setting. **HARD MODE:** Written by an Asian author", "created": 1617294706.0, "author": "kjmichaels", "score": 8, "replies": [{"body": "- [Heaven Official's Blessing by MXTX](https://tgcfmxtx.carrd.co/) (Hard Mode, fan translations free online) \n- The Poppy War by R. F. Kuang (HM)\n- She Who Became the Sun by Shelley Parker-Chan (HM)\n- The Stone in the Skull by Elizabeth Bear\n- Phoenix Extravagant by Yoon Ha Lee (HM)", "created": 1617296014.0, "author": "eriophora", "score": 26, "replies": [{"body": "Heaven Official's Blessing is my FAVORITE (would definitely qualify as a lion squasher too, that dude is a monster)", "created": 1617298516.0, "author": "Dragon_Lady7", "score": 4, "replies": [{"body": "I'm using MZDS for my lion squasher square! I'm super excited to read it since I LOVED Heaven Official's Blessing.", "created": 1617298675.0, "author": "eriophora", "score": 3, "replies": [{"body": "MDZS was the first one I read, and the story is *really* good. I think I cried three different times while reading it.", "created": 1617298798.0, "author": "Dragon_Lady7", "score": 1, "replies": [], "commentid": "gt1y70t"}], "commentid": "gt1xw0e"}], "commentid": "gt1xild"}, {"body": "Some of these authors are Asian-American, do they still count for Hard Mode?", "created": 1617297488.0, "author": "RevolutionaryCommand", "score": 7, "replies": [{"body": "Any author who self-identifies as Asian counts.", "created": 1617298456.0, "author": "eriophora", "score": 10, "replies": [{"body": "This (mostly) makes sense.", "created": 1617299302.0, "author": "RevolutionaryCommand", "score": 8, "replies": [], "commentid": "gt1zdx9"}], "commentid": "gt1xdit"}], "commentid": "gt1v55v"}, {"body": "I just finished Poppy War! I guess the sequels probably count, so now I have a better excuse to get them right away.", "created": 1617369562.0, "author": "ptrst", "score": 1, "replies": [{"body": "They would count, yes! :)", "created": 1617376383.0, "author": "eriophora", "score": 2, "replies": [], "commentid": "gt5btc8"}], "commentid": "gt4zdet"}], "commentid": "gt1rwd5"}, {"body": "*The Empress of Salt and Fortune* by Nghi Vo (HM)\n\n*The Bone Witch* by Rin Chupeco (HM)\n\n*Battle Magic* by Tamora Pierce (China/Tibet-inspired setting - it's a later book in the *Circle of Magic* universe and works better if you read the previous ones, though)\n\n*Range of Ghosts* by Elizabeth Bear (silk road inspired setting)\n\nETA: *The Star-Touched Queen* by Roshani Chokshi (HM)\n\n*Flame in the Mist* by Renee Adieh (HM)", "created": 1617296610.0, "author": "sophia_s", "score": 17, "replies": [], "commentid": "gt1t80l"}, {"body": "**The Bone Witch (H)** by Rin Chupeco \n\n**The Empress of Salt and Fortune (H)** and **When the Tiger Came Down the Mountain (H)** by Vghi Vo (both novellas and both excellent) \n\n**Jade City (H)** Fonda lee (first book in a trilogy and one of the best books I read last year)\n\n**Phoenix Extravagant (H)** by Yoon Ha Lee\n\n**The Three-Body Problem (H)** by Cixin Liu (you need to really like hard sci-fi for this, it's not character driven at all)", "created": 1617296718.0, "author": "fuckit_sowhat", "score": 15, "replies": [{"body": "Do you (or anyone else) know if Supernova Era (also Cixin Liu) would work for this category?", "created": 1617304354.0, "author": "TheDismalBlob", "score": 1, "replies": [], "commentid": "gt2a99q"}], "commentid": "gt1tgg1"}, {"body": "Do the Green Bone books work for this?", "created": 1617295998.0, "author": "dacottam", "score": 13, "replies": [{"body": "I would also say they fit.", "created": 1617297015.0, "author": "ullsi", "score": 7, "replies": [], "commentid": "gt1u3pw"}, {"body": "I would say so, at least Jade City.  I am waiting to read Jade Wars and may use this as mine.", "created": 1617296303.0, "author": "Gillbergs_Powerhour", "score": 5, "replies": [], "commentid": "gt1sjt5"}], "commentid": "gt1rv36"}, {"body": "Sword of Kaigen by M.L. Wang qualifies for hard mode.", "created": 1617296222.0, "author": "DaphneFallz", "score": 12, "replies": [], "commentid": "gt1sd74"}, {"body": "**The Wolf Of Oren-Yaro** by K.S Villoso (hard mode)\n\n**Fireheart Tiger** by Aliette de Bodard (hard mode)\n\n**She Who Became the Sun** by Shelley Parker-Chan (hard mode)\n\n**The Jasmine Throne** by Tasha Suri (hard mode)", "created": 1617297072.0, "author": "maybe_from_jupiter", "score": 11, "replies": [{"body": "Curious if Ikessar Falcon by KS Villoso counts?", "created": 1617426944.0, "author": "PepperoniFire", "score": 1, "replies": [{"body": "I'd say it would, I'm hoping the third will fit too since I'm already planning to read it when it comes out!", "created": 1617469157.0, "author": "justsharkie", "score": 2, "replies": [], "commentid": "gt9ejg5"}], "commentid": "gt7vgqw"}], "commentid": "gt1u881"}, {"body": "The Ghost Bride by Yangsze Choo would be a great fit for this square and counts for hard mode. I read it last year for Bingo and recommend it!", "created": 1617296765.0, "author": "rugglesbee", "score": 10, "replies": [{"body": "The Night Tiger by Choo would also work and is great.", "created": 1617305733.0, "author": "AccipiterF1", "score": 3, "replies": [], "commentid": "gt2d7qd"}], "commentid": "gt1tk0p"}, {"body": "* **The Night Tiger** by Yangsze Choo (Malaysia)\n\n* **Spirits Abroad** by Zen Cho (Malaysia)\n\n* **The Order of the Pure Moon Reflected in the Water** by Zen Cho (Malaysia)\n\n* **The Devourers** by Indra Das (India)\n\n* **In the Vanishers' Palace** by Aliette de Bodard (Vietnam)\n\n* **Phoenix Extravagant** by Yoon Ha Lee (South Korea)\n\n* **Never Have I Ever** by Isabel Yap (Philippines)\n\n(all hard mode)", "created": 1617300866.0, "author": "perditorian", "score": 10, "replies": [], "commentid": "gt22txh"}, {"body": "Does the Daevabad Trilogy by SA Chakraborty count?", "created": 1617296616.0, "author": "mgrier123", "score": 8, "replies": [{"body": "Yes, but not for hard mode.", "created": 1617297225.0, "author": "Fryktelig_variant", "score": 5, "replies": [{"body": "I'm confused, why wouldn't it could for hard mode? India is part of Asia and there's nothing in the square description to imply Asia = East Asia in this case.", "created": 1617299512.0, "author": "bubblegumgills", "score": 2, "replies": [{"body": "The author is a white American, so it doesn\u2019t count as hard mode.", "created": 1617299775.0, "author": "Fryktelig_variant", "score": 15, "replies": [{"body": "Oh crap I didn't even realise! *facepalm* Going by her name, I seriously thought Asian-American so absolutely my bad here", "created": 1617299843.0, "author": "bubblegumgills", "score": 7, "replies": [{"body": "I think it\u2019s her husband\u2019s name", "created": 1617303075.0, "author": "g_ann", "score": 10, "replies": [], "commentid": "gt27hxe"}], "commentid": "gt20mgt"}], "commentid": "gt20h1v"}], "commentid": "gt1zvsf"}, {"body": "Right, I just wasn't sure exactly what was meant by \"Asia\"", "created": 1617297280.0, "author": "mgrier123", "score": 0, "replies": [{"body": "Anything set on/inspired by the entire continent - so South Asia and the Middle East both count.", "created": 1617299089.0, "author": "cubansombrero", "score": 8, "replies": [], "commentid": "gt1yvdh"}], "commentid": "gt1uov9"}], "commentid": "gt1uki0"}, {"body": "This is a good question, the first book is on my TBR list.", "created": 1617297603.0, "author": "DemiLisk", "score": 1, "replies": [], "commentid": "gt1ve47"}], "commentid": "gt1t8gz"}, {"body": "The Dandelion Dynasty books by Ken Liu\n\nThe Chronicles of Master Li and Number Tex Ox by Barry Hughart\n\nPhonenix Extravagant by Yoon Ha Lee", "created": 1617296148.0, "author": "JiveMurloc", "score": 7, "replies": [], "commentid": "gt1s77z"}, {"body": "**The Gurkha and the Lord of Tuesday** by  Saad Hossain (HM)\n\n**Djinn City** by Saad Hossain (HM)\n\n**Reborn Empire** by Devin Madson\n\n**The Fire Eye Refugee** by Samuel Gately", "created": 1617297401.0, "author": "Dianthaa", "score": 6, "replies": [], "commentid": "gt1uyel"}, {"body": "The Poppy War by R.F. Kuang (hard mode) - what I'm planning to read\n\nThe Bone Shard Daughter by Andrea Stewart (hard mode) - I recently read this debut and really loved it\n\nThe Emperor's Soul by Brandon Sanderson", "created": 1617296516.0, "author": "Asheweaver", "score": 5, "replies": [{"body": "I never would have known Andrea Stewart was Chinese American so thanks for the tip. I just borrowed this book from the library earlier this week!", "created": 1617323368.0, "author": "JiveMurloc", "score": 3, "replies": [], "commentid": "gt3cbyj"}], "commentid": "gt1t0n9"}, {"body": "[removed]", "created": 1619646094.0, "author": "[deleted]", "score": 1, "replies": [{"body": "Hi, it looks like you're trying to summon u/goodreads-bot. Unfortunately, they don't play nicely with me or the r/Fantasy Golem family, so they're not welcome here. Please resubmit your comment.\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Fantasy) if you have any questions or concerns.*", "created": 1619646114.0, "author": "AutoModerator", "score": 1, "replies": [], "commentid": "gw81n6y"}], "commentid": "gw81ll2"}, {"body": "Would Haruki Murakami's books count as fantasy?", "created": 1617302305.0, "author": "trilbynorton", "score": 3, "replies": [{"body": "Absolutely! Anything under the 'magical realism' umbrella counts, in my mind.", "created": 1617305740.0, "author": "Pseutri", "score": 2, "replies": [{"body": "Thanks! I think I'll go with Kafka on the Shore for hard mode.", "created": 1617359583.0, "author": "trilbynorton", "score": 1, "replies": [], "commentid": "gt4mnz6"}], "commentid": "gt2d89w"}], "commentid": "gt25ury"}, {"body": "* Sword of Kaigen, by ML Wang (HARD)\n* Descendant of the Crane, by Joan He (HARD)\n* Jade City, by Fonda Lee (HARD)\n* Never Die, by Rob Hayes\n* Nightblade, by Ryan Kirk\n* Bone Shard Daughter, by Andrea Stewart (HARD)\n* Peasprout Chen, by Henry Lien (HARD)\n* Tales of the Otori, by Lian Hearn\n* Cradle, by Will Wight\n* Empress of Salt and Fortune, by Nghi Vo (HARD, Novella)\n* Testament of Steel, by Davis Ashura (HARD)\n* Hundredth Queen, by Emily R. King", "created": 1617590589.0, "author": "JCKang", "score": 1, "replies": [], "commentid": "gtevspc"}, {"body": "Ken Liu's translated Chinese short stories anthologies would both fit here. Broken Stars and Invisible Planets. I personally preferred Invisible Planets but Broken Stars is great too and has more of a varied selection. These are worth reading for the Xia Jia stories alone. Counts for hard mode - all translated by Ken Liu, but written by an assortment of Chinese authors.", "created": 1617305684.0, "author": "Pseutri", "score": 2, "replies": [], "commentid": "gt2d3wx"}, {"body": "I have had The Sword of Kaigen by M. L. Wang on my to read list for a few months now, does it count towards this square and would it be right for the hard mode too? Seems a good excuse to finally read it if so!", "created": 1617442360.0, "author": "luna-loo1284", "score": 1, "replies": [], "commentid": "gt8bay2"}, {"body": "Two anthologies that feature a lot of scifi based in asia or asia-like setting are:\n\nInvisible Planets: Contemporary Chinese Science Fiction in Translation (edited by Ken Liu)\n\nBroken Stars: Contemporary Chinese Science Fiction in Translation (edited by Ken Liu)\n\nThese also worked for hard mode as the translated authors are Chinese", "created": 1617298677.0, "author": "DemiLisk", "score": 2, "replies": [], "commentid": "gt1xw6n"}, {"body": "Would The Mistress of the Empire series be considered set in a (broadly) analogous world? It's a great read.", "created": 1617301414.0, "author": "Th3n1ght1sd5rk", "score": 1, "replies": [{"body": "I\u2019d definitely say the Empire series qualifies for normal mode.", "created": 1617354244.0, "author": "Tigrari", "score": 1, "replies": [], "commentid": "gt4ho9y"}], "commentid": "gt23zqx"}, {"body": "Under Heaven and River of Stars by Guy Gavriel Kay\n\nLong Price Quartet by Daniel Abraham is Asia-inspired, right?", "created": 1617298779.0, "author": "RubiscoTheGeek", "score": 2, "replies": [{"body": "I was thinking the Long Price Quartet would work. Great series.", "created": 1617302731.0, "author": "youki_hi", "score": 1, "replies": [], "commentid": "gt26rcc"}, {"body": "Long Price definitely works for easy mode.", "created": 1617305116.0, "author": "tarvolon", "score": 1, "replies": [], "commentid": "gt2bw8z"}], "commentid": "gt1y5a4"}, {"body": "would a few murakami books count for this? Pretty sure they're all set in Japan and quite a few have speculative stuff going on", "created": 1617299658.0, "author": "soullesssunrise", "score": 4, "replies": [], "commentid": "gt207ni"}, {"body": "Some translated books:\n\n**Where the Wild Ladies Are** by Matsuda Aoko - Very sweet modern retelling of traditional Japanese horror stories\n\n**Strange Beasts of China** by Yan Ge - A dreamy bestiary-ish book about a zoologist turned author\n\n**Frankenstein in Baghdad** by Ahmed Saadawi - Set after the Iraq War, a monster seeking revenge haunts the streets of Baghdad (also counts for Revenge square I guess!)", "created": 1617301617.0, "author": "sailorfish27", "score": 3, "replies": [], "commentid": "gt24f5s"}, {"body": "Under Heaven and River of Stars both by Guy Kay", "created": 1617352429.0, "author": "apcymru", "score": 2, "replies": [], "commentid": "gt4g18l"}, {"body": "*Rupert Wong, Cannibal Chef* by Cassandra Khaw (HM)", "created": 1617472298.0, "author": "justlike_myopinion", "score": 1, "replies": [], "commentid": "gt9kmyu"}, {"body": "A lot of good suggestions here. I'll just add [The Enlightenment of the Greengage Tree](https://www.goodreads.com/book/show/50368046-the-enlightenment-of-the-greengage-tree) by Shokoofeh Azar, which is a magical realism story translated from Persian and takes place in Iran. Hard Mode.", "created": 1617584037.0, "author": "cranial13", "score": 1, "replies": [], "commentid": "gtekf63"}, {"body": "Before the Coffee Gets Cold by Toshikazu Kawaguchi would be good - set in Tokyo, is about time travel and has elements of magical realism", "created": 1617306008.0, "author": "soullesssunrise", "score": 5, "replies": [], "commentid": "gt2dtcg"}, {"body": "&gt;The Empress of Salt and Fortune\n\nThe Beast Player by Nahoko Uehashi should count for HM\n\n[https://www.goodreads.com/book/show/41591634-the-beast-player](https://www.goodreads.com/book/show/41591634-the-beast-player)", "created": 1617748463.0, "author": "devilsangel360live", "score": 1, "replies": [], "commentid": "gtmgic4"}, {"body": "**Hard Mode Books:**\n\n* **Tokyo Ueno Station** by Yu Miri\n* **The Memory Police** by Yoko Ogawa (also a previous BotM)\n* **Wicked Fox** by Kat Cho (first person POV)\n* **My Beijing: Four Stories of Everyday Wonder** by Nie Jun (magical realism graphic novel)\n* **Sita's Ramayana** by Samhita Arni (graphic novel)\n* **A Crown of Wishes** by Roshani Chokshi (also fits ___ of ___ format. It's technically #2 in a shared universe, but it follows different characters)\n* **Prophecy** by Ellen Oh\n\n**Regular Mode:**\n\n* **Clever-Lazy** by Joan Bodger\n* **The Firework-Maker's Daughter** by Philip Pullman\n* **The Undertaking of Lily Chen** by Danica Novgorodoff (graphic novel)\n* **Throne of Jade** by Naomi Novik (#2 in a series, also a genre mashup of Napoleonic Wars + dragons)\n* **The Divine** by Asuf &amp; Tomer Hanuka and Boaz Lavie (graphic novel)\n* **Eon: The Dragoneye Reborn** by Alison Goodman\n* **Trickster's Choice** and **Trickster's Queen** by Tamora Pierce\n\nAlso, plenty of manga and manhwa series if you want a different format!", "created": 1617466728.0, "author": "SmallFruitbat", "score": 1, "replies": [], "commentid": "gt99wly"}, {"body": "[Empire of Sand](https://www.goodreads.com/book/show/39714124-empire-of-sand?ac=1&amp;from_search=true&amp;qid=vc1Ue4nVH9&amp;rank=1) or the sequel [Realm of Ash](https://www.goodreads.com/book/show/43192642-realm-of-ash) by Tasha Suri\n\n[The Empress of Salt and Fortune](https://www.goodreads.com/book/show/51190882-the-empress-of-salt-and-fortune?ac=1&amp;from_search=true&amp;qid=FausT5FJX5&amp;rank=1) or the sequel [When the Tiger Came Down the Mountain](https://www.goodreads.com/book/show/53265678-when-the-tiger-came-down-the-mountain) by Nghi Vo", "created": 1617297108.0, "author": "Krilllian", "score": 5, "replies": [], "commentid": "gt1ub7d"}, {"body": "Wasn't there some list of Asian fantasy? I am pretty sure I've seen it, but cannot find it for the life of me.\n\nEdit: found it, I feel blind now [https://www.reddit.com/r/Fantasy/comments/cm9yfs/rfantasy\\_big\\_list\\_of\\_asian\\_inspired\\_novels/](https://www.reddit.com/r/Fantasy/comments/cm9yfs/rfantasy_big_list_of_asian_inspired_novels/)", "created": 1617436252.0, "author": "Aiyume7", "score": 2, "replies": [], "commentid": "gt85ly3"}, {"body": "The Eternal Sky series by Elizabeth Bear", "created": 1617302438.0, "author": "lurkmode_off", "score": 1, "replies": [], "commentid": "gt264wu"}, {"body": "Novels:   \n  \n* **Bridge of Birds** by Barry Hughart  \n* anything by K.S. Villoso (hard mode)   \n  \nNovellas:  \n \n* **The Empress of Salt and Fortune** by Nghi Vo (hard mode)  \n* **The Order of the Pure Moon Reflected in Water** by Zen Cho (hard mode)\n* **The Gurkha and the Lord of Tuesday** by Saad Z. Hossain (hard mode)   \n* **Burning Roses** by S.L. Huang (hard mode)", "created": 1617317596.0, "author": "improperly_paranoid", "score": 2, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation Thread: **Barry Hughart**](https://www.reddit.com/r/Fantasy/comments/6eg4wg/author_appreciation_thread_barry_hughart/?st=j3dp2nsh&amp;sh=8da3335e) from user u/Esmerelda-Weatherwax \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617317625.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt31vav"}], "commentid": "gt31tcg"}, {"body": "The Simoquin Prophecies by Samit Basu", "created": 1617302229.0, "author": "RuinEleint", "score": 1, "replies": [], "commentid": "gt25owy"}, {"body": "Dragon Sword and Wind Child series by Noriko Ogiwara - Japan\n\nAcross the Nightingale Floor by Lian Hearn - Japan\n\nIn the Vanishers\u2019 Palace by Aliette du Bodard - Vietnam", "created": 1617301072.0, "author": "xenizondich23", "score": 2, "replies": [], "commentid": "gt239jl"}, {"body": "Would the Long Price Quartet by Daniel Abraham count?", "created": 1617332208.0, "author": "asph0d3l", "score": 1, "replies": [], "commentid": "gt3rg18"}, {"body": "**Wicked Fox** and **Vicious Spirits** by Kat Cho are great urban fantasy HM options!", "created": 1617493132.0, "author": "quigukipromqueen", "score": 1, "replies": [], "commentid": "gtanomm"}, {"body": "I'm going to pick up Black Water Sister by Zen Cho. Coming out in June, set in Malaysia.", "created": 1617302962.0, "author": "Endalia", "score": 4, "replies": [], "commentid": "gt2794n"}, {"body": "Tensorate series by Neon Yang\n\nVagabonds by Hao Jingfang\n\nWaste Tide by Chen Qiufan", "created": 1617297864.0, "author": "Phanton97", "score": 3, "replies": [], "commentid": "gt1vym1"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares [here](https://www.reddit.com/r/Fantasy/comments/npvcfe/spfbo_7_is_now_live_megathread/h0kt8cd?utm_source=share&amp;utm_medium=web2x&amp;context=3).\n\nFor this square, they are:   \n\n\nQuantum Cultivation by Jace Kang\n\nSair\u014d's Claw by Virginia McClain", "created": 1622823313.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0kz7cv"}], "commentid": "gt1ozca"}, {"body": "**Book Club OR Readalong Book** \\- Any past or still active r/Fantasy book clubs count, as well as past or current r/Fantasy readalongs. NOTE: All of the current book club info can also be found on [our Goodreads page.](https://www.goodreads.com/group/show/107259-r-fantasy-discussion-group) Every book added to our [Goodreads shelf](https://www.goodreads.com/group/bookshelf/107259-r-fantasy-discussion-group) counts. **HARD MODE:**  Must read a current selection of either a book club or readalong and participate in the discussion.", "created": 1617294736.0, "author": "kjmichaels", "score": 8, "replies": [{"body": "There is also this [list of all bookclub books](https://docs.google.com/spreadsheets/d/1hx_GANDZB4SFVRFkwuCR0PAMSSADIjpG-0kf5_UEKsU/edit?usp=sharing) that I now maintain. I post it in each GR nominations thread through the year, but maybe a searchable way will be helpful for some of you.", "created": 1617326191.0, "author": "fanny_bertram", "score": 15, "replies": [], "commentid": "gt3h7to"}, {"body": "[From Legend](https://www.amazon.com/dp/B07PGSDVC9) by Ian Lewis (September 2019 Book Club of the month)", "created": 1617393819.0, "author": "IanLewisFiction", "score": 1, "replies": [], "commentid": "gt6aur4"}, {"body": "My novel ***Construct*** was the June 2019 selection for the Resident Authors Bookclub (RAB).\n\nWhen I have some more time to compile some, I'll expand this comment with recs for other authors' books.", "created": 1617309146.0, "author": "Luke_Matthews", "score": 2, "replies": [], "commentid": "gt2km61"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\nFor this square, they are: \n\nThe Demons We See by Krista D Ball\n\nKept from Cages by Phil Williams\n\nAlong the Razor's Edge by Rob J Hayes", "created": 1622824827.0, "author": "s_kaeth", "score": 2, "replies": [], "commentid": "h0l2q2c"}, {"body": "Demon Haunted by me", "created": 1617304696.0, "author": "ashearmstrong", "score": 3, "replies": [], "commentid": "gt2azt2"}], "commentid": "gt1p1pv"}, {"body": "**New to You Author** \\- This would be an author whose work you've yet to read, meaning no novel, no novella, no short fiction, etc. **HARD MODE:** Not only have you never read their work before but you've not heard much about this author or their work before deciding to try a book by them.", "created": 1617294741.0, "author": "kjmichaels", "score": 8, "replies": [{"body": "\\*crack knuckles\\* I was made for this square\n\n**Jane Glatt** \\- Canadian fantasy author. Some books include Bookbinder's Daughter (I mean, the title explains the book), Pirates and Privateers (again, self-explanatory), Unguilded (a comforting read about a main character who is genuinely a good person), and The Wrong Path (urban fantasy in Toronto, angels vs demons, shit goes down in the undeground pedestrian pathways).\n\n**EC Bell** \\- Canadian fantasy and SF author. Has a long-running paranormal mystery series, Marie Jenner, set in Alberta, Canada. Not quite cozy, but close enough for those needing mystery and adventure without the endless gore.\n\n**P. N. Elrod** \\- Not a Canadian, but try not to hold it against her. Many urban fantasy readers have probably picked up at least one of her edited anthologies (esp Jim Butcher fans), but she also writes! For someone wanting an oddball, off-the-wall standalone, Myhr is a hilarious science fantasy.\n\n**Skyla Dawn Cameron** \\- Canadian urban fantasy author. Her Livi Talbot series is a paranormal Lara Croft/Indiana Jones mash up. Loads of female friendships, mythical monsters, and shit to steal.\n\n**Patrick Weekes** \\- Canadian fantasy author of Bioware fame. Also, of their own fame. Their Rogues of the Republic series is a fabulous trilogy of adventure, dubious reputations, and the theft of elven porn for the greater good. Trust me: they're experts. \n\n**Jaime Lee Moyer** \\- Not Canadian. Don't hold that against her. A perfect place for more literary, careful prose. Closer to the historical horror side is Heretic, a Joan of Arc story.\n\nLet me know if you need more obscure Canadians ;)", "created": 1617313221.0, "author": "KristaDBall", "score": 13, "replies": [{"body": "I love Patrick Weekes SO much. I might do a reread of RotR for the comfort square.", "created": 1617336112.0, "author": "theonlyAdelas", "score": 2, "replies": [], "commentid": "gt3xg5d"}], "commentid": "gt2t82y"}, {"body": "You guys, this is where y'all can discover Julie Czerneda. Her older series covers are very cheesy. Do not let this put you off. She is a former biologist, and her alien species are not all humanoid, and they see/use the world differently than humanoids would. She is a master of making connections between her characters. \n\nI didn't really like her species imperative series, but the Web Shifter series (Eye of the Beholder) [consists of a trilogy, novella, trilogy] and the Trade Pact trilogy (A Thousand Words for Stranger) are fun. \n\nThe latter is a romance sci fantasy, and counts for backlist, found family, first person (not hard mode).\n\n The former is scifi, and does not have any romance, not even any teasing \"will they wont they\" and is clean enough that I read the novella, **The Only Thing to Fear**, to my tween kids. It is, in fact, a good place to start and see if you like her style and characters. It is a comfort read for me. \n\nAlso all the books in the series count for found family, and first person (hard mode).", "created": 1617306678.0, "author": "tigrrbaby", "score": 12, "replies": [{"body": "Sold!", "created": 1617334521.0, "author": "P0PSTART", "score": 2, "replies": [], "commentid": "gt3v3cj"}], "commentid": "gt2fb1t"}, {"body": "Some recent underrated or forthcoming/debut authors who I've enjoyed and may fit this square for you!\n\n- Composite Creatures by Caroline Hardaker\n- On Fragile Waves by E Lily Yu\n- Dragon Tamer by Ophelia Silk\n- A Memory Called Empire by Arkady Martine\n- Race the Sands by Sarah Beth Durst\n- The Four Profound Weaves by RB Lemberg", "created": 1617296267.0, "author": "eriophora", "score": 9, "replies": [], "commentid": "gt1sgxy"}, {"body": "Hello! I'm D.H. Willison, and am probably a new to you author. I've written:\n\n[Harpyness is Only Skin Deep](https://www.goodreads.com/book/show/53332248-harpyness-is-only-skin-deep)\n\n[Finding Your Harpy Place](https://www.goodreads.com/book/show/55681173-finding-your-harpy-place)", "created": 1617565857.0, "author": "Kululu17", "score": 2, "replies": [], "commentid": "gtdmybl"}, {"body": "Very likely anything by me, but for starters, one could check out either [From Legend](https://www.amazon.com/dp/B07PGSDVC9) or [The Camaro Murders](https://www.amazon.com/dp/B077W12M7R).", "created": 1617393979.0, "author": "IanLewisFiction", "score": 2, "replies": [], "commentid": "gt6b66b"}, {"body": "Robocopter Ski Patrol, Untitled Spy Story, and Ruben's Cube Alaska by Aaron C. Cross \n\nRC: A mercenary group gets back together to try to stop a dictator from taking over a huge supply of yellow cake uranium. Hijinks and reality messes ensue. There's also a robotic helicopter.\n\nUSS: Four government agents get burned and have to find a way to clear their names while exploring the world and getting to the bottom of a sinister cabal's plan. Lou Bega makes an appearance and hasn't sued me yet, which is nice of him.\n\nRCA: A man up in Alaska both is and isn't himself and has to figure it out. There's also a cube that can change time and reality. Also, there's a semi-immortal Russian with a direwolf. He's pretty fun.\n\nThese books are also eligible for Hard Mode since very few know who I am!", "created": 1617391886.0, "author": "aaronccross", "score": 1, "replies": [], "commentid": "gt67070"}, {"body": "Maybe some things people haven't read or heard of:  \n\n\n**Semiosis** by Sue Burke (first contact sci-fi with a very unique alien perspective)\n\n**The City of Woven Streets** by Emmi Itaranta (dreaming is a illegal, the MC has nightmares that she must hide from everyone)\n\n**The Seven Deaths of Evelyn Hardcastle** by Stuart Turton (it's hard to describe, but the pay off is well worth the initial confusion)\n\n**Pure** by Julianna Baggott (post-apocalyptic, YA. A nuclear explosion causes people to fuse to whatever they were holding/touching at the time of the explosion. The MC has a doll for a hand). \n\n**The Library at Mount Char** by Scott Hawkins (librarians are gods and they're all really fucked up people. Lots of content warnings, but really good. \n\n**A Canticle for Leibowitz** by Walter M. Miller Jr (A group of monks do science stuff to advance the world after a near total collapse of the world)", "created": 1617299039.0, "author": "fuckit_sowhat", "score": 5, "replies": [{"body": "I loved the city of woven streets when i read it for two years ago bingo, but it's so hard to fit into recommendations - it's such a weirdly specific feeling book that it never fits\n\nSo here, where it likely will fit for most people, i heartily second it", "created": 1617320743.0, "author": "Boris_Ignatievich", "score": 3, "replies": [], "commentid": "gt37mum"}, {"body": "Oooh good rec for Semiosis!", "created": 1617305307.0, "author": "Maudeitup", "score": 2, "replies": [], "commentid": "gt2cb0v"}, {"body": "isn't a canticle for leibowitz required reading in some english lit classes? i would think a lot of readers would have heard of that book? I could be wrong.", "created": 1617311028.0, "author": "entwined_Rhino", "score": 2, "replies": [{"body": "I couldn't say. I was homeschooled so I didn't get the typical English lit experience and I didn't read it in college.", "created": 1617326249.0, "author": "fuckit_sowhat", "score": 1, "replies": [], "commentid": "gt3hbeo"}, {"body": "I've definitely never heard of it... my classes in school made us read Shakespeare and Hemmingway.", "created": 1617335566.0, "author": "DoesTheOctopusCare", "score": 1, "replies": [{"body": "we didn't do it in class either but we were definitely aware of it. Maybe it's an age thing. It's an old book and I'm old too lol", "created": 1617337547.0, "author": "entwined_Rhino", "score": 1, "replies": [], "commentid": "gt3zhqx"}, {"body": "I've never heard that it was required reading, but it is very much a classic for the genre.", "created": 1617672217.0, "author": "beldaran1224", "score": 1, "replies": [], "commentid": "gtireav"}], "commentid": "gt3wn2a"}], "commentid": "gt2oo4e"}], "commentid": "gt1yr8n"}, {"body": "Pretty much no one has heard of me, so I'm pretty sure that I'd be a \"New to You\" author for most people.\n\nMy debut novel, [The Lantern-Lit City](https://www.goodreads.com/book/show/53209353-the-lantern-lit-city)*,* is an epic fantasy that follows multiple perspectives. A lot of readers have connected with the characters and worlds, so I hope you give it a shot.", "created": 1617300963.0, "author": "Vista_McDowall", "score": 8, "replies": [{"body": "I second The Lantern-Lit City. Definitely worth it!", "created": 1617306092.0, "author": "jsing14", "score": 3, "replies": [{"body": "Aw, thanks! I'm glad you enjoyed it!", "created": 1617306709.0, "author": "Vista_McDowall", "score": 2, "replies": [], "commentid": "gt2fdd9"}], "commentid": "gt2dzse"}], "commentid": "gt231bw"}, {"body": "Could be any of [my Grimluk, Demon Hunter books](https://www.ashearmstrong.com/works/fiction/grimluk/).", "created": 1617305375.0, "author": "ashearmstrong", "score": 1, "replies": [], "commentid": "gt2cg6o"}, {"body": "**A Tale of Stars and Shadow** by Lisa Cassidy. Medival setting, elite special forces soldier experiences trauma and becomes a bodyguard. Gets sent to a semi-allied nation (full of racist/classist winged people) to protect a playboy prince. Has to form a guard out of a bunch of rogues.\n\n**Ruby Red** by Kirsten Gier. 16 year old girl becomes the latest in a long line of time-travelers. Gets caught up in hijinx around the time-travel prophecy from the 1700s.\n\n**Magic for Liars** by Sarah Gailey. Normal person private detective investigates a death at the local magic academy.", "created": 1617302058.0, "author": "lightning_fire", "score": 2, "replies": [{"body": "If you haven't read any of Gailey's stuff, **Magic for Liars** is a good place to start.  It would also fit for debut novel (HM, pretty sure, I *know* they've done an AMA before), mystery plot, and genre mashup.  It *might* be first person POV, but I honestly can't remember at this point.", "created": 1617309755.0, "author": "Phyrkrakr", "score": 1, "replies": [], "commentid": "gt2lxq8"}], "commentid": "gt25c5t"}, {"body": "Hi, I'm a New To You Author - HARD MODE. My debut novel **Doomsayer Prince** is an epic fantasy. I hope you have a great 2021 Fantasy Bingo experience :-)\n\n[Buy Doomsayer Prince here](https://runesnielsen.com/availablefrom). It's only 99 cents while on sale during June and Juli.\n\n[Read some reviews here](https://runesnielsen.com/reviews-for-doomsayer-prince)", "created": 1622644424.0, "author": "Rune_S_Nielsen", "score": 2, "replies": [], "commentid": "h0bfxdc"}, {"body": "Hello, James G. Robertson here. I'm a pretty new author (though not too pretty). I have two works out that are both dark fantasy in nature, one with a sci-fi lean, the other with a horror.\n\nThe first one, Afterworld (Next Life, #1), has won a few small awards and is getting a second edition this summer along with an audiobook. \n\nThe second, The Ripper, I'm in the process of creating an ensemble cast audiobook (30+ voice actors) and adding a few minor revisions to the ebook before releasing the paperback. This book will be in its final form in all formats come sometime in May. \n\nThese books are in the same \"Next Life Universe\" and are connected, but you can read them in any order. If you have any questions, please feel free to message me!", "created": 1617330129.0, "author": "ThrowBackFF", "score": 3, "replies": [], "commentid": "gt3ny8q"}, {"body": "Some possibilities that I'd highly recommend:\n\n* Elliott Kay. Two series, one military SF and one urban fantasy/erotica.\n* Spider Robinson, most known for Callahan's Crosstime Saloon.\n* Sharon Green. One series that is apparently a Gor satire/parody/rebuttal, though I haven't read them yet, and one revolution-focused/romantic fantasy.\n* R.M. Meluch, especially Tour of the Merrimack, military SF.\n* John Brunner. Classic SF.\n* Traci L. Slatton, in particular *Immortal*, which is magical realism.\n* Emily Gee. Heroic fantasy.\n\nAnd some other selections that I would still recommend, but maybe not quite as highly:\n\n* Tony Ballantyne, SF.\n* Kay Kenyon, mostly SF.\n* Eric Nylund. *Mortal Coils* is urban fantasy, *Hero of Thera* is litRPG.\n* Glenda Larke. Watergivers is high fantasy.\n* Marjorie B. Kellogg, Dragon Quartet. Climate fiction that's a mix of SF (there are neural interfaces) and fantasy (there are dragons).\n* David Forbes, high fantasy (Osserian Saga).\n* Cat Adams, urban fantasy/paranormal romance.", "created": 1617380997.0, "author": "smartflutist661", "score": 1, "replies": [], "commentid": "gt5l37g"}], "commentid": "gt1p22x"}, {"body": "**Backlist Book** \\- For our purposes we're considering 'backlist' an author's older titles that are not their latest published book or part of a currently running series (no further sequels announced when you read it). The author must also be a currently publishing author. **HARD MODE:** Published before the year 2000.", "created": 1617294758.0, "author": "kjmichaels", "score": 9, "replies": [{"body": "Some **hard mode** options:\n\n[Heir to the Empire](https://www.goodreads.com/book/show/40604754-heir-to-the-empire) by Timothy Zahn, as well as many of his other books. This came to mind because I've been planning on rereading the original Thrawn trilogy soon. It's a great place to start with the Star Wars expanded universe (or \"Legends\" as they're calling it now).\n\n[The Memory Police](https://www.goodreads.com/book/show/37004370-the-memory-police) by Y\u014dko Ogawa, assuming we can count by the original publication date, not when it was translated. It's a slow-paced dystopia about disappearing memories, a bit disconcerting and very thought-provoking.\n\n[The Farseer Trilogy](https://www.goodreads.com/series/41452-the-farseer-trilogy) by Robin Hobb. Haven't read this myself yet but obviously have heard great things. (From what I can find, Hobb last published a book in 2017, but is working on new projects, so could probably be considered \"currently publishing.\")", "created": 1617301938.0, "author": "Nat-Rose", "score": 13, "replies": [], "commentid": "gt2538r"}, {"body": "Sorting by publication date and scrolling until I stop thinking \"dead... dead... dead...\":\n\n**Have hard mode choices**\n\nFirst published (on my list) in the 70s. Most of these have a lot of options for hard mode.\n\n* Stephen King\n* Anne Rice. Vampire Chronicles is ongoing (though I don't know if a sequel is currently announced), but plenty of other series.\n* C.J. Cherryh. New Alliance-Union novel in progress (so the rest depend on how you count \"sequels\"), but again, plenty of other options.\n* Terry Brooks. Shannara is officially concluded.\n* Stephen R. Donaldson.\n* Diane Duane.\n\nTo the 80s...\n\n* L.E. Modesitt, Jr. Recluce ongoing.\n* Haruki Murakami.\n* Steven Brust\u2014a couple of standalones that might work?\n* Tamora Pierce.\n* David Brin.\n* Janny Wurts.\n* Robin Hobb/Megan Lindholm.\n* Jeffrey A. Carver\n* Raymond E. Feist. Riftwar is complete.\n* Guy Gavriel Kay.\n* Margaret Weis.\n* William Gibson.\n* Orson Scott Card.\n* Tad Williams.\n* Katharine Kerr.\n* Lois McMaster Bujold.\n* Mercedes Lackey.\n* Elizabeth Moon.\n* Melanie Rawn.\n* Neal Stephenson.\n\nMoving into the 90s, where the backlists for hard mode may start to shrink somewhat.\n\n* C.S. Friedman\n* Garth Nix\n* Harry Turtledove\n* Tanya Huff\n* Kim Stanley Robinson\n* Robert J. Sawyer\n* Laurell K. Hamilton\n* Caroline Stevermer\n* Stephen Baxter\n* Peter F. Hamilton\n* R.A. Salvatore\n* Sharon Shinn\n* Julie E. Czerneda\n* Kate Elliott\n* Kay Kenyon\n* Anne Bishop (none of the backlist counts for hard mode)\n* China Mi\u00e9ville\n* Dan Brown\n* David Farland (backlist is non-hard)\n* Ian Douglas\n* James Clemens\n* Steven Erikson\n\nAnd finally a not-so-brief list of authors who my memory suggests have something that would count as a backlist and are still publishing, but who I don't think have anything pre-2000 (no guarantees offered or implied; feel free to ask for corrections):\n\n* Alastair Reynolds\n* Carol Berg\n* Jennifer Fallon\n* Jim Butcher\n* Jo Walton\n* Charlaine Harris\n* Eoin Colfer\n* Jacqueline Carey\n* Kelley Armstrong\n* Trudi Canavan\n* Christopher Paolini\n* Kevin J. Anderson\n* Ted Chiang\n* Traci L. Slatton\n* Barb Hendee\n* Elizabeth Kay\n* Jonathan Stroud\n* Kathryn Lasky\n* R. Scott Bakker\n* Charles Stross\n* Laura Anne Gilman\n* S.M. Stirling\n* Brandon Sanderson\n* John Scalzi\n* Michelle Sagara\n* R.M. Meluch\n* Daniel Abraham\n* Joe Abercrombie\n* Kylie Chan\n* Liu Cixin\n* Marie Brennan\n* Naomi Novik\n* Brent Weeks\n* Seanan McGuire\n* N.K. Jemisin\n* Elliott Kay\n* Erin Morgenstern\n* Madeline Miller\n* Mark  Lawrence\n* Michael J. Sullivan\n* Jim C. Hines\n* Krista D. Ball\n* Melissa F. Olson\n* Marko Kloos\n* Sarah J. Maas\n* Becky Chambers\n* Pierce Brown\n* Will Wight\n* Adrian Tchaikovsky\n* Blake Crouch\n* Mary Robinette Kowal\n* P. Dj\u00e8l\u00ed Clark\n* Silvia Moreno-Garcia\n* Sylvain Neuvel\n* Victor LaValle\n* Andrew Rowe\n* Fonda Lee\n* George Saunders\n* Katherine Arden\n* S.A. Chakraborty\n* R.F. Kuang\n* Rachel Hartman\n* Rebecca Roanhorse\n* Charlie N. Holmberg\n* Emily Tesh\n* Evan Winter\n* Leigh Bardugo\n* Tamsyn Muir", "created": 1617310595.0, "author": "smartflutist661", "score": 26, "replies": [{"body": "specifically for Guy Gavriel Kay books which qualify for hard mode include, the Fionavar Tapestry trilogy - The Summer Tree, The Wandering Fire, and The Darkest Road. As well as Tigana, A Song for Arbonne, Lions of Al Rassan and Sailing to Sarantium", "created": 1617367246.0, "author": "DJcheffy", "score": 2, "replies": [], "commentid": "gt4vtj4"}, {"body": "Rachel Caine unfortunately passed away last year", "created": 1617326030.0, "author": "leftoverbrine", "score": 4, "replies": [{"body": "Thanks, fixed.", "created": 1617328618.0, "author": "smartflutist661", "score": 3, "replies": [], "commentid": "gt3le3l"}], "commentid": "gt3gy01"}, {"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation Thread: **Melanie Rawn**, author of Dragon Prince Trilogy, Exiles, and others](https://www.reddit.com/r/Fantasy/comments/5apcr5/author_appreciation_thread_melanie_rawn_author_of/?st=iv1o6vrb&amp;sh=5d0521bd) from user u/lrich1024 \n* [**Katharine Kerr**: Author Appreciation Thread - Katherine Kerr (the Deverry series, and other ensorcellments)](https://www.reddit.com/r/Fantasy/comments/5egyck/author_appreciation_thread_katherine_kerr_the/?st=ivvmb9h2&amp;sh=6951d60d) from user u/Pardoz \n* [Author Appreciation: **Tanya Huff**, Pioneer of Urban Fantasy and Comedic Chameleon (Plus Free Book Giveaways!)](https://www.reddit.com/r/Fantasy/comments/5owaa8/author_appreciation_tanya_huff_pioneer_of_urban/?st=iy4cw3uz&amp;sh=b46a8303) from user u/lannadelarosa \n* [Author Appreciation thread: **Elizabeth Moon**, veteran author of Fantasy and Sci-Fi](https://www.reddit.com/r/Fantasy/comments/6x54cu/author_appreciation_thread_elizabeth_moon_veteran/?utm_content=comments&amp;utm_medium=hot&amp;utm_source=reddit&amp;utm_name=Fantasy) from user u/Tigrari \n* [Author Appreciation: **Michelle Sagara**](https://www.reddit.com/r/Fantasy/comments/8gm1em/author_appreciation_michelle_sagara/) from user u/thequeensownfool_ &amp; AmethystOrator \n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617311109.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt2ouib"}, {"body": "Does anyone know if Bujold\u2019s *Vorkosigan Saga* is considered complete? Did **Gentleman Jole &amp; the Red Queen** complete it? (What a great book! Highly recommend!)", "created": 1617343409.0, "author": "cheryllovestoread", "score": 3, "replies": [{"body": "&gt; [nothing is planned at this time](https://www.goodreads.com/author/16094.Lois_McMaster_Bujold/questions)\n\nA couple of questions down, from just a week or two ago. So it should fit the definition of complete for this square.", "created": 1617354720.0, "author": "smartflutist661", "score": 4, "replies": [{"body": "Thank you! Looks like a Miles story might be in my future \ud83d\ude0e", "created": 1617387110.0, "author": "cheryllovestoread", "score": 2, "replies": [{"body": "I\u2019ve been meaning to start it for many years now, so _Shards of Honor_ just might make it to my card this year.", "created": 1617388052.0, "author": "smartflutist661", "score": 1, "replies": [], "commentid": "gt5zcdt"}], "commentid": "gt5xhfp"}], "commentid": "gt4i3qm"}], "commentid": "gt46zej"}, {"body": "Thanks for the super comprehensive list!  \n  \nNow, scanning it, I was thinking to use my re-read for either The Rose of the Prophet trilogy or The Death Gate cycle (I read them as a teen, and in Spanish, let's see how they hold up in my head...), both coauthored by Margaret Weis and Tracy Hickman. Both authors seem active individually and as a writing team, so I presume this would count for Hard Mode. Oh yeah.", "created": 1618166395.0, "author": "sad_butterfly_tattoo", "score": 2, "replies": [], "commentid": "gu67493"}], "commentid": "gt2nqnc"}, {"body": "- The Blood of Whisperers by Devin Madson\n- Dragon Haven by Robin McKinley\n- Shades of Milk and Honey by Mary Robinette Kowal\n- The Element of Fire by Martha Wells\n- The Troupe by Robert Jackson Bennett", "created": 1617296593.0, "author": "eriophora", "score": 6, "replies": [{"body": "*City of Bones* is a standalone from Martha Well's back catalogue that's also worth a look.", "created": 1617296751.0, "author": "BitterSprings", "score": 12, "replies": [{"body": "Oooh and it came out in 1995 so it fits hard mode.", "created": 1617297668.0, "author": "GALACTIC-SAUSAGE", "score": 2, "replies": [], "commentid": "gt1vj72"}], "commentid": "gt1tizz"}, {"body": "Deerskin by Robin McKinley would also fit", "created": 1617297404.0, "author": "ullsi", "score": 3, "replies": [], "commentid": "gt1uym8"}, {"body": "&gt; The Troupe by Robert Jackson Bennett\n\nI've heard really good things about **American Elsewhere** as well.", "created": 1617298515.0, "author": "Vaeh", "score": 3, "replies": [], "commentid": "gt1xiiu"}, {"body": "Dragon Haven by Robin Hobb, no? Or did McKinley also have one by this title (in which case I need to go read it immediately!)", "created": 1617303663.0, "author": "dasatain", "score": 1, "replies": [{"body": "McKinley has one too! It's completely different from Hobb's haha.", "created": 1617303859.0, "author": "eriophora", "score": 3, "replies": [{"body": "Oh wow! Good to know! Going on my TBR!", "created": 1617308034.0, "author": "dasatain", "score": 1, "replies": [], "commentid": "gt2i791"}], "commentid": "gt296to"}], "commentid": "gt28rpz"}], "commentid": "gt1t6mw"}, {"body": "**The Long Price Quartet** by Daniel Abraham\n\n**The Lighthouse Duet** by Carol Berg\n\n**The Broken Earth Trilogy** by N.K. Jemisin\n\nAll fit, all are among my all-time favorites and I highly recommend them. None are hard mode though.", "created": 1617297051.0, "author": "tarvolon", "score": 8, "replies": [{"body": "I know nothing about the Lighthouse Duet or Carol Berg except that I've heard you recommend it a lot...\n\nAnd yes the other two recommendations are excellent.  \n\n\nEdit: I am apparently lost, and somehow glitched out and was thinking about the new to you square.", "created": 1617297595.0, "author": "daavor", "score": 2, "replies": [{"body": "The Lighthouse Duet is excellent. Carol Berg is wonderful. Now you have two data points. :D", "created": 1618419545.0, "author": "julieputty", "score": 2, "replies": [], "commentid": "gui9678"}], "commentid": "gt1vdi0"}], "commentid": "gt1u6h8"}, {"body": "I think Patricia Briggs' older books could work for this.\n\nThe first three books in her Sianim Series (Masques, Steal the Dragon, and When Demons Walk) were published before 2000, so they would work for hardmode. I don't think there are any sequels announced for any of the books outside of the Mercyverse.", "created": 1617328866.0, "author": "refreshinglypunk", "score": 2, "replies": [], "commentid": "gt3ltgh"}, {"body": "&gt; Published before the year 2000.\n\nSoldier in the Mist by Gene Wolfe", "created": 1617306441.0, "author": "JiveMurloc", "score": 2, "replies": [{"body": "Unfortunately, I don't think Wolfe counts as currently publishing.", "created": 1617311876.0, "author": "characterlimit", "score": 6, "replies": [{"body": "He did have a book published posthumously in the last year. I feel like that counts.", "created": 1617312276.0, "author": "JiveMurloc", "score": 1, "replies": [], "commentid": "gt2r9tu"}], "commentid": "gt2qfyn"}, {"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Gene Wolfe**](https://www.reddit.com/r/Fantasy/comments/6mudtg/author_appreciation_gene_wolfe/?utm_content=comments&amp;utm_medium=hot&amp;utm_source=reddit&amp;utm_name=Fantasy) from user u/JayRedEye_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617306768.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt2fhzb"}], "commentid": "gt2eski"}, {"body": "[Power in the Hands of One](https://www.amazon.com/dp/B077VN9PW4) by Ian Lewis.", "created": 1617394118.0, "author": "IanLewisFiction", "score": 1, "replies": [], "commentid": "gt6bg2v"}, {"body": "Would [Kage Baker's Garden of Iden](https://www.goodreads.com/book/show/270490.In_the_Garden_of_Iden) count for hard mode? been on my tbr for quite some time now.", "created": 1620210082.0, "author": "burnaccount2017", "score": 1, "replies": [], "commentid": "gx0duko"}, {"body": "A ton of stuff by Mercedes Lackey, Kate Elliott, Patricia C Wrede would qualify for HM.", "created": 1617302203.0, "author": "xenizondich23", "score": 3, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617302549.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt26d8e"}], "commentid": "gt25n0p"}, {"body": "Some Hard Mode backlist suggestions:\n\nStardust by Neil Gaiman\n\nKing Rat by China Mieville\n\nFirebird by Mercedes Lackey\n\nDaughter of the Forest by Juliet Marillier\n\nThe Dark Tower books by Stephen King", "created": 1617300796.0, "author": "Arette", "score": 5, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617300829.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt22r59"}], "commentid": "gt22olo"}, {"body": "* [**The Death of the Necromancer**](https://www.goodreads.com/book/show/321357) by Martha Wells (HM)\n* [**Dusk or Dark or Dawn or Day**](https://www.goodreads.com/book/show/31183180) by Seanan McGuire\n* [**The Stars Are Legion**](https://www.goodreads.com/book/show/29090844) by Kameron Hurley\n* [**Ancillary Justice**](https://www.goodreads.com/book/show/17333324) by Ann Leckie\n* [**The Thirteenth Tale**](https://www.goodreads.com/book/show/40440) by Diane Setterfield", "created": 1617314139.0, "author": "Amarthien", "score": 3, "replies": [], "commentid": "gt2v30v"}, {"body": "Is Robin Hobb currently publishing?  Wondering if Assassin's Apprentice would count for HM.", "created": 1617714987.0, "author": "Frostguard11", "score": 2, "replies": [{"body": "I have Assassin's Apprentice as my HM Backlist Book for now. I've read somewhere that she is currently working on a new book...", "created": 1618962151.0, "author": "m4th13u", "score": 2, "replies": [{"body": "You're right! I found a [blog post from last year](http://www.robinhobb.com/blog/posts/35600) where she says she is trying to focus on writing so she can get a book out.\n\n&gt; I've been trying to establish a regular writing schedule for myself, after slacking off for a number of months.\u00a0    \n&gt;  \n&gt;...  \n&gt;  \n&gt;I think the vast majority of my readers would rather have a new book sometime in 2021 than see me dithering on line.", "created": 1619042814.0, "author": "dinosaursock", "score": 1, "replies": [], "commentid": "gvdk0ji"}], "commentid": "gv9k6aq"}], "commentid": "gtke1tf"}, {"body": "Does garden of moons count sense the main Malazan series is over?", "created": 1617302438.0, "author": "kirbyi123", "score": 2, "replies": [{"body": "That is the one I am thinking too. Just checked my paperback that has been on the shelf for years and it is copyright 1999 but published in 2002, so not sure if it counts for hard mode?", "created": 1617303348.0, "author": "caldwell614", "score": 2, "replies": [{"body": "It was originally publish in April 1st 1999 so it definitely counts for hard mode. I just don't know if it counts for backlog since Steve Erikson newest series \"witness trilogy\" is a sequel to Malazan book of the fallen and it say not a currently running series.", "created": 1617304778.0, "author": "kirbyi123", "score": 5, "replies": [], "commentid": "gt2b67r"}], "commentid": "gt2839h"}], "commentid": "gt264vx"}, {"body": "Is Elizabeth Moon still publishing?  She had a ton of great series like **The Deed of Paksennarion** and **Vatta's War/Vatta's Peace** back in the day that would count for hard mode.\n\nI'll also recommend Kate Elliott's **Jaran** novels, which just got a shiny new omnibus e-book collection not that long ago.  All were originally published in the early 90s.\n\nElizabeth Bear also has several completed series that would fit this category, although none for hard mode.", "created": 1617313993.0, "author": "Phyrkrakr", "score": 2, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation thread: **Elizabeth Moon**, veteran author of Fantasy and Sci-Fi](https://www.reddit.com/r/Fantasy/comments/6x54cu/author_appreciation_thread_elizabeth_moon_veteran/?utm_content=comments&amp;utm_medium=hot&amp;utm_source=reddit&amp;utm_name=Fantasy) from user u/Tigrari \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617314413.0, "author": "RedditFantasyBot", "score": 1, "replies": [{"body": "I'm not positive, but Moon did last publish in 2018, so it wasn't that long ago.  Goodreads also has a title for 2020, but it doesn't look like it came out?  I can't quite figure out what's going on with that.", "created": 1617422601.0, "author": "Tigrari", "score": 1, "replies": [], "commentid": "gt7pl58"}], "commentid": "gt2vms3"}], "commentid": "gt2usgv"}], "commentid": "gt1p3fd"}, {"body": "**Revenge-Seeking Character** \\- Book has a character whose main motivation in the story is revenge. **HARD MODE:** Revenge is central to the plot of the entire book.", "created": 1617294763.0, "author": "kjmichaels", "score": 9, "replies": [{"body": "Best Served Cold by Joe Abercrombie (works for hard mode too), also Half a King. The Traitor Baru Cormorant by Seth Dickinson, Broken Empire Trilogy by Mark Lawrence, The Princess Bride by William Goldman, The Engineer Trilogy by KJ Parker", "created": 1617295983.0, "author": "superdragonboyangel", "score": 21, "replies": [{"body": "do any of the books in the first law trilogy work? I read the blade itself years ago but never got around to the sequels so its a bit fuzzy to me but I want to use this as an excuse to finish it lol", "created": 1617303803.0, "author": "soullesssunrise", "score": 3, "replies": [{"body": "Along those lines, I just finished Best Served Cold before Bingo started and wanted to move on to Red Country (skipping The Heroes for now). Do ya'll think Red Country fits Hard Mode?", "created": 1618830837.0, "author": "freedl21", "score": 2, "replies": [], "commentid": "gv2hnuw"}, {"body": "Sorry for the late reply! I think they would count as Ferro wants to get revenge on the Prophet/Emperor. I don't know if it counts for Hard mode", "created": 1618965025.0, "author": "superdragonboyangel", "score": 1, "replies": [], "commentid": "gv9pvwg"}], "commentid": "gt292gl"}, {"body": "Are all of these hard mode?", "created": 1618776541.0, "author": "lolifofo", "score": 1, "replies": [{"body": "I think so!", "created": 1618965062.0, "author": "superdragonboyangel", "score": 2, "replies": [], "commentid": "gv9pygd"}], "commentid": "gv05fh1"}], "commentid": "gt1rtvb"}, {"body": "[*Vicious*](https://www.goodreads.com/book/show/40874032-vicious)(HM) and *Vengeful* from the *Villains* series by V.E. Schwab.", "created": 1617300655.0, "author": "WombatHats", "score": 12, "replies": [], "commentid": "gt22dkz"}, {"body": "**Red Sister** by Mark Lawrence \n\n**Ancillary Justice (H)** by Ann Leckie \n\n**Circe (H)** by Madeline Miller", "created": 1617299341.0, "author": "fuckit_sowhat", "score": 9, "replies": [{"body": "Do you know if the sequels to Red Sister would qualify, preferably for HM, as well?", "created": 1617352307.0, "author": "Tigrari", "score": 2, "replies": [{"body": "I don\u2019t know and I actually left off hard mode on Red Sister even though it might fit. The entire arc of the trilogy is about revenge, but I\u2019m not sure which specific books fit. \n\nAnybody else care to weigh in? I would argue all three books would count for hard mode since revenge is thought about a lot by the MC and a lot of the choices she makes are driven by that.", "created": 1617379752.0, "author": "fuckit_sowhat", "score": 1, "replies": [], "commentid": "gt5ijxw"}], "commentid": "gt4fxb1"}], "commentid": "gt1zh71"}, {"body": "In Dreamer's Pool by Juliet Marillier, revenge is something that the main character struggles with, although I don't think we see the baddie really get any comeuppance until the final (3rd) book.\n\nI haven't yet read it, but the synopsis of Hench by Natalie Zina Walschots seems to fit.\n\nThe Rage of Dragons by Evan Winter", "created": 1617297333.0, "author": "Asheweaver", "score": 6, "replies": [{"body": "I would definitely say that Hench fits. Not sure if it's hard mode, but I could maybe be talked into it.", "created": 1617298518.0, "author": "tarvolon", "score": 6, "replies": [], "commentid": "gt1xiqx"}, {"body": "I definitely think ['Hench' by Natalie Zina Walschots](https://www.goodreads.com/book/show/49867430-hench) is a really good fit, even for HM. It's also one of my favourite books I've read in the last year so I would definitely recommend it :D", "created": 1617366702.0, "author": "catnapkins", "score": 3, "replies": [], "commentid": "gt4v1q5"}], "commentid": "gt1ut1t"}, {"body": "I'm planning to read *Horns* by Joe Hill for this one, which should count for hard mode.", "created": 1621881498.0, "author": "WhiteHawk1022", "score": 1, "replies": [], "commentid": "gzaw0u3"}, {"body": "**Red Rising** by Pierce Brown. I might use it as my reread because I love it so much!", "created": 1617307526.0, "author": "shethereader_", "score": 5, "replies": [{"body": "Would Golden Son also count for this? I've read Red Rising and would love to fit the next in if I can!", "created": 1617616420.0, "author": "PlantLady32", "score": 4, "replies": [{"body": "Absolutely! The whole first series is focused on revenge, though I think it becomes more than just revenge by the third book. Definitely the first two would count.", "created": 1617638825.0, "author": "shethereader_", "score": 3, "replies": [], "commentid": "gtgt5ab"}], "commentid": "gtfrb3u"}], "commentid": "gt2h4qp"}, {"body": "I've not read it yet but I have an ARC of it, so I hope *The Jasmine Throne* by Tasha Suri counts for hard mode!", "created": 1617299586.0, "author": "bubblegumgills", "score": 2, "replies": [], "commentid": "gt201vt"}, {"body": "Seven Blades in Black by Sam Sykes (HM)", "created": 1617652437.0, "author": "imrightontopthatrose", "score": 3, "replies": [], "commentid": "gthn4p8"}, {"body": "My novel, [The Lantern-Lit City](https://www.goodreads.com/book/show/53209353-the-lantern-lit-city)*,* is an epic fantasy that follows multiple perspectives. One of these is a man who is hell-bent on revenge after another PoV character caused the death of his wife. He's not a man with scruples, so his revenge is pursued with \"end-justifies-the-means\" actions.\n\nNote: this character has the fewest PoV chapters and is the most minor of the PoV characters. If you want revenge as a main plot point, this probably isn't the book for you. If you want revenge as a nice side dish to other plots, then it may be worth a try.", "created": 1617300866.0, "author": "Vista_McDowall", "score": 1, "replies": [], "commentid": "gt22txv"}, {"body": "Would E.R. Edison\u2019s The Worm Ouroboros count in this category? I\u2019m about 20% done with the book and think it might, although I\u2019m not sure if it counts towards hard mode.", "created": 1617328838.0, "author": "nolard12", "score": 1, "replies": [], "commentid": "gt3lrpx"}, {"body": "I'm only 48% through it but &gt;!the elk woman!&lt; from The Only Good Indians may count for hard mode.", "created": 1617296018.0, "author": "BitterSprings", "score": 5, "replies": [{"body": "I definitely concur. This is a solid fit.", "created": 1617302388.0, "author": "triftmakesbadchoices", "score": 2, "replies": [], "commentid": "gt26131"}], "commentid": "gt1rwph"}, {"body": "* Loom saga by Elise Kova (HM)\n* Ancillary Justice by Ann Leckie (HM)\n* Kind of a spoiler but &gt;!The Library at Mount Char by Scott Hawkins (HM)!&lt;", "created": 1617301020.0, "author": "Dragon_Lady7", "score": 3, "replies": [], "commentid": "gt235r1"}, {"body": "* [**Ancillary Justice**](https://www.goodreads.com/book/show/17333324) by Ann Leckie (HM)\n* [**The Death of the Necromancer**](https://www.goodreads.com/book/show/321357) by Martha Wells", "created": 1617306540.0, "author": "Amarthien", "score": 2, "replies": [], "commentid": "gt2f09n"}, {"body": "**V for Vendetta**, by Alan Moore and David Lloyd. It's a graphic novel that clocks just under 300 pages, and it counts for HM! As a bonus, it makes you want to watch that excellent movie again! (Yes, I did both in the same day)", "created": 1617599824.0, "author": "TheOneWithTheScars", "score": 2, "replies": [], "commentid": "gtf9ixq"}, {"body": "Probably goes without saying, but *Revenger* by Alastair Reynolds should count for hard mode (science fiction but friendly to people who usually read fantasy)", "created": 1617301765.0, "author": "lurkmode_off", "score": 1, "replies": [], "commentid": "gt24qhr"}, {"body": "A Crown for Cold Silver by Alex Marshall", "created": 1617298560.0, "author": "Skyrider006", "score": 4, "replies": [{"body": "I read the first one, although it's a bit hazy, but never got around to the sequels.  Would they fit for this square, too?", "created": 1617381496.0, "author": "Phyrkrakr", "score": 1, "replies": [{"body": "**A Blade of Black Steel** (#2) would, but not for hard mode.", "created": 1618751022.0, "author": "SmallFruitbat", "score": 1, "replies": [], "commentid": "guyqm9f"}], "commentid": "gt5m3m5"}], "commentid": "gt1xm7i"}, {"body": "**Fortune's Fool** by Angela Boord", "created": 1617297082.0, "author": "tarvolon", "score": 6, "replies": [{"body": "Does it fit hard mode? The synopsis makes it seem like it might.", "created": 1617374324.0, "author": "Nat-Rose", "score": 1, "replies": [{"body": "I would say yes, it's central to the plot.", "created": 1617374484.0, "author": "tarvolon", "score": 2, "replies": [{"body": "Great, thank you! :)", "created": 1617375344.0, "author": "Nat-Rose", "score": 1, "replies": [], "commentid": "gt59r7m"}], "commentid": "gt583ed"}], "commentid": "gt57skv"}], "commentid": "gt1u90v"}, {"body": "**Ashes of the Sun** by Django Wexler would fit here: one of the two POVs is a brother seeking revenge against the regime that took his sister away as a child.", "created": 1617433250.0, "author": "cubansombrero", "score": 1, "replies": [], "commentid": "gt82lrp"}, {"body": "A Madness of Angels by Kate Griffin fits, for hard mode I think. It's a really creative urban fantasy and I recommend it highly. It has some great prose, but it's perhaps not for those who are annoyed by abundant setting detail descriptions (though I personally loved that aspect of it). \n\nKate Griffin also writes as Claire North, though weirdly enough, although I gave Madness of Angels 5 stars without hesitation, I personally didn't like the Claire North book I tried at all (go figure!)", "created": 1617305048.0, "author": "Pseutri", "score": 3, "replies": [{"body": "I feel exactly the same way about Kate Griffin/Claire North. Loved the Matthew Swift books, haven't found anything else I've liked by her.", "created": 1617324204.0, "author": "JiveMurloc", "score": 3, "replies": [], "commentid": "gt3dsqh"}], "commentid": "gt2bqyf"}, {"body": "Queen of Coin and Whispers by Helen Corcoran features revenge as a main plot point. Revenge is also one of the main themes of Deirdre Sullivan's Savage Her Reply", "created": 1617300966.0, "author": "soullesssunrise", "score": 4, "replies": [], "commentid": "gt231jz"}, {"body": "Queen of the Conquered by Kacen Callender, probably fits Hard Mode too.", "created": 1617303075.0, "author": "Endalia", "score": 4, "replies": [], "commentid": "gt27hvh"}, {"body": "**An Ember in the Ashes** by Sabaa Tahir\n\n**The Host** by Stephanie Myer\n\n**Baker Thief** by Claudie Arsenault\n\n**The Warded Man** by Peter V Brett\n\n**Kingkiller Chronicles** by Patrick Rothfuss\n\n**Mistborn** by Brandon Sanderson", "created": 1617302630.0, "author": "lightning_fire", "score": 1, "replies": [], "commentid": "gt26jeo"}, {"body": "**The Traitor Baru Cormorant** and its sequels by Seth Dickinson", "created": 1617300624.0, "author": "DrMDQ", "score": 8, "replies": [], "commentid": "gt22b7l"}, {"body": "*Rage of Dragons* and it's sequel *Fires of Vengeance* by Evan Winter would both count for Hard mode.", "created": 1617297123.0, "author": "3j0hn", "score": 16, "replies": [], "commentid": "gt1uceb"}, {"body": "Hard Mode: **Daughter of the Empire** by Raymond E. Feist and Janny Wurts. (Also fits Asian-inspired, but not HM.)", "created": 1617303096.0, "author": "cheryllovestoread", "score": 2, "replies": [{"body": "(and HM backlist)", "created": 1617377605.0, "author": "tarvolon", "score": 2, "replies": [], "commentid": "gt5e8yh"}], "commentid": "gt27jg7"}, {"body": "The very first **Sandman Slim** book by Richard Kadrey would work for hard mode.  The sequels, not so much, but definitely the first one.  Bareknuckled urban fantasy that huffs gasoline and shits napalm.", "created": 1617314706.0, "author": "Phyrkrakr", "score": 1, "replies": [], "commentid": "gt2w7yo"}, {"body": "**Song for the Basilisk** by Patricia McKillip, qualifies for hard mode", "created": 1621855115.0, "author": "Megtalallak", "score": 1, "replies": [], "commentid": "gz9ezbn"}, {"body": "Would Hummingbird Salamander fit here?", "created": 1624288395.0, "author": "TimeLadyJ", "score": 1, "replies": [], "commentid": "h2jlt91"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\nFor this square, they are: \n\nSpirit of Shadow by D. A. Holley\n\nWindborn by Alex Bradshaw\n\nKept from Cages by Phil Williams\n\nAlong the Razor's Edge by Rob J Hayes\n\nWindward by S. Kaeth\n\nThrone of Ice and Ash by J. D. L. Rosell\n\nBy the Pact by Joanna Maciejewska\n\nPath of Darkness by CM Lackner\n\nSword of Cho Nisi by D.L. Gardner\n\nSpirit of Shadow by D. A. Holley\n\nWindborn by Alex Bradshaw\n\nKept from Cages by Phil Williams\n\nAlong the Razor's Edge by Rob J Hayes\n\nWindward by S. Kaeth\n\nThrone of Ice and Ash by J. D. L. Rosell\n\nBy the Pact by Joanna Maciejewska\n\nPath of Darkness by CM Lackner\n\nSword of Cho Nisi by D.L. Gardner", "created": 1622825407.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0l42tz"}, {"body": "Would The Lies of Locke Lamora by Scott Lynch work for hard mode? I feel like revenge is very central to the plot", "created": 1618145017.0, "author": "Lukarisling", "score": 1, "replies": [], "commentid": "gu568d9"}, {"body": "Demon Haunted and The Demons Within, both by me, and both can work for hard mode.", "created": 1617305530.0, "author": "ashearmstrong", "score": 4, "replies": [], "commentid": "gt2cs4g"}, {"body": "Can *Seven Blades In Black* by Sam Sykes count for this one? I am asking because I haven't read it yet, but it seems intriguing and from the synopsis it seems like it could fit", "created": 1617369694.0, "author": "Siannalyn", "score": 4, "replies": [{"body": "Totally fits!", "created": 1617437642.0, "author": "criros91", "score": 3, "replies": [{"body": "Thank you!!", "created": 1617438754.0, "author": "Siannalyn", "score": 1, "replies": [], "commentid": "gt87z79"}], "commentid": "gt86xml"}], "commentid": "gt4zl4r"}, {"body": "The Forgotten Beasts of Eld by Patricia Mckillip, though it takes a minute to get there.  Should fit hard mode.  &gt;!revenge is bad!&lt; is one of Mckillip's favorite themes in general.", "created": 1617319683.0, "author": "oboist73", "score": 5, "replies": [], "commentid": "gt35pm3"}, {"body": "**The Scar** by Sergey &amp; Marina Dyachenko is the first one that comes to mind for me.", "created": 1617321933.0, "author": "improperly_paranoid", "score": 1, "replies": [], "commentid": "gt39sjf"}, {"body": "**Black Sun** by Rebecca Roanhorse (HM)\n\n**Raybearer** by Jordan Ifueko (HM)", "created": 1617303830.0, "author": "perditorian", "score": 6, "replies": [], "commentid": "gt294kz"}, {"body": "The webnovel **Kill the Hero** satisfies hard mode", "created": 1617538025.0, "author": "Kur0nue", "score": 1, "replies": [{"body": "Do you have a link?", "created": 1621901059.0, "author": "potterhead42", "score": 1, "replies": [{"body": "[Here](https://wuxiaworld.site/novel/kill-the-hero/chapter-0/) is the Wuxia World link.", "created": 1621904542.0, "author": "Kur0nue", "score": 1, "replies": [], "commentid": "gzc891r"}], "commentid": "gzc1h5g"}], "commentid": "gtc91q2"}, {"body": "[Path of the Fury](https://www.goodreads.com/book/show/340209.Path_of_the_Fury) by David Weber is an unconventional sci-fi revenge story. \n\nAlicia DeVries is a commando leader who retires, loses everything in an attack on her colony, and wants revenge so desperately that her desire awakens the last of the sleeping Greek Furies to help her get it. They team up with a sentient spaceship to figure out who arranged the attack, and that vengeance quest is the core of the book. \n\nSince this came out in 1992 and Weber is still trucking, it has the bonus of counting for the Back Catalog square on hard mode.  I think it would also count for Found Family, in a way, though not hard mode-- there are two non-corporeal personalities and one human with no time for romance, so sexual orientation isn't a factor that I recall. \n\n(Skip the \"expanded version,\" **In Fury Born**\\-- I found it to be flat and over-padded.)", "created": 1617301575.0, "author": "Nineteen_Adze", "score": 2, "replies": [], "commentid": "gt24bxf"}, {"body": "SF, but *The Stars My Destination* by Alfred Bester fits the hard mode here. About as hard-mode as they come.", "created": 1617414545.0, "author": "tegeus-Cromis_2000", "score": 2, "replies": [], "commentid": "gt7ckqn"}], "commentid": "gt1p3ui"}, {"body": "**Self-Published** \\- Only self-published novels will count for this square. If the novel has been picked up by a publisher as long as you read it when it was self-pubbed it will still count. **HARD MODE:** Self-pubbed and has fewer than 50 ratings on Goodreads.", "created": 1617294819.0, "author": "kjmichaels", "score": 9, "replies": [{"body": "**A Tale of Stars and Shadow** by Lisa Cassidy", "created": 1617302782.0, "author": "lightning_fire", "score": 1, "replies": [], "commentid": "gt26ve3"}, {"body": "I plan on getting **Idols Fall** by Mike Shel the day it comes out (April 21 I believe). It\u2019s sure to be hard mode for at least a few days!", "created": 1617300788.0, "author": "DrMDQ", "score": 2, "replies": [], "commentid": "gt22ny5"}, {"body": "Of my stuff:\n\nThe later Tranquility books (not the early ones, which were trad published first)\n\nLadies Occult Society - all\n\nThe Dark Abyss of Our Sins - all\n\nCollaborator - all\n\nSpirit Caller - all\n\nAppropriately Aggressive - this one, not the other two non-fiction", "created": 1617313380.0, "author": "KristaDBall", "score": 3, "replies": [], "commentid": "gt2tjwu"}, {"body": "I haven't read any of these, but I had the list handy from a previous thread, soooo...\n\n**Hard Mode:** (as of February 2021)\n\n* **Secret Seller** by J.D.L. Rosell\n* **Wildmane** by Todd Fahnestock\n* **Essence of Chaos** by Marie Andreas\n* **Dragon Sword** by Angelique Anderson &amp; Craig A. Price, Jr.\n* **Rune Knight** by M.R. Kelly\n* **Soul Forge** by Richard H. Stephens\n* **Deliverance at Van Demon\u2019s Deep** by Shaun Paul Stevens\n* **Blood Mercenaries Origins** by Ben Wolf\n* **Sorrowfish** by Anne C. Miles\n* **The Watchers of Moniah** by Barbara V. Evers\n* **Fledgling** by C.F. Welburn\n* **A Time of Turmoil** by N.M. Zoltack\n* **Fires That Forge** by R.J. Hanson", "created": 1617892544.0, "author": "SmallFruitbat", "score": 2, "replies": [], "commentid": "gttc4e5"}, {"body": "* [**Meanwhile, at the Dernstrum Institute...**](https://www.goodreads.com/book/show/52869650) by Catherine Griffin (HM)\n* [**After Midnight: Stories of Mystery and the Macabre**](https://www.goodreads.com/book/show/40189601) by Sidney Wainwright (HM)\n* [**The Half Killed**](https://www.goodreads.com/book/show/25668335) by Quenby Olson", "created": 1617312971.0, "author": "Amarthien", "score": 1, "replies": [], "commentid": "gt2splg"}, {"body": "All of my books are Self-published, only one has more than 50 good reads ratings.   \\[Self-published books\\]([*https://www.goodreads.com/author/show/18897239.Kit\\_Falbo*](https://www.goodreads.com/author/show/18897239.Kit_Falbo))", "created": 1618265918.0, "author": "Daigotsu", "score": 1, "replies": [], "commentid": "gub10ra"}, {"body": "A few I don't see recommended as often:\n\n**Digitesque** by Guerric Hache\n\n**Faithless** by Graham Austin-King\n\n**The Timeweaver's Wager** by Axel Blackwell\n\n**The Heart of Stone** by Ben Galley\n\n**Construct** by Luke Matthews\n\n**Mid-Lich Crisis** by Steve Thomas\n\n**The Wrack** by John Bierce\n\n**A Star-Reckoner's Lot** by Darrell Drake\n\n**The Healers' Road** by SE Robertson\n\n**Zeus is Dead: A Monstrously Inconvenient Adventure** by Michael G Munz\n\n**The Artifact Hunters** by AW Exley\n\n**I Bring the Fire** by C Gockel\n\n**Empire of the Dead** by Phil Tucker", "created": 1617302996.0, "author": "StarlightEstel", "score": 5, "replies": [], "commentid": "gt27btn"}, {"body": "**Veil of Rage by Ryan Abaddi (HM).** I did not read the book, the author made a giveaway in r/fantasy about a month ago. I found a comment by him saying he self-published. But it would be nice if there could be a confirmation u/RyanAbaddi :)", "created": 1617561299.0, "author": "Erberos94", "score": 1, "replies": [], "commentid": "gtde6xt"}, {"body": "* **In the Vanishers' Palace** by Aliette de Bodard  \n* **The Heretic's Guide to Homecoming** by Sienna Tristen  \n* **The Healers' Road** by S.E. Robertson  \n* **The Magpie Lord** by K.J. Charles  \n* **Seven Summer Nights** by Harper Fox  \n* **The Cybernetic Tea Shop** by Meredith Katz    \n* **Swordheart** by T. Kingfisher  \n* **Ravenwood** by Nathan Lowell", "created": 1617325126.0, "author": "improperly_paranoid", "score": 3, "replies": [], "commentid": "gt3fee3"}, {"body": "* **Letters from the Well in the Season of the Ghosts** by Raymond St. Elmo", "created": 1617299519.0, "author": "barb4ry1", "score": 2, "replies": [], "commentid": "gt1zwds"}, {"body": "Some Awesome Recs:\n\n* The Eagle's Flight by D. E. Olesen\n* Currently by Sarah Mensinga\n* Between the Shade and the Shadow by Coleman Alexander\n\nThere's also my book: Children of the Dead City by Noor Al-Shanti", "created": 1617315574.0, "author": "NStorytellerDragon", "score": 1, "replies": [{"body": "*The Eagle's Flight* and *Between the Shade and the Shadow* both have over 50 ratings.", "created": 1617319913.0, "author": "smartflutist661", "score": 1, "replies": [{"body": "Really? Woops. I didn't double check, but I was almost sure they had less last time I looked/when I read them! Thanks for the correction. \\*goes to edit post\\*", "created": 1617377113.0, "author": "NStorytellerDragon", "score": 1, "replies": [], "commentid": "gt5d9oy"}], "commentid": "gt364om"}], "commentid": "gt2xxdd"}, {"body": "Additional **hard-mode** books (as of April 2021) that I can't vouch for:\n\n* **Queen of Shades** by Eli Hinze\n* **By the Hand of Dragons: Blood of the Lunacorn** by Alexzander Christion\n* **Venom of the Black Lotus: A Legends of Tivara Story** by J.C. Nelson &amp; J.C. Kang\n* **The Chanter's Blade** by A.A. Lee\n* **Tides of Mana** by Matt Larkin\n* **The Baronies of Corinth** by Thomas Webb\n* **Angel in the Shadow Court** by Stephanie BwaBwa", "created": 1619052019.0, "author": "SmallFruitbat", "score": 2, "replies": [], "commentid": "gve2soi"}, {"body": "Hi, I'm a **Self-Published** Author - HARD MODE.\n\nMy debut novel **Doomsayer Prince** is an epic fantasy. I hope you have a great 2021 Fantasy Bingo experience :-)\n\n[Buy Doomsayer Prince here](https://runesnielsen.com/availablefrom). It's only 99 cents while on sale from June 1-7th.\n\n[The reviews so far](https://runesnielsen.com/reviews-for-doomsayer-prince). Thank you ever so much if you will review it :-)", "created": 1622645698.0, "author": "Rune_S_Nielsen", "score": 1, "replies": [], "commentid": "h0bit9x"}, {"body": "Robocopter Ski Patrol, Untitled Spy Story, and Ruben's Cube Alaska by Aaron C. Cross \n\nRC: A mercenary group gets back together to try to stop a dictator from taking over a huge supply of yellow cake uranium. Hijinks and reality messes ensue. There's also a robotic helicopter.\n\nUSS: Four government agents get burned and have to find a way to clear their names while exploring the world and getting to the bottom of a sinister cabal's plan. Lou Bega makes an appearance and hasn't sued me yet, which is nice of him.\n\nRCA: A man up in Alaska both is and isn't himself and has to figure it out. There's also a cube that can change time and reality. Also, there's a semi-immortal Russian with a direwolf. He's pretty fun.\n\nThese books are also eligible for Hard Mode since I have, at most, 10 reviews for any of them!", "created": 1617391916.0, "author": "aaronccross", "score": 1, "replies": [], "commentid": "gt672d9"}, {"body": "**Guild of Tokens** by Jon Auerbach \n\n**Kingshold** by D.P. Woolliscroft (whole series, some HM)\n\n**Symphony of the Wind** by Steven McKinnon (whole series)\n\n**Fortune's Fool** by Angela Boord (whole series)\n\n**Into the Labyrinth** by John Bierce (whole series)\n\n**The Game Bird** by Aidan R. Walsh \n\n**Banebringer** by Carol A. Park (whole series)\n\n**Aching God** by Mike Shel (whole series)\n\n**Vattu** by Evan Dahm (whole series)\n\n**Balam, Spring** / **Spit and Song** / **The Narrows** / **Flesh Eater** / **Mother Pig** by me (HM for some, MP coming out in June)", "created": 1617316547.0, "author": "eightslicesofpie", "score": 1, "replies": [], "commentid": "gt2zt19"}, {"body": "Would ['Charon Docks At Daylight'](https://www.goodreads.com/book/show/34742668-charon-docks-at-daylight?ref=nav_sb_ss_2_6) by Zoe Reed count towards this one? I'm thinking of re-reading it. Not HM though.", "created": 1617321028.0, "author": "catnapkins", "score": 1, "replies": [], "commentid": "gt385ok"}, {"body": "[The Camaro Murders](https://www.amazon.com/dp/B077W12M7R)\n\n[From Legend](https://www.amazon.com/dp/B07PGSDVC9)\n\n[Power in the Hands of One](https://www.amazon.com/dp/B077VN9PW4)\n\nAll by Ian Lewis (me)", "created": 1617395202.0, "author": "IanLewisFiction", "score": 1, "replies": [], "commentid": "gt6dm19"}, {"body": "Both of my books [The Lantern-Lit City](https://www.goodreads.com/book/show/53209353-the-lantern-lit-city) and its sequel are self-published, and both have fewer than 50 Goodreads ratings, so they're ripe for Hard Mode. Also bonus: Book 3 is slated to come out by the end of this year, so you won't have a long wait until the trilogy is complete. Neat!", "created": 1617300531.0, "author": "Vista_McDowall", "score": 10, "replies": [{"body": "I've been checking and your books show on Amazon and Goodreads as published by Anvil Graphics?? \n\nNot that I regret reading The Lantern-Lit City, it's very enjoyable. I will be getting the subsequent books! Bingo has already served my purpose, to expand my list of go-to authors.", "created": 1618767784.0, "author": "Gyr-falcon", "score": 1, "replies": [{"body": "Glad you enjoyed the first book! I've been working hard on the third one, and hoping it'll be out by the end of the year.\n\nGood eye on Anvil Graphics. It's actually my dad's graphic design company that occasionally provides cover design and printing services for indie authors. Since he did the cover art and design, and Anvil Graphics had some ISBNs already purchased, I \"published\" under his company. So it's still self-published, with some help from family.", "created": 1618769785.0, "author": "Vista_McDowall", "score": 2, "replies": [], "commentid": "guzrh3l"}], "commentid": "guznb44"}], "commentid": "gt223wx"}, {"body": "Just picked up Aching God by Mike Shel the other day, perfect for this!\n\n&amp;#x200B;\n\nAnd also, of course, Sword of Kaigen by M.L. Wang is great!", "created": 1617299800.0, "author": "Frostguard11", "score": 3, "replies": [], "commentid": "gt20j10"}, {"body": "All [my Grimluk, Demon Hunter books](https://www.ashearmstrong.com/works/fiction/grimluk/). The 2nd, 3rd, and upcoming 4th books all count for hard mode.", "created": 1617305731.0, "author": "ashearmstrong", "score": 2, "replies": [], "commentid": "gt2d7ke"}, {"body": "My favorite self-pubbed ones:\n\n* Wildbow's stories: Worm, Twig, Ward, Pale, Pact\n\n* D D Webb's stories: the epic fantasy series The Gods Are Bastards, but he's also writing another one right now. \n\n* The Wandering Inn (of course)\n\n* The Administration series by Manna Francis (futuristic dystopian sci-fi)\n\n* Lightning on the Wave has a lot of [free original fiction](http://ffstories.net/lightning/) that's as good (or better) than her epic Harry Potter franchise rewrite.", "created": 1617302601.0, "author": "xenizondich23", "score": 6, "replies": [], "commentid": "gt26h67"}, {"body": "I loved Raymond St. Elmo's *Origin of Birds in the Footprints of Writing*, and it only has 49 ratings at the moment, so it technically counts for hard mode!\n\nI'm probably going to check SPFBO winners and finalists, there must be a lot of great books to choose from.", "created": 1617298560.0, "author": "Harkale-Linai", "score": 3, "replies": [], "commentid": "gt1xm5i"}, {"body": "K.M. Shea and Melanie Cellier have some self-published fairy tales I've enoyed - ymmv\n\nI've enjoyed Karen Lynch's self-pubbed YA books\n\nHalf a Soul by Olivia Atwater", "created": 1617297728.0, "author": "Asheweaver", "score": 2, "replies": [], "commentid": "gt1vntz"}, {"body": "Hello. I'm a pretty new self published author James G. Robertson here. (Less than 50 reviews on good reads and everywhere else) I have two works out that are both dark fantasy in nature, one with a sci-fi lean, the other with a horror.\n\nThe first one, Afterworld, has won a few small awards and is getting a second edition this summer along with an audiobook. \n\nThe second, The Ripper, I'm in the process of creating an ensemble cast audiobook (30+ voice actors) and adding a few minor revisions to the ebook before releasing the paperback. This book will be in its final form in all formats come sometime in May. \n\nThese books are in the same \"Next Life Universe\" and are connected, but you can read them in any order. If you have any questions, please feel free to message me!", "created": 1617328217.0, "author": "ThrowBackFF", "score": 4, "replies": [], "commentid": "gt3kp9l"}, {"body": "Both novels in my series *The Chronicler Saga* \\- ***Construct*** and ***Companion*** \\- are self-published, and ***Companion*** currently only has 5 ratings on GoodReads, so it qualifies for Hard Mode!\n\nIf you haven't yet read any of Ben Galley's work, I'd suggest checking out ***Bloodrush***.", "created": 1617309331.0, "author": "Luke_Matthews", "score": 2, "replies": [], "commentid": "gt2l0mj"}, {"body": "I very much enjoy Isabel Pelech, whose books all count for hard mode.  She's got an Egypt-esque coming of age fantasy novella, a couple of sci fi books, and a superhero book.\n\nFor easy mode, Rachel Aaron is outstanding.", "created": 1617331877.0, "author": "oboist73", "score": 2, "replies": [{"body": "Just read The Fire-Moon and really liked it! I'm definitely going to check out Pelech's other works. Thank you for the recommendation!", "created": 1617386911.0, "author": "magykalfirefox", "score": 2, "replies": [{"body": "Yay!!  I'm glad you enjoyed it!!", "created": 1617388376.0, "author": "oboist73", "score": 2, "replies": [], "commentid": "gt5zzwx"}], "commentid": "gt5x3c3"}], "commentid": "gt3qwh8"}, {"body": "Was asked to reply to each relevant tile, so here we go!\n\n[Cradle of Sea and Soil](https://www.amazon.com/Cradle-Sea-Soil-Islandborn-Book-ebook/dp/B08936MB2T), by me, Bernie An\u00e9s Paz.", "created": 1617802093.0, "author": "BernieAnesPaz", "score": 3, "replies": [], "commentid": "gtop4cd"}, {"body": "For last year's Bingo I read **The Flight of the Darkstar Dragon** by Benedict Patrick. It's a portal fantasy with several cool worlds.\n\nThis year I think I'm reading **The Origin of Birds in the Footprints of Writing** by u/RAYMONDSTELMO", "created": 1617299075.0, "author": "ullsi", "score": 2, "replies": [], "commentid": "gt1yuac"}], "commentid": "gt1p8bg"}, {"body": "**Title:  \\_\\_\\_\\_\\_ of \\_\\_\\_\\_\\_** \\-  The title of the book must feature the format X of Y. Example: *The Harp of Kings* by Juliet Marillier. **HARD MODE:** \\_\\_\\_\\_\\_ of \\_\\_\\_\\_\\_\\_ and \\_\\_\\_\\_\\_\\_\\_\\_.  Format of title must be X of Y and Z.", "created": 1617294841.0, "author": "kjmichaels", "score": 8, "replies": [{"body": "From my TBR: *Children of Earth and Sky*, *Children of Blood and Bone*, and *The Book of Artix Wolf*", "created": 1617295869.0, "author": "BitterSprings", "score": 19, "replies": [], "commentid": "gt1rkpo"}, {"body": "Gods of Jade and Shadow by Sylvia Moreno-Garcia (hard mode)\n\nSins of Empire (and following books) by Brian McClellan\n\nThe Rules of Magic by Alice Hoffman\n\nThe Empress of Salt and Fortune by Nghi Vo (hard mode)\n\nThe City of Brass by S. A. Chakraborty \n\nAn Alchemy of Masques and Mirrors by Curtis Caddock (hard mode)\n\nThe Rage of Dragons by Evan Winters\n\nThe Shadow of What Was Lost by James Islington\n\nChildren of Earth and Sky by Guy Gavriel Kay (hard mode)\n\nThe Lions of Al-Rassan by Guy Gavriel Kay\n\nCity of Stairs by Robert Jackson Bennett", "created": 1617299066.0, "author": "Asheweaver", "score": 16, "replies": [], "commentid": "gt1ytiq"}, {"body": "*The Curse of Chalion* by Lois McMaster Bujold - slow-burn posi fantasy\n\n*The Player of Games* by Iain M. Banks - classic 80s space opera about board games and wars\n\n*The Empress of Salt and Fortune* by Nghi Vo (novella) - nice little book about storytelling, with a scribe recording some history\n\n*The Shadow of the Torturer* by Gene Wolfe - moody science-fantasy with beautiful prose and many hidden layers", "created": 1617299996.0, "author": "GALACTIC-SAUSAGE", "score": 10, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Gene Wolfe**](https://www.reddit.com/r/Fantasy/comments/6mudtg/author_appreciation_gene_wolfe/?utm_content=comments&amp;utm_medium=hot&amp;utm_source=reddit&amp;utm_name=Fantasy) from user u/JayRedEye_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617300314.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt21nam"}], "commentid": "gt20ykq"}, {"body": "Winds of Winter.\n\nHAHAHA. It's still April 1st here.", "created": 1617335389.0, "author": "ConquerorPlumpy", "score": 11, "replies": [], "commentid": "gt3wdov"}, {"body": "all the books in Michael Sullivan's legends of the first empire: *Age of Myth/Sword/War/Legend/Death/Empyre* \n\nas well as his Riyria Revelations series: *Theft of Swords, Rise of Empire, Heir of Novron*", "created": 1617297558.0, "author": "flavio321", "score": 9, "replies": [], "commentid": "gt1vajt"}, {"body": "If anyone happens to be reading through The Steerswoman series and wondering how to squeeze it into bingo, book four is titled **The Language of Power**.", "created": 1617298982.0, "author": "tarvolon", "score": 8, "replies": [], "commentid": "gt1ymmh"}, {"body": "Children of the Dead City by Noor Al-Shanti", "created": 1617316550.0, "author": "NStorytellerDragon", "score": 1, "replies": [], "commentid": "gt2ztaf"}, {"body": "A bunch of YA/new adult fantasy fits here.  Daughter of Smoke and Bone, Court of Thorns and Roses, Six of Crows, etc.", "created": 1617297420.0, "author": "dasatain", "score": 5, "replies": [], "commentid": "gt1uzuw"}, {"body": "**Heir of Sea and Fire** by Patricia A. McKillip (HM), second book in the *Riddle-Master trilogy*.", "created": 1622221958.0, "author": "BohemianPeasant", "score": 1, "replies": [], "commentid": "gzs3hqr"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\n**For this square, they are:**\n\nA Change of Blood by G. P. Gabriel\n\nSpirit of Shadow by D. A. Holley\n\nLegacy of Flame by Rebecca Bapaye\n\nDaughter of No Worlds by Carissa Broadbent\n\nArmy of the Cursed by Karim Soliman\n\nThrone of Ice and Ash by J. D. L. Rosell\n\nSword of Cho Nisi by D.L. Gardner", "created": 1622828848.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0lc467"}, {"body": "I have a book that will work.\n\nThe Crafting of Chess.   Sequel also fits but that is in the hands of beta readers now. The Rise of Chess.", "created": 1618264139.0, "author": "Daigotsu", "score": 1, "replies": [], "commentid": "guaxfhs"}, {"body": "Was asked to reply to each relevant tile, so here we go!\n\n[Cradle of Sea and Soil](https://www.amazon.com/Cradle-Sea-Soil-Islandborn-Book-ebook/dp/B08936MB2T), by me, Bernie An\u00e9s Paz.", "created": 1617802001.0, "author": "BernieAnesPaz", "score": 1, "replies": [], "commentid": "gtooxpg"}, {"body": "* Daughter of Smoke and Bone \n* A Song of Wraiths and Ruin \n* Gods of Jade and Shadow", "created": 1617299581.0, "author": "g_ann", "score": 1, "replies": [{"body": "&gt; Daughter of Smoke and Bone\n\nAmazons recommended reading age is apparently 5-7, is it really a childrens book? Seems pretty big to be a childrens book at almost 500 pages.", "created": 1617306669.0, "author": "XpCjU", "score": 1, "replies": [{"body": "It\u2019s YA. Maybe it\u2019s supposed to be 15-17 because that makes more sense.", "created": 1617306917.0, "author": "g_ann", "score": 4, "replies": [{"body": "Probably. 5-7 is basically picture books. It's still a weird mistake to make.", "created": 1617307098.0, "author": "XpCjU", "score": 2, "replies": [], "commentid": "gt2g7g8"}], "commentid": "gt2ftdr"}, {"body": "It\u2019s YA but fairly adult themes, sex and violence and politics and war.  I really enjoy this one and have read several times.", "created": 1617308191.0, "author": "dasatain", "score": 2, "replies": [], "commentid": "gt2ij85"}], "commentid": "gt2facm"}], "commentid": "gt201ev"}, {"body": "* **The Breath of the Sun** by Isaac Fellman\n\n* **The Queen of Attolia** by Megan Whalen Turner\n\n* **Moon of the Crusted Snow** by Waubgeshig Rice\n\n* **Tess of the Road** by Rachel Hartman\n\n* **The First Fifteen Lives of Harry August** by Claire North\n\n* **Trail of Lightning** by Rebecca Roanhorse\n\n* **A Skinful of Shadows** by Frances Hardinge\n\n* **The House of Shattered Wings** by Aliette de Bodard\n\n* **A Darker Shade of Magic** by VE Schwab\n\n* **A Taste of Honey** by Kai Ashante Wilson\n\n* **The Grace of Kings** by Ken Liu\n\n* **Arrows of the Queen** by Mercedes Lackey\n\n* **The Queen of the Tearling** by Erika Johansen\n\n* **Daughter of Smoke and Bone** by Laini Taylor (HM)", "created": 1617304533.0, "author": "perditorian", "score": 4, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617305029.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt2bpjp"}], "commentid": "gt2an56"}, {"body": "* [**The Empress of Salt and Fortune**](https://www.goodreads.com/book/show/51190882) by Nghi Vo (HM)\n* [**A Wizard of Earthsea**](https://www.goodreads.com/book/show/13642) by Ursula K. Le Guin\n* [**The Death of the Necromancer**](https://www.goodreads.com/book/show/321357) by Martha Wells\n* [**Sisters of the Vast Black**](https://www.goodreads.com/book/show/44581558) by Lina Rather", "created": 1617312629.0, "author": "Amarthien", "score": 2, "replies": [], "commentid": "gt2s0bw"}, {"body": "The Empress of Salt and Fortune was probably my favorite book I read in 2020", "created": 1617306030.0, "author": "XpCjU", "score": 3, "replies": [], "commentid": "gt2dv00"}, {"body": "A few from my TBR:\n\n**The City of Brass** by S.A. Chakraborty\n\n**Shades of Milk and Honey** by Mary Robinette Kowal\n\n**The Rage of Dragons** by Evan Winter\n\n**Empire of Sand** by Tasha Suri\n\n**Hall of Smoke** by H.M. Long\n\n**Eye of Obscurance** by Jeffrey L. Kohanek\n\n**Blood of an Exile** by Brian Naslund\n\n**A Conspiracy of Truths** by Alexandra Rowland\n\n**Ship of Smoke and Steel** by Django Wexler\n\n**City of Masks** by Ashley Capes\n\n**Bonds of Brass** by Emily Skrutskie\n\n**The Wound of Words** by Deborah Makarios", "created": 1617312910.0, "author": "quintessentialreader", "score": 7, "replies": [], "commentid": "gt2sl9z"}, {"body": "*The Girl of Fire and Thorns* by Rae Carson (HM)\n\n*Court of Fives* by Kate Elliott; several books in her *Crown of Stars* series also work, but unfortunately not the first one", "created": 1617301911.0, "author": "sophia_s", "score": 1, "replies": [], "commentid": "gt251ah"}, {"body": "* **The Empress of Salt and Fortune** (hard mode)\n* **A Master of Djinn** (expected to come out in May according to Goodreads)\n* **City of Stairs** \n* **Children of Time**", "created": 1617299529.0, "author": "ullsi", "score": 5, "replies": [], "commentid": "gt1zx75"}, {"body": "Girls of Paper and Fire by Natasha Ngan", "created": 1617302714.0, "author": "Endalia", "score": 6, "replies": [], "commentid": "gt26q1h"}, {"body": "The Name of the Wind by Patrick Rothfuss\n\nSeveral of Lois McMaster Bujold's Penric novellas\n\nThe Assassination of Brangwain Spurge (this one is half graphic novel and half middle-grade, but it's genius and I really want people to try it)\n\nSecret of the Lost Race by Andre Norton - an old scifi I found enjoyable although predictable. It's very short so effectively a novella.\n\nThe Left Hand of Darkness by Ursula K. Le Guin - classic feminist scifi\n\nDoes a subtitle count? In which case Brandon Sanderson's Legion: The Many Lives of Stephen Leeds would work.\n\nA Madness of Angels by Kate Griffin - I absolutely love this book and it's way underrated. It's a really creative urban fantasy that doesn't follow the usual tropes, and the way it describes the city is just amazing (some people find it too much, maybe not for you if you dislike a lot of descriptions, but it's so good!) Also counts for the revenge-motivated square I think.\n\nEnvy of Angels by Matt Wallace\n\nThe Court of Broken Knives by Anna Smith Spark\n\nSome of the later Raksura books by Martha Wellse\n\nThe Death of the Necromancer by Martha Wells (also counts for Gothic square I think)\n\nI've been going through my goodreads for these, and tbh I'm kind of surprised there aren't more on my read list. I guess I've reflexively avoided a lot of the ones in this format that are generic sounding. Also maybe just didn't read as much SFF last year as normal.\n\nEdit: Wizard of the Pigeons by Megan Lindholm (aka an early urban fantasy by Robin Hobb, for you Robin Hobb fans).", "created": 1617302383.0, "author": "Pseutri", "score": 4, "replies": [], "commentid": "gt260rd"}, {"body": "* **The Kingdom of Back** by Marie Lu\n* **The Book of Dust** by Philip Pullman\n* **A Game of Thrones** and lots of other books by George R.R. Martin. Also many are hard-mode cat-squashers!\n* **The Book of Swords**, **The Book of Magic**, and other anthologies Ed. by Gardner Dozois (also work for short stories hard mode and cat-squasher!)\n* **The Crown of Embers** and **The Empire of Dreams** by Rae Carson (#2 and #4 in a series - first has already been mentioned), as well as **Any Sign of Life** (2021)\n* **A Crown of Wishes** by Roshani Chokshi\n* **The Book of Jhereg** by Steven Brust (also a prior BotM)\n* **The Kingdom of Gods** by N.K. Jemisin (#3 in a trilogy)\n* **A Natural History of Dragons** and others by Marie Brennan", "created": 1617379501.0, "author": "SmallFruitbat", "score": 3, "replies": [], "commentid": "gt5i1jv"}, {"body": "**A Tale of Stars and Shadow** by Lisa Cassidy\n\n**A Song of Wraiths and Ruin** by Roseanne A. Brown\n\n**The Sword of Kaigen** by M.L. Wang\n\n**Promise of Blood** Brian McClellan\n\n**The Way of Shadows** by Brent Weeks\n\nAbout 60% Brandon Sanderson's have this format.", "created": 1617303076.0, "author": "lightning_fire", "score": 3, "replies": [], "commentid": "gt27hzy"}, {"body": "The Song of Achilles by Madeline Miller\n\nQueen of Coin and Whispers by Helen Corcoran\n\nPower of Three by Diana Wynne Jones\n\nThe War of the Flowers by Tad Williams\n\nGardens of the Moon by Stephen Erikson", "created": 1617301851.0, "author": "soullesssunrise", "score": 2, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Diana Wynne Jones**](https://www.reddit.com/r/Fantasy/comments/9z89ao/author_appreciation_diana_wynne_jones/) from user u/balletrat \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617304455.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt2ah3l"}], "commentid": "gt24wv3"}, {"body": "First in or standalone series books I've read and enjoyed: \n\nThe Mask of Mirrors by M.A. Carrick\n\nAn Unkindness of Magicians by Kat Howard\n\nThe Language of Thorns by Leigh Bardugo\n\nKingdom of Exiles by Maxym M. Martineau\n\nThe Priory of the Orange Tree by Samantha Shannon \n\nThe Thousand Deaths of Ardor Benn by Tyler Whitesides\n\nAn Illusion of Thieves by Cate Glass\n\nSorcery of Thorns by Margaret Rogerson\n\nA Court of Thorns and Roses  by Sarah J Maas (HM, in fact all of the series is hardmode until the most recent book)\n\nHouse of Earth and Blood by Sarah J Maas (HM)", "created": 1617298351.0, "author": "adventuresinplot", "score": 11, "replies": [{"body": "I think I'm gonna have to try the Sarah J Maas book for this. I see it come up constantly from people on goodreads, and I get the impression that either a) I'll enjoy it as a 'guilty' pleasure read or b) I might enjoy hating it/at least find it interesting. I'm curious, anyway. :P", "created": 1617301506.0, "author": "Pseutri", "score": 4, "replies": [{"body": "I got these from the library last summer and read a whole bunch of them.  They were...okay, but man, the characterization was **super** uneven.  The MC is either a pampered princess, or a deadly assassin, or a tortured survivor, or a giddy love-struck hypotenuse, or a talented genius, or in over her head, or....\n\nMy biggest gripe was the inconsistency of the characters.  There were some interesting bits, and the overall story wasn't so bad that I didn't finish the series, but yeah, it's definitely a hit and miss kind of series for me.", "created": 1617306644.0, "author": "Phyrkrakr", "score": 6, "replies": [], "commentid": "gt2f8fb"}, {"body": "It's definitely a guilty pleasure read for me. I like the world building more than the characters, but there are some interesting moments in there. It is heavy on the romance (well smut) and it's very tropey but they are easy reads. I love me a fairytale retelling though!", "created": 1617314724.0, "author": "adventuresinplot", "score": 2, "replies": [], "commentid": "gt2w973"}], "commentid": "gt246n7"}], "commentid": "gt1x4oc"}, {"body": "For the adventurous among you, *Unfinished Tales of N\u00famenor and Middle-Earth*, J.R.R. Tolkien, qualifies for hard mode. Also *The Swords of Night and Day*, David Gemmell, which is part of the Drenai saga. It's only the second (of two) books centering on Skilgannon the Damned, which is not the worst starting place.\n\nEasy mode:\n\n* Books 1 and 3 of The Lord of the Rings and *The Children of H\u00farin*, J.R.R. Tolkien\n* All(?) of The Mortal Instruments, Cassandra Clare\n* *The Nine Billion Names of God*, Arthur C. Clarke\n* *Furies of Calderon*, Jim Butcher\n* A couple (including the first) of The Wheel of Time, Robert Jordan\n* Most of D.J. MacHale's Pendragon\n* All of The Lost Years of Merlin, T.A. Barron (as originally published\u2014more recent publications have changed the titles)\n* Books 2, 5, and 6 of Stephen King's The Dark Tower\n* All but the first Amber book, Roger Zelazny\n* *The Dramaturges of Yan*, John Brunner\n* A couple more of the Drenai saga, David Gemmell\n* The main Black Jewels trilogy, Anne Bishop\n* Scott Lynch's Gentleman Bastard series, except for #2\n* *Den of Thieves*, David Chandler\n* Hyperion Cantos books 2 and 4, Dan Simmons\n* Most of Andrzej Sapkowski's The Witcher\n* *The Dirty Streets of Heaven*, Tad Williams\n* All of Marko Kloos's Frontlines novels\n* *Eye of Cat*, Roger Zelazny\n* *Lion of Macedon*, David Gemmell\n* Books 3, 4, and 9 of Malazan (Steven Erikson), in addition to book 1 already mentioned\n* Out of the Silent Planet, C.S. Lewis (note that this fits \\_\\_\\_ of \\_\\_\\_, but not \\[noun\\] of \\[noun\\])\n* If subtitles count, then the first three Symphony of Ages books (Elizabeth Haydon)\n\nAnd some more hard mode from my TBR:\n\n* Deverry 7 and 8, Katharine Kerr\n* *The Tree of Swords and Jewels* (Arafel 2), C.J. Cherryh\n* *The Years of Rice and Salt*, Kim Stanley Robinson\n* *Knight of Ghosts and Shadows* (Bedlam's Bard 1), Mercedes Lackey\n* *A Knight of Ghosts and Shadows*, Poul Anderson\n* *The Knight and Knave of Swords* (Fafhrd and the Grey Mouser 7), Fritz Leiber", "created": 1617385835.0, "author": "smartflutist661", "score": 2, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation Thread: **Roger Zelazny**](https://www.reddit.com/r/Fantasy/comments/5d96ap/author_appreciation_thread_roger_zelazny/?st=ivm72j5d&amp;sh=9ecd534a) from user u/CommodoreBelmont \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617385908.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt5v2md"}], "commentid": "gt5ux65"}, {"body": "**Shadow of the Gods**  (will also fulfill the 2021 square if you prefer to use it for that)\n\n**Stone of Farewell**\n\n**All 3  of the Gods of Blood and Powder series** (Sins of Empire, Wrath of Empire, Blood of Empire)", "created": 1617309402.0, "author": "Forsaken__Potato", "score": 2, "replies": [], "commentid": "gt2l65s"}, {"body": "Some hard mode from my list of read books. \n\n**City of Saints and Madmen** by Jeff VanderMeer\n\n**The Ballad of Songbirds and Snakes** by Suzanne Collins\n\n**A Song of Wraiths and Ruin** by Roseanne A Brown\n\n**Song of Blood &amp; Stone** by L Penelope", "created": 1617309938.0, "author": "Dsnake1", "score": 5, "replies": [{"body": "Any favorites or ones you'd especially recommend from this list?", "created": 1617426690.0, "author": "Tigrari", "score": 2, "replies": [{"body": "Vandermeer's book is pretty awesome, but it's weird. Like New Weird, really. It's a collection of short stories and reference materials all centered on the fungal city Ambergris, from travel guides to bibliographies to short stories. It's the first in the Ambergris trilogy, and the second book is an afterword to one of the reference materials in the first book written by the sister of the author of the reference material that's been edited by the brother, so the original author of the reference material. And the third book is a noir-style mystery thriller set a hundred years later. So very weird, but also an insanely good trilogy. \n\nAlso, I really liked The Ballad of Songbirds and Snakes, but it's a controversial book and also a prequel that should be read after the Hunger Games trilogy.", "created": 1617479400.0, "author": "Dsnake1", "score": 1, "replies": [], "commentid": "gt9z0gs"}], "commentid": "gt7v5bp"}], "commentid": "gt2mbjz"}], "commentid": "gt1pa0a"}, {"body": "**First Contact** \\- From Wikipedia:  Science Fiction about the first meeting between humans and extraterrestrial life, or of any sentient species' first encounter with another one, given they are from different planets or natural satellites. **HARD MODE:** War does not break out as a result of contact.", "created": 1617294845.0, "author": "kjmichaels", "score": 8, "replies": [{"body": "A Desolation Called Peace fits (I guess if you squint A Memory called Empire also fits but the second much more **about**  the first contact)", "created": 1617297298.0, "author": "daavor", "score": 30, "replies": [{"body": "oh this is perfect it was going to be my next read anyways!", "created": 1617301617.0, "author": "EmpressRey", "score": 1, "replies": [], "commentid": "gt24f6j"}, {"body": "Oh excellent, this is in my immediate TBR. I guess A Memory Called Empire could count but it's not as much about that.", "created": 1617298200.0, "author": "Krilllian", "score": 2, "replies": [], "commentid": "gt1wrqm"}, {"body": "I'm not sure how to ask this without spoilers, but is it Hard Mode?", "created": 1617298997.0, "author": "CJGibson", "score": 1, "replies": [{"body": "AMCE spoilers but not ADCP &gt;!no, there's a declared war at the end of the first book!&lt;", "created": 1617299353.0, "author": "daavor", "score": 5, "replies": [{"body": "Ha I have read AMCE already, I guess I just didn't remember that bit.", "created": 1617299477.0, "author": "CJGibson", "score": 2, "replies": [], "commentid": "gt1zsxr"}], "commentid": "gt1ziav"}], "commentid": "gt1yntb"}], "commentid": "gt1uqb5"}, {"body": "**Semisosis** by Sue Burke\n\n**Children of Time (H)** by Adrian Tchaikovsky\n\n**Oryx and Crake** by Margaret Atwood (lots of content warnings)\n\n**Speaker for the Dead** (#2 Ender's Game) by Orson Scott Card\n\n**The Last Astronaut** by David Wellington\n\n**The Sparrow** by Mary Doria Russell (please read this so you can tell me how amazing it is and we can talk about it incessantly)\n\n**The Three-Body Problem** by Cixin Liu\n\n**The Left Hand of Darkness (H)** by Ursula K. Le Guin", "created": 1617302902.0, "author": "fuckit_sowhat", "score": 23, "replies": [{"body": "Qualifying for HM just confirms The Sparrow.", "created": 1617306199.0, "author": "tarvolon", "score": 4, "replies": [], "commentid": "gt2e8sg"}, {"body": "The Sparrow is such an excellent book. For those wary of cheesy first contact stories, I beg you to read this book. Beautiful and devastating.", "created": 1617317453.0, "author": "hellodahly", "score": 5, "replies": [], "commentid": "gt31jm2"}, {"body": "I\u2019m so happy to see so many people recommending The Sparrow! It\u2019s my favorite", "created": 1617326012.0, "author": "chemnerd29", "score": 4, "replies": [], "commentid": "gt3gwvh"}, {"body": "does The Sparrow qualify for Hard Mode though?  I kind of feel like it doesn't.  &gt;!A war breaks out on Rakhat at the end of the first book.!&lt;\n\n(really great book though)", "created": 1617325120.0, "author": "Vermilion-red", "score": 3, "replies": [{"body": "I know there was some violence but I didn't think it was a war, more like a little scuffle, but I might be remembering it wrong. I have a terrible memory for book details.", "created": 1617325897.0, "author": "fuckit_sowhat", "score": 2, "replies": [{"body": "Yeah, I think it\u2019s a &gt;!full-out civil war.   Idk if that\u2019s even a big enough word for it.   Sentient herd-species turning on their their carnivorous overlords and hunting them to near-extinction.!&lt;\n\nI made the mistake of reading the sequel, and I\u2019m pretty sure.   It was in the end of the first one too, just more ambiguously.  Potential conclusion:   Sandoz was there to kick it off.", "created": 1617331532.0, "author": "Vermilion-red", "score": 3, "replies": [{"body": "I'll rely on your memory. Thank you!\n\nWhat didn't you like about the sequel? I bought it, but I'm hesitant to start. I'm worried if it's bad it'll cloud my feelings about the first book.", "created": 1617341751.0, "author": "fuckit_sowhat", "score": 2, "replies": [{"body": "Um, this is just personal opinion, but I feel like a lot of the reason that the first book worked so well, in spite of being so overtly religious in a genre that isn\u2019t really friendly to that is because it posed a question instead of offering an answer.   \u2018Why does god allow the suffering of people that he supposedly loves?\u2019   And it\u2019s a big, complicated, question with a lot of emotion tied up in it, and so it *works*.   But it\u2019s also not the sort of question that you can really have a satisfactory answer to.\n\nThe second book goes back and tries to provide an answer to that question. Trying to justify the actions of god is contrary to everything that the first book was doing, and what made the first book so interesting and palatable to a secular audience (me).   And I get that it\u2019s a duopoly, and that they\u2019re allowed to be different, and posing it as question and answer is a legit structural choice, but... still.  Throw in a pretty questionable depiction of autism, and I was out.", "created": 1617370498.0, "author": "Vermilion-red", "score": 4, "replies": [{"body": "Well now I\u2019m interested to read it just to see if my feelings line up with yours, lol. I actually really like religion in sci-fi, but trying to justify god allowing horrible things to happen? Maybe not so much.", "created": 1617379906.0, "author": "fuckit_sowhat", "score": 2, "replies": [{"body": "I mean, lots of people really like it and don't have a problem with it at all.  So happy reading, and I hope that your experience of it is better than mine.", "created": 1617383832.0, "author": "Vermilion-red", "score": 2, "replies": [], "commentid": "gt5quz5"}], "commentid": "gt5ivar"}], "commentid": "gt50xdi"}], "commentid": "gt44zfm"}], "commentid": "gt3qbt3"}], "commentid": "gt3gpsk"}, {"body": "I think it depends on whether the intent of the square is &gt;!war between the first contact species!&lt; or &gt;!just war in general.!&lt; Definitely hard mode for the first, definitely not for the second.", "created": 1617391446.0, "author": "smartflutist661", "score": 1, "replies": [], "commentid": "gt663z0"}], "commentid": "gt3fe1a"}, {"body": "Yes yes yes to The Sparrow and it\u2019s sequel (that is full of great twists). Best first contact book I\u2019ve read! You\u2019ll be super disappointed that the author doesn\u2019t have any more science fiction though.", "created": 1617306100.0, "author": "frigidbarrell", "score": 4, "replies": [], "commentid": "gt2e0d7"}, {"body": "Read *The Sparrow* last year (for bingo, actually) and wrote a disturbingly-long review (for me) about it, it was that good. Easily in my top 10.", "created": 1617314446.0, "author": "smartflutist661", "score": 4, "replies": [], "commentid": "gt2vp6n"}], "commentid": "gt274gc"}, {"body": "**Space Opera** by Catherynne M Valente is a hilarious and poignant take on the first contact genre. The premise is to be considered sentient, a chosen representative of humans has to compete in intergalactic Eurovision type contest. \n\nIt\u2019s a favorite of mine and the audiobook is particularly great (there isn\u2019t any singing in it, which I thought there might be).", "created": 1617302925.0, "author": "BombusWanderus", "score": 17, "replies": [{"body": "A sequel is coming, too!  This is probably going to be my comfort read, honestly, because it's just so, so good.  I re-read it like four times in six months when it first came out, just because it helps to be reminded that life is beautiful and life is stupid.", "created": 1617306115.0, "author": "Phyrkrakr", "score": 9, "replies": [], "commentid": "gt2e1mb"}, {"body": "Question: Sounds fantastic and I think it will be my read. From the premise it seems like it does, but... does it fit HM?", "created": 1618017180.0, "author": "sad_butterfly_tattoo", "score": 2, "replies": [{"body": "&gt;!yes it does fit hard mode!&lt; spoiler tag in case anyone doesn\u2019t want to know. It\u2019s not quite war on the line as much as species annihilation (is that war? seems overly one sided)", "created": 1618019525.0, "author": "BombusWanderus", "score": 1, "replies": [{"body": "Ohh thanks!", "created": 1618077060.0, "author": "sad_butterfly_tattoo", "score": 2, "replies": [], "commentid": "gu2bvug"}], "commentid": "gu00kh2"}], "commentid": "gtzwc9j"}], "commentid": "gt276cf"}, {"body": "for a fantasy one by Raymond E. Feist, *The Riftwar Saga*", "created": 1617297730.0, "author": "flavio321", "score": 15, "replies": [], "commentid": "gt1vo2b"}, {"body": "Would Children of Time / Children of Ruin possibly count?", "created": 1617298500.0, "author": "colorsneverfaded", "score": 11, "replies": [{"body": "It's actually very slightly arguable if Children of time should, although that's me being very pendantic!\n\nChildren of ruin is I think unequivocal.", "created": 1617305594.0, "author": "qwertilot", "score": 1, "replies": [], "commentid": "gt2cwzd"}, {"body": "Children of Time definitely counts. Read it last year.", "created": 1617300116.0, "author": "DrMDQ", "score": 6, "replies": [{"body": "Does it count for hard mode?", "created": 1617302243.0, "author": "Udy_Kumra", "score": 2, "replies": [{"body": "Personally I would say &gt;!no to hard mode!&lt; but it depends on your definition of \u201cwar\u201d. &gt;!There is definitely one major space battle between the humans and the spiders, but the spiders are trying to save the humans instead of kill them.!&lt;", "created": 1617302537.0, "author": "DrMDQ", "score": 5, "replies": [{"body": "Hm okay, that might not count, but I'll definitely read it anyway since I have it.", "created": 1617303033.0, "author": "Udy_Kumra", "score": 1, "replies": [{"body": "It would work for hard mode chapter titles if you want to still use it somewhere for hard mode.", "created": 1617369453.0, "author": "Asthenic28", "score": 3, "replies": [{"body": "Oh awesome! I was gonna put the third Wheel of Time book there but I'll put this instead so I can make sure I read it lol", "created": 1617369763.0, "author": "Udy_Kumra", "score": 1, "replies": [], "commentid": "gt4zp54"}], "commentid": "gt4z73b"}, {"body": "It was one of my favorite books last year. Would recommend it even if you are trying to do an all hard-mode bingo!", "created": 1617303234.0, "author": "DrMDQ", "score": 1, "replies": [], "commentid": "gt27uck"}], "commentid": "gt27elz"}], "commentid": "gt26c9p"}], "commentid": "gt25q0v"}, {"body": "I just finished CoT 3 days ago and it definitely fits for regular mode.", "created": 1617305746.0, "author": "tigrrbaby", "score": 1, "replies": [], "commentid": "gt2d8om"}], "commentid": "gt217xh"}], "commentid": "gt1xh96"}, {"body": "Axiom's End by Lindsay Ellis; I think it would fit hard mode (also fits debut author)", "created": 1617300139.0, "author": "gracefruits", "score": 11, "replies": [{"body": "I loved this book. The sequel should be coming soon.", "created": 1617371831.0, "author": "WWTPeng", "score": 1, "replies": [], "commentid": "gt5383l"}, {"body": "I read this for bingo last year in the debut author square and it depends on how the 'war' prompt is interpreted. If you remember, &gt;!there is conflict with the aliens coming back to claim their own and attacking several government locations!&lt;, but it's not on par with say _Independence Day_.", "created": 1617452767.0, "author": "bubblegumgills", "score": 1, "replies": [], "commentid": "gt8mbbg"}], "commentid": "gt219q4"}, {"body": "Dawn (Xenogenesis #1) by Octavia Butler meets this one and is incredible. I think would work for hard mode but it's been awhile since I read it.", "created": 1617302584.0, "author": "_viciouscirce_", "score": 11, "replies": [{"body": "Yes, definitely hard mode. And also agree - it's excellent and thought provoking.", "created": 1617404029.0, "author": "Moonlitgrey", "score": 5, "replies": [{"body": "Perfect! This was already on my tbr", "created": 1617409688.0, "author": "magykalfirefox", "score": 3, "replies": [], "commentid": "gt74bpc"}], "commentid": "gt6uamm"}], "commentid": "gt26ftk"}, {"body": "**The Lesson** by Cadwell Turnbull HM - aliens land in the Virgin Islands\n\n**Dawn** by Octavia Butler HM", "created": 1617299000.0, "author": "Dianthaa", "score": 9, "replies": [], "commentid": "gt1yo1e"}, {"body": "An Absolutely Remarkable Thing by Hank Green fits and I think it would count as hard mode - there is some conflict, but not war", "created": 1617299506.0, "author": "Asheweaver", "score": 9, "replies": [{"body": "I read this last year and really enjoyed it.  Some of the media/culture/internet stuff hit *very* close to home, though.", "created": 1617306221.0, "author": "Phyrkrakr", "score": 1, "replies": [], "commentid": "gt2eaoq"}], "commentid": "gt1zvcm"}, {"body": "* **The Sparrow** by Mary Doria Russell   \n* **Ring of Swords** by Eleanor Arnason (...I think)", "created": 1617326146.0, "author": "improperly_paranoid", "score": 3, "replies": [], "commentid": "gt3h4zm"}, {"body": "[**The Seep**](https://www.goodreads.com/book/show/45448133-the-seep?ac=1&amp;from_search=true&amp;qid=d5brc7XI9d&amp;rank=1) by Chana Porter is *perfect* for this on HM, also works for\u2014\n\n* Trans character (HM)\n* Debut Novel\n* New to you author (I would guess, since it's her only novel)\n\nA ton of humor, and some really interesting and new takes on the idea of a utopia. Does get dark at times, because part of that new take is \"how much is a person allowed to self-destruct out of justifiable misery in a true utopia?\"", "created": 1617319156.0, "author": "Dyed_Productions", "score": 7, "replies": [], "commentid": "gt34qdo"}, {"body": "**The Quiet Invasion** by Sarah Zettel is fantastic (mode is a spoiler but if you want to be spoiled &gt;!hard mode!&lt; )", "created": 1617297393.0, "author": "tarvolon", "score": 4, "replies": [], "commentid": "gt1uxsm"}, {"body": "i haven't read it yet, except for a 25 page excerpt but The Employees might qualify for this. It's on the International Booker Long List for 2021 and while not available in English in North America it is available on Kindle through the UK amazon site. I don't have the ISBN with me but can list it when I get home tonight.", "created": 1617296874.0, "author": "entwined_Rhino", "score": 2, "replies": [], "commentid": "gt1tsm1"}, {"body": "**Blindsight** Peter Watts. If you don\u2019t mind dense, technical, and very high tech, this manages at the same time to be readable all the way through, and nothing\u2019s ever really blown my mind like it! &gt;!I\u2019m claiming this for hard mode (I could make a prima facie argument the other way but it wouldn\u2019t stand up)!&lt;", "created": 1617301405.0, "author": "akb74", "score": 6, "replies": [], "commentid": "gt23z15"}, {"body": "**The Sparrow by Mary Doria Russell**. One of my absolute favorite books and maybe my reread.   A thoughtful exploration of religion, love (both platonic and otherwise), guilt, and truth. A rare book that made me both laugh out loud and cry. \n\nGoodreads blurb:\n\nIn 2019, humanity finally finds proof of extraterrestrial life when a listening post in Puerto Rico picks up exquisite singing from a planet that will come to be known as Rakhat. While United Nations diplomats endlessly debate a possible first contact mission, the Society of Jesus quietly organizes an eight-person scientific expedition of its own. What the Jesuits find is a world so beyond comprehension that it will lead them to question what it means to be \"human\".", "created": 1617311554.0, "author": "hellodahly", "score": 5, "replies": [{"body": "Seconding this one, I read it for the first time last year and it's such a good story", "created": 1617315186.0, "author": "Hollandrock", "score": 2, "replies": [], "commentid": "gt2x5td"}, {"body": "Is it antagonistic toward religion?", "created": 1617335953.0, "author": "theonlyAdelas", "score": 1, "replies": [{"body": "No, I wouldn't say so. The character who is the main focus of the story is going through an intense crisis of faith, so there's that, but don't feel like the book overall is pushing anyone in any sort of direction and there are a variety of beliefs and non-beliefs amongst the characters. \n\nWithout spoiling things, it varies between flashbacks and current events, and of the biggest things (and mysteries) is the stark difference between the charming, lighthearted priest in the flashbacks and the broken man in the present. The book isn't critical of those who have faith, just examining someone who lost his.", "created": 1617337670.0, "author": "hellodahly", "score": 5, "replies": [{"body": "Thank you for taking the time to answer thoughtfully :)\n\nPutting it on my TBR now.", "created": 1617383845.0, "author": "theonlyAdelas", "score": 3, "replies": [{"body": "Of course! It's one of my favorite books. I hope you enjoy it :)", "created": 1617383928.0, "author": "hellodahly", "score": 1, "replies": [], "commentid": "gt5r1wb"}], "commentid": "gt5qvwf"}], "commentid": "gt3zntj"}], "commentid": "gt3x7qe"}], "commentid": "gt2ps0r"}, {"body": "Remnant Population, Elizabeth Moon (pretty sure it's HM - been ages since I read it though)", "created": 1617298417.0, "author": "balletrat", "score": 6, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation thread: **Elizabeth Moon**, veteran author of Fantasy and Sci-Fi](https://www.reddit.com/r/Fantasy/comments/6x54cu/author_appreciation_thread_elizabeth_moon_veteran/?utm_content=comments&amp;utm_medium=hot&amp;utm_source=reddit&amp;utm_name=Fantasy) from user u/Tigrari \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617298524.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt1xjad"}, {"body": "Hi! Thank you for recommending Remnant Population. I just finished it (like 20 minutes ago) and happily added it to my bingo board. Absolutely dug the story and aim to seek out more stories about ornery old women\u2014and happily &gt;!it fits hard mode &gt;;) !&lt;", "created": 1623864480.0, "author": "Mahalia2121", "score": 1, "replies": [{"body": "So glad you liked it! Moon has a lot of good ones - I recommend Hunting Party and sequels for more ornery older ladies", "created": 1623870949.0, "author": "balletrat", "score": 1, "replies": [], "commentid": "h203svy"}], "commentid": "h1zoqfy"}], "commentid": "gt1xa58"}, {"body": "I really enjoyed the award-nominated **Eifelheim** by Michael Flynn which is a touching first contact story between grasshopper-like aliens and a medieval German town.", "created": 1617346927.0, "author": "trevor_the_sloth", "score": 1, "replies": [], "commentid": "gt4arkt"}, {"body": "*A Darkling Sea* by James L. Cambias. It's been a while but I'm pretty sure it qualifies for hard mode (there's political conflict at the end, but I think no war). It's about scientists making accidental first contact with, well, scientists on a world they're studying that's believed not to hold intelligent life.", "created": 1617298818.0, "author": "sophia_s", "score": 3, "replies": [], "commentid": "gt1y8td"}, {"body": "An anthology called [First Encounters](https://www.amazon.com/dp/B08NKDN84Q) features a few short stories that involve humans meeting extraterrestrials for the first time. You'd be able to pick from three or four of the stories to count for this square.", "created": 1617299883.0, "author": "Vista_McDowall", "score": 5, "replies": [], "commentid": "gt20ppe"}, {"body": "Contact by Carl Sagan fits, and would qualify for Hard Mode", "created": 1623403963.0, "author": "dreaming_coyote", "score": 2, "replies": [], "commentid": "h1dus9y"}, {"body": "**To Sleep in a Sea of Stars** by Christopher Paolini\n\n**Skyward** by Brandon Sanderson is kind of pushing the rules a bit, but could conceivably fit and *technically* fits hard mode.", "created": 1617301343.0, "author": "lightning_fire", "score": 6, "replies": [{"body": "Does **To Sleep in a Sea of Start** count for HM? I'm about 300 pages in and I'm thinking probably not...", "created": 1621865757.0, "author": "raix-corvus", "score": 1, "replies": [{"body": "It does not", "created": 1621870805.0, "author": "lightning_fire", "score": 2, "replies": [], "commentid": "gza7csq"}], "commentid": "gz9wk5c"}], "commentid": "gt23uaw"}, {"body": "[The Kraken Wakes](https://www.goodreads.com/book/show/91092.The_Kraken_Wakes?ac=1&amp;from_search=true&amp;qid=eMdSjCFESR&amp;rank=1) \\- John Wyndham (not hard mode) (probably a few others of his would qualify here)", "created": 1617297551.0, "author": "Krilllian", "score": 3, "replies": [], "commentid": "gt1v9yi"}, {"body": "Late to the party but Project Hail Mary by Andy Weir fits hard mode.", "created": 1624479255.0, "author": "youki_hi", "score": 1, "replies": [], "commentid": "h2t2iej"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares --- there was only one for this square, though, and it is [Snowborn](https://indiestorygeek.com/story/861) by Larema Dixon.", "created": 1622828925.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0lcajz"}, {"body": "**Year Zero** by Robert Reid, qualifies for HM", "created": 1623175143.0, "author": "Megtalallak", "score": 1, "replies": [], "commentid": "h1203ee"}, {"body": "**The Quiet Invasion** by Sarah Zettel is perfect for this square and so good.", "created": 1617296344.0, "author": "HeLiBeB", "score": 4, "replies": [], "commentid": "gt1sn21"}, {"body": "I assume this is a SF or Fantasy first contact.", "created": 1617316421.0, "author": "Kerney7", "score": -3, "replies": [], "commentid": "gt2zkji"}, {"body": "CJ Cherryh features a lot of First Contact ... Some HM and some not ...\n\nForeigner (1st book and I think the 5th?)\n\nPride of Chanur\n\nCuckoo's Egg", "created": 1617423676.0, "author": "apcymru", "score": 1, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [**CJ Cherryh**: Author Appreciation: C.J. Cherryh](https://www.reddit.com/r/Fantasy/comments/5h2aby/author_appreciation_cj_cherryh/) from user u/KristaDBall \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617423712.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt7r68l"}], "commentid": "gt7r4cr"}, {"body": "Rosewater by Tade Thompson  is a unique take on a first contact tale. And I think it works for hard mode (there's a turf war between warlords, but it's not because of the aliens, iirc)", "created": 1617313853.0, "author": "Cat_Yogi", "score": 3, "replies": [], "commentid": "gt2uiee"}, {"body": "I Want The Stars by Tom Purdom fits for hard mode! It was recently republished by Journey Press. We're a small, independent press; full disclosure, I'm the owner of it.", "created": 1617300905.0, "author": "GideonMarcus", "score": 1, "replies": [], "commentid": "gt22wyb"}, {"body": "Bank's Excession does this, and could definitely be argued for hard mode.\n\nCherryh mostly does later than first contact but there's something deep into the foreigner sequence which would absolutely fit. Definitely hard mode.\n\nAbsurd though as it's double figure books in :)\n\nSerpent's reach or 40thousand in Gehena perhaps.", "created": 1617307108.0, "author": "qwertilot", "score": 4, "replies": [{"body": "Also, Pride of Chanur is first contact, as far as Cherryh novels go!", "created": 1617325868.0, "author": "kleos_aphthiton", "score": 3, "replies": [], "commentid": "gt3go08"}], "commentid": "gt2g88p"}, {"body": "Calculating god - Robert j. Sawyer", "created": 1617305626.0, "author": "mredgee", "score": 1, "replies": [], "commentid": "gt2czfc"}, {"body": "**Project Hail Mary** by Andy Weir\n\n&gt;!This would also qualify for Hard Mode in my opinion. Yes there is an invasive alien species but no war actually breaks out and the sentient alien species that is encountered is friendly. Also an excellent book. I loved it.!&lt;", "created": 1622432709.0, "author": "SoonerK", "score": 4, "replies": [], "commentid": "h01ok7v"}, {"body": "This may expand, but two classics that immediately come to mind:\n\n* *Jem*, Frederik Pohl. Not really *war*, but I'm not sure I'd count it for hard mode.\n* *The Mote in God's Eye*, Larry Niven. Probably hard mode? &gt;!The whole book is about preventing war, and they do succeed (as of the end).!&lt;\n\nExpanding, as promised. Hard mode:\n\n* *Ringworld*, Larry Niven. First contact with the Ringworld.\n* Apprentice Adept, Piers Anthony. I believe this is first contact between the parallel worlds? Could be wrong, though.\n\nEasy mode:\n\n* *The Forever War*, Joe Haldeman. I believe first contact is the inciting incident to the titular war. Highly recommend.\n* Worldwar, Harry Turtledove. I think it happens in book 1... but could be book 2.\n* A number of Ian Douglas's military SF series deal with first contact.\n* Destroyermen, Taylor Anderson. Military SF, but first contact is with a parallel world.\n* Old Man's War (John Scalzi) might have a first contact? There are lots of aliens, I think at least one of them is met for the first time during the book.", "created": 1617320763.0, "author": "smartflutist661", "score": 1, "replies": [], "commentid": "gt37o4c"}, {"body": "What is the hive mind's take on [Roadside Picnic](https://www.goodreads.com/book/show/17158490-roadside-picnic)? I've been wanting to read this one for a while. I know there are artifacts, but I'm not sure if there's an actual first contact experience.", "created": 1617390021.0, "author": "jddennis", "score": 2, "replies": [], "commentid": "gt639pa"}, {"body": "From my TBR-list, if you want to be very obvious about it. First Contact by Michael R. Hicks (based on description it's not HM)", "created": 1617303726.0, "author": "Myamusen", "score": 1, "replies": [], "commentid": "gt28wgv"}, {"body": "**Herland by Charlotte Perkins Gilman -**An interesting look at an early utopia SFF offering. A good option for someone wanting a fantasy \"real world hidden peoples\" option.\n\n&amp;#x200B;\n\nWarnings for racial slurs/comments, attempt rape (off page)", "created": 1617313458.0, "author": "KristaDBall", "score": 2, "replies": [{"body": "Sadly wouldn't count as they are not from separate planets/satellites.", "created": 1617322540.0, "author": "MedusasRockGarden", "score": 2, "replies": [{"body": "I considered Herland to be under natural satellite, with their ability to hide themselves, but ok I see your point, too.", "created": 1617322978.0, "author": "KristaDBall", "score": 1, "replies": [], "commentid": "gt3bmxo"}], "commentid": "gt3avad"}], "commentid": "gt2tplx"}, {"body": "I think the Expanse would work, at least the early books would. Not for hard mode though.", "created": 1617299311.0, "author": "Fin216", "score": 2, "replies": [{"body": "I think **Leviathan Wakes** can count towards HM because... &gt;!the war is not between humans and the alien entity.!&lt;", "created": 1621865888.0, "author": "raix-corvus", "score": 1, "replies": [], "commentid": "gz9wtt0"}], "commentid": "gt1zenj"}, {"body": "The Bobiverse books all fit. There are several first contacts, some peaceful and others not so much. I can\u2019t remember if any of the first three are hard mode. The fourth you can make a case for both hard mode and not, but it\u2019s impossible to do without massive spoilers. \n\nAnyway, they\u2019re pretty fun and fast, and a food choice if you don\u2019t want heavy scifi.", "created": 1617301293.0, "author": "Fryktelig_variant", "score": 5, "replies": [{"body": "Came to try to suggest this series as well. Lots of pop culture references like ready player one. If anyone is into that. I do believe that the first book should be HM &gt;!since they don\u2019t actually come in contact with the others just yet.!&lt; Book 4 was a little meh. But I do love this series.", "created": 1617850336.0, "author": "MaNurse", "score": 1, "replies": [], "commentid": "gtrlcy3"}], "commentid": "gt23qi8"}, {"body": "I think most of Peter F Hamilton's books would count, but his latest series is the Salvation Sequence, which definitely has first contact. Buuuut I wouldn't count on it being okay for hard mode.", "created": 1617311190.0, "author": "MaaDFoXX", "score": 2, "replies": [], "commentid": "gt2p0j8"}, {"body": "Quite a few Anne McCaffrey books would work for this.  \n\n* Nimisha's Ship.\n* The City Who Fought.\n* The Ship Who Won (I think it's this one anyway, with the &gt;!globefrogs!&lt;).\n* Restoree (if person abducted by aliens counts).\n* Damia... and maybe Damia's Children.\n* The Cattenni Sequence.", "created": 1617322872.0, "author": "MedusasRockGarden", "score": 2, "replies": [], "commentid": "gt3bgcc"}, {"body": "Little Fuzzy by H. Beam Piper is a delightful short read.  It is also old enough that it is free on kindle and I'm sure other services. Qualifies for Hard Mode.", "created": 1617322503.0, "author": "duklgio", "score": 4, "replies": [], "commentid": "gt3asxr"}], "commentid": "gt1pace"}, {"body": "**Debut Author** \\- An author's debut novel or novella. **HARD MODE:** The author has participated in an AMA. [AMA List linked here.](https://www.reddit.com/r/Fantasy/wiki/amalinks)", "created": 1617294854.0, "author": "kjmichaels", "score": 7, "replies": [{"body": "Shouldn't this be Author Debut instead of Debut Author?", "created": 1617336974.0, "author": "theonlyAdelas", "score": 23, "replies": [], "commentid": "gt3yout"}, {"body": "The Councillor by E. J. Beaton (HM)\n\nThe Mask of Mirrors by M.A Carrick (HM)\n\nBone Shard Daughter by Andrea Stewart (HM)\n\nFrom Unseen Fire by Cass Morris (HM)\n\nThe Blade Itself by Joe Abercrombie (HM)\n\nRaybearer by Jordan Ifueko\n\nMem by Bethany C. Morrow\n\nTheonite: Planet Adyn by M.L. Wang\n\nHall of Smoke by H.M. Long\n\nWinter's Orbit by Everina Maxwell \n\nThe Unbroken by C.L Clarke \n\nThe Witch's Heart by Genevieve Gornichec", "created": 1617303692.0, "author": "Arette", "score": 8, "replies": [{"body": "Sword of Kaigen doesn't work, does it? She wrote two other books before that one.", "created": 1617309213.0, "author": "KingWapo", "score": 5, "replies": [{"body": "I didn't realize that the book wasn't her debut. Will edit my post.", "created": 1617311576.0, "author": "Arette", "score": 2, "replies": [], "commentid": "gt2ptmf"}], "commentid": "gt2krbe"}, {"body": "A Song Below Water was Morrow's YA debut, but her first novel (also SFF) was Mem.", "created": 1617326132.0, "author": "kleos_aphthiton", "score": 2, "replies": [{"body": "Thanks, I will correct Morrow's information to the post too.", "created": 1617354312.0, "author": "Arette", "score": 2, "replies": [], "commentid": "gt4hqi3"}], "commentid": "gt3h44c"}, {"body": "Did Alix Harrow do an AMA? I don't see her name on the list.", "created": 1617580325.0, "author": "cranial13", "score": 2, "replies": [{"body": "You're correct about Alix Harrow. Her book has been a book club book but she hasn't done an AMA. Will edit her out.", "created": 1617609121.0, "author": "Arette", "score": 1, "replies": [{"body": "Alix Harrow did an AMA six months ago.\n\nhttps://www.reddit.com/r/Fantasy/comments/jbo2ry/im_alix_e_harrow_author_of_the_once_and_future/?ref=share&amp;ref_source=link\n\nSomeone needs to correct the \"list\".", "created": 1618596628.0, "author": "BohemianPeasant", "score": 4, "replies": [], "commentid": "gur2kwi"}], "commentid": "gtfjykj"}], "commentid": "gteduzr"}], "commentid": "gt28tyb"}, {"body": "u/barb4ry1 has been out here stanning **The Nine** by Tracy Townsend for ages now, and it appears to fit hard mode.", "created": 1617306656.0, "author": "tarvolon", "score": 3, "replies": [{"body": "Yes, it does and it's great :)", "created": 1617310397.0, "author": "barb4ry1", "score": 2, "replies": [], "commentid": "gt2nb7p"}], "commentid": "gt2f9e3"}, {"body": "* [**Gideon the Ninth**](https://www.goodreads.com/book/show/42036538) by Tamsyn Muir (HM)\n* [**Ancillary Justice**](https://www.goodreads.com/book/show/17333324) by Ann Leckie\n* [**The Witch's Diary**](https://www.goodreads.com/book/show/55345505) by Rebecca Brae\n* [**The Empress of Salt and Fortune**](https://www.goodreads.com/book/show/51190882) by Nghi Vo\n* [**The Luminous Dead**](https://www.goodreads.com/book/show/36117102) by Caitlin Starling\n* [**Sisters of the Vast Black**](https://www.goodreads.com/book/show/44581558) by Lina Rather\n* [**The Thirteenth Tale**](https://www.goodreads.com/book/show/40440) by Diane Setterfield\n* [**Interview with the Vampire**](https://www.goodreads.com/book/show/43763) by Anne Rice", "created": 1617317844.0, "author": "Amarthien", "score": 6, "replies": [], "commentid": "gt32a87"}, {"body": "**The First Sister** by Linden A. Lewis", "created": 1617303212.0, "author": "lightning_fire", "score": 3, "replies": [], "commentid": "gt27so8"}, {"body": "Pretty sure Storm Front was Jim Butcher's debut for anyone looking to get into Dresden. If so, hard mode too.", "created": 1618791892.0, "author": "bmullberry", "score": 1, "replies": [], "commentid": "gv107pm"}, {"body": "I'm going to go ahead and pimp my book out here, because why not? My debut novel, [The Lantern-Lit City](https://www.goodreads.com/book/show/53209353-the-lantern-lit-city)*,* is an epic fantasy that follows multiple perspectives.", "created": 1617300097.0, "author": "Vista_McDowall", "score": 7, "replies": [{"body": "Oh hey, I was eyeing your book during the self published sale from a couple months back. Love seeing authors around here.", "created": 1617303960.0, "author": "XxNerdAtHeartxX", "score": 5, "replies": [{"body": "I hope you give it a shot!", "created": 1617305770.0, "author": "Vista_McDowall", "score": 4, "replies": [], "commentid": "gt2dai0"}], "commentid": "gt29eiz"}], "commentid": "gt216ej"}, {"body": "My choice this year (hard mode): **The Vagrant** by Peter Newman.", "created": 1620823923.0, "author": "rickymonster", "score": 1, "replies": [], "commentid": "gxuiumk"}, {"body": "My first book, A Demon in the Desert, which counts as of Tuesday. Just in time for the new card haha.", "created": 1617305923.0, "author": "ashearmstrong", "score": 5, "replies": [], "commentid": "gt2dmcv"}, {"body": "My novel ***Construct*** was my debut back in 2014, and I've participated in an AMA here in on r/Fantasy so it qualifies for Hard Mode!\n\nOne of my favorite debut novels in a long time is Arkady Martine's ***A Memory Called Empire***. Also check out Becky Chambers's ***The Long Way to a Small Angry Planet*** and Alex White's ***A Big Ship at the Edge of the Universe***.", "created": 1617309383.0, "author": "Luke_Matthews", "score": 1, "replies": [], "commentid": "gt2l4pe"}, {"body": "Hi, I'm a **Debut Author**. My debut novel Doomsayer Prince is an epic fantasy.\n\nI hope you have a great 2021 Fantasy Bingo experience :-)\n\n[Buy Doomsayer Prince](https://runesnielsen.com/availablefrom). It's only 99 cents while on sale from June 1-7th.\n\n[The reviews so far](https://runesnielsen.com/reviews-for-doomsayer-prince). Thank you ever so much if you will review it :-)", "created": 1622646302.0, "author": "Rune_S_Nielsen", "score": 1, "replies": [], "commentid": "h0bk5pm"}, {"body": "[*Winter's Orbit*](https://www.goodreads.com/book/show/53205912-winter-s-orbit) by Everina Maxwell", "created": 1617301236.0, "author": "WombatHats", "score": 2, "replies": [], "commentid": "gt23m44"}, {"body": "Probably most on this sub have read it, but I've been thinking of reading Magician **-** Raymond E. Feist for this (I have the UK revised edition so it's just one book). I've been meaning to read it for years.", "created": 1617585064.0, "author": "Frvrf", "score": 2, "replies": [], "commentid": "gtem866"}, {"body": "What about **Rage of Dragons** by Evan Winter?", "created": 1617505874.0, "author": "shadowkat79", "score": 3, "replies": [], "commentid": "gtb8nrx"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\nThe author debuts I have listed are:\n\nLady's Vago's Malediction by AKM Beach\n\nA Change of Blood by G. P. Gabriel\n\nThe Stars Within by Lena Alison Knight\n\nWindborn by Alex Bradshaw\n\nDoomsayer Prince by Rune S. Nielsen\n\nEyes Last Seen Dying by Colin Adams\n\nWindward by S. Kaeth\n\nBy the Pact by Joanna Maciejewska\n\nStone &amp; Shield by Thomas J Devens\n\nDeath by Miracle by Fowler Brown\n\nDive: Endless Skies by Chris Reign\n\nDark Apprentice by Val Neil", "created": 1622829488.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0ldl13"}, {"body": "Hello! James G. Robertson here.\n\nMy debut novel, Afterworld, has won a few small awards and is getting a second edition this summer along with an audiobook. Feel free to check out it!", "created": 1617330000.0, "author": "ThrowBackFF", "score": 2, "replies": [], "commentid": "gt3nqgp"}, {"body": "I plan on reading Mary Robinette Kowal's [*Shades of Milk and Honey*](https://www.amazon.co.uk/Shades-Milk-Honey-Glamourist-Histories-ebook/dp/B00BSSRN5S/ref=sr_1_1?crid=2Q0HQPKUBWX0M&amp;keywords=shades+of+milk+and+honey&amp;qid=1617300370&amp;sprefix=shades+of+milk%2Cstripbooks%2C147&amp;sr=8-1) for this one and if you're in the UK, it's 99p on the Kindle store at the moment! It counts as hard mode too.", "created": 1617300701.0, "author": "bubblegumgills", "score": 4, "replies": [], "commentid": "gt22h4a"}, {"body": "**A Dead Djinn in Cairo** by P Djeli Clark is an amazing debut novella!", "created": 1617470383.0, "author": "psyche_13", "score": 2, "replies": [], "commentid": "gt9gwbr"}, {"body": "The Eighth Key by Laura Weyr fits hard mode for this square! Full disclosure, I am her publisher at Journey Press. We participated in an AMA about a week ago [here](https://www.reddit.com/r/Fantasy/comments/m8hse2/were_journey_press_here_for_an_ama_we_are_here_to/).", "created": 1617301298.0, "author": "GideonMarcus", "score": 1, "replies": [], "commentid": "gt23qvy"}], "commentid": "gt1pb35"}, {"body": "**SFF Short Stories** \\- Self-explanatory. **HARD MODE:** Read an entire SFF anthology or collection", "created": 1617294700.0, "author": "kjmichaels", "score": 7, "replies": [{"body": "I'll never not pimp Ted Chiang's work, both **Stories of your Life and Others** and **Exhalation** are exceptional. The short stories are all very different from one another whether it be in writing style, characterization, plot, etc. each had something really unique. \n\nIf you've read Yoon Ha Lee's **Ninefox Gambit** series, I plan on reading **Hexarchate Stories.**", "created": 1617296175.0, "author": "fuckit_sowhat", "score": 23, "replies": [{"body": "I used **Exhalation** for last years card and it was one of my favorite reads; Highly recommended.  The best way I can describe it is a bit like Black Mirror minus the nihilism.", "created": 1617298898.0, "author": "Aertea", "score": 6, "replies": [], "commentid": "gt1yfpm"}, {"body": "In addition, I'd recommend Ken Liu's The Paper Menagerie as a short story collection, especially for those who enjoy Ted Chiang! I'll be getting his latest compilation of short stories for this year's bingo", "created": 1617297507.0, "author": "DemiLisk", "score": 5, "replies": [], "commentid": "gt1v6kk"}], "commentid": "gt1s9cq"}, {"body": "All the Nebula award finalists this year were stupid good if you want individual stories. \n\n- \"[Badass Moms in the Zombie Apocalypse](https://uncannymagazine.com/article/badass-moms-in-the-zombie-apocalypse/)\", Rae Carson (Uncanny 1-2/20)\n- \"[Advanced Word Problems in Portal Math](https://dailysciencefiction.com/fantasy/other-worlds-fantasy/aimee-picchi/advanced-word-problems-in-portal-math)\", Aimee Picchi (Daily Science Fiction 1/3/20)\n- \"[A Guide for Working Breeds](https://www.tor.com/2020/03/17/a-guide-for-working-breeds-vina-jie-min-prasad/)\u201d, Vina Jie-Min Prasad (Made to Order)\n- \"[The Eight-Thousanders](https://apex-magazine.com/the-eight-thousanders/)\", Jason Sanford (Asimov's 9/10-20)\n- \"[My Country Is a Ghost](https://uncannymagazine.com/article/my-country-is-a-ghost/)\", Eugenia Triantafyllou (Uncanny 1-2/20)\n- \"[Open House on Haunted Hill](http://www.diabolicalplots.com/dp-fiction-64a-open-house-on-haunted-hill-by-john-wiswell/)\", John Wiswell (Diabolical Plots 6/15/20)\n\nA few collections / anthologies I've really liked include:\n\n- Sooner or Later Everything Falls into the Sea by Sarah Pinsker\n- Houses Under the Sea by Caitlin R. Kiernan\n- The Weird by Ann and Jeff VanderMeer\n- The Best of Uncanny by Lynne M. Thomas and Michael Damian Thomas", "created": 1617295620.0, "author": "eriophora", "score": 21, "replies": [], "commentid": "gt1r0gt"}, {"body": "For anyone looking to try Seanan McGuire, [Laughter at the Academy](https://www.goodreads.com/book/show/45418305-laughter-at-the-academy?from_search=true&amp;from_srp=true&amp;qid=xDOp7Wz7bH&amp;rank=1) is a short story collection that shows off the many, many writing styles popular in her published series. \n\nFeatures: mad science, magic portals, cheerleaders, plagues, Halloween, superheroes, aliens, Lovecraftian horror, and much more. They all move at a good clip.", "created": 1617296447.0, "author": "Nineteen_Adze", "score": 8, "replies": [], "commentid": "gt1svaa"}, {"body": "A couple of collections for those looking for whole books of stories:\n\n[The Paper Menagerie and Other Stories](https://www.goodreads.com/book/show/24885533-the-paper-menagerie-and-other-stories?ac=1&amp;from_search=true&amp;qid=bL0mNiTunf&amp;rank=1) \\- Ken Liu\n\n[Across the Wall: A Tale of the Abhorsen and Other Stories](https://www.goodreads.com/book/show/47617.Across_the_Wall?from_search=true&amp;from_srp=true&amp;qid=bC4HwVFFzl&amp;rank=1) \\- Garth Nix - suggest reading the excellent Abhorsen Trilogy first", "created": 1617296872.0, "author": "Krilllian", "score": 8, "replies": [], "commentid": "gt1tsds"}, {"body": "If you're looking for an anthology, [*The Martian Chronicles*](https://www.goodreads.com/book/show/76778.The_Martian_Chronicles) by Ray Bradbury.\n\nThis one tends to get used a bunch almost every year, [*The Last Wish*](https://www.goodreads.com/book/show/40603587-the-last-wish) by Andrzej Sapkowski.", "created": 1617299666.0, "author": "WombatHats", "score": 8, "replies": [{"body": "I am going to be reading the Martian Chronicles!", "created": 1617370248.0, "author": "sekhmet0108", "score": 2, "replies": [], "commentid": "gt50iaw"}], "commentid": "gt208an"}, {"body": "I'll be reading Deirdre Sullivan's Tangleweed and Brine for this! It's a collection of fairytale retellings and I've loved all of her previous work!", "created": 1617409764.0, "author": "soullesssunrise", "score": 1, "replies": [], "commentid": "gt74gaq"}, {"body": "You can get several of the \"Best of *Year*\" Tor fiction for free on amazon as ebooks\n\nI really enjoyed The Starlit Wood anthology edited by Dominik Parisien and Navah Wolfe\n\nWonders of the Invisible World by Patricia McKillip\n\nMythic Dream edited by Dominik Parisien and Navah Wolfe\n\nRobin McKinley has some good anthologies\n\nShifting Shadows by Patricia Briggs is an anthology of Mercy Thompson stories", "created": 1617299919.0, "author": "Asheweaver", "score": 3, "replies": [], "commentid": "gt20sjn"}, {"body": "If you picked up Tales of Lunis Aquaria in the Christmas sale last year, this one qualifies. Nine fantasy short stories all set in the same world.  \n\n\n(Disclaimer: am author)", "created": 1617301432.0, "author": "Endalia", "score": 1, "replies": [], "commentid": "gt2413b"}, {"body": "Collections\n\n* [**Things We Lost in the Fire**](https://www.goodreads.com/book/show/30375706) by Mariana Enr\u00edquez\n* [**Jagannath**](https://www.goodreads.com/book/show/16054161) by Karin Tidbeck\n* [**Kalpa Imperial: The Greatest Empire That Never Was**](https://www.goodreads.com/book/show/534595) by Ang\u00e9lica Gorodischer\n* [**After Midnight: Stories of Mystery and the Macabre**](https://www.goodreads.com/book/show/40189601) by Sidney Wainwright\n\nAnthologies\n\n* [**Made to Order: Robots and Revolution**](https://www.goodreads.com/book/show/51076945) edited by Jonathan Strahan\n* [**Swashbuckling Cats: Nine Lives on the Seven Seas**](https://www.goodreads.com/book/show/53449151) edited by Rhonda Parrish\n* [**Air: Sylphs, Spirits and Swan Maidens**](https://www.goodreads.com/book/show/53332297) edited by Rhonda Parrish", "created": 1617311983.0, "author": "Amarthien", "score": 3, "replies": [], "commentid": "gt2qnt7"}, {"body": "Ken Liu's translated Chinese short stories anthologies: Broken Stars and Invisible Planets. Worth it for the Xia Jia stories alone.\n\nThe Ted Chiang short stories collections\n\nWhat to Do When You're Goth in the Country and Other Stories by Chavisa Woods. This short stories collection is really really really good, with great characters and stories that are wild but also a bit too real. Featuring lgtbqia+ characters/author. \n\n.", "created": 1617306149.0, "author": "Pseutri", "score": 2, "replies": [], "commentid": "gt2e4jw"}, {"body": "**Tales of Kingshold** &amp; **Tales of Ioth** by D.P. Woolliscroft", "created": 1617316275.0, "author": "eightslicesofpie", "score": 1, "replies": [], "commentid": "gt2zac2"}, {"body": "An anthology of both Sci-Fi and Fantasy short stories is [First Encounters](https://www.amazon.com/dp/B08NKDN84Q)*.* Each story features a first encounter of some sort, be it with aliens, unusual creatures, or something else. There are a total of 10 stories in the anthology from different authors.", "created": 1617299724.0, "author": "Vista_McDowall", "score": 1, "replies": [], "commentid": "gt20cyi"}, {"body": "Would The King in Yellow (horror short story collection by Robert W. Chambers) count for this square? Or is it too \"ordinary\"?\n\n&amp;#x200B;\n\n(I haven't read it yet, but was planning to, so I'm just wondering)", "created": 1617380746.0, "author": "Zaronion", "score": 1, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Robert W. Chambers**, The King in Yellow](https://www.reddit.com/r/Fantasy/comments/55yp87/author_appreciation_robert_w_chambers_the_king_in/) from user u/Pornokitsch \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617380844.0, "author": "RedditFantasyBot", "score": 1, "replies": [{"body": "There are a few non-SF/F stories in the anthology, but they're still, uh... 'romantic medievalist historical fiction', and probably count as fantasy. As the resident Chambers weirdo, you have my blessing!\n\nThat said, as the resident weirdo, I'd say the bigger problem here is that the latter half of the anthology just isn't very good. It is a quick read though, so no harm trying. And the first half is brilliant stories, which more than offsets the later crap.\n\nIf you want something by Chambers that's cover-to-cover fun, and all SF/F stories - *In Search of the Unknown* is also free on Gutenberg, and is all goofy Fortean hijinks.", "created": 1617436731.0, "author": "pornokitsch", "score": 1, "replies": [], "commentid": "gt862rs"}], "commentid": "gt5krte"}], "commentid": "gt5kknx"}, {"body": "Some resources for finding free short stories (legally of course!):  \n  \n* [Free Speculative Fiction Online](https://www.freesfonline.de/) - a search engine!  \n* [Subterranean Press Magazine](https://subterraneanpress.com/magazine) \n* [Clarkesworld Magazine](http://clarkesworldmagazine.com/) \n* [Tor.com](https://www.tor.com/category/all-fiction/original-fiction/)  \n* [Uncanny Magazine](https://uncannymagazine.com/)  \n* [Lightspeed Magazine](http://www.lightspeedmagazine.com/)\n* [Fireside Magazine](https://firesidefiction.com/)  \n* [Fantasy Magazine](http://www.fantasy-magazine.com/)", "created": 1617317115.0, "author": "improperly_paranoid", "score": 2, "replies": [], "commentid": "gt30wpv"}, {"body": "Before George RR Martin became a megaauthor/internet meme, he was a really good short story author. I realise this is not a fresh, cool rec, but it\u2019s a good one. If I were to pick one story, I\u2019d go for The Pear Shaped Man. It\u2019s the only story to give me nightmares as an adult.", "created": 1617301966.0, "author": "Fryktelig_variant", "score": 5, "replies": [], "commentid": "gt255ex"}, {"body": "Has anyone read **Octavia's Brood: Science Fiction Stories from Social Justice Movements** (edited by Walidah Imarisha and adrienne maree brown)? It seems to be a great mixture of science fiction, horror, fantasy, and magical realism all under the speculative fiction umbrella.", "created": 1617497819.0, "author": "quigukipromqueen", "score": 1, "replies": [], "commentid": "gtavg93"}, {"body": "Well there\u2019s so many, but if you want to hit Hard Mode without reading much more than the 5 required stories, try **Anoka** by Shane Hawk\u2014six short horror stories and two are flash fiction, so it\u2019s quite short", "created": 1617297803.0, "author": "mollyec", "score": 2, "replies": [], "commentid": "gt1vttc"}, {"body": "If you like Will Wight's different series (Cradle, Traveler's Gate, Elder Empire); his Hidden Gnome Podcast on Spotify has a bunch of short stories from these universes read by the Cradle audible narrator, Travis Baldree. A lot of them are non-canon little easter eggs but they are fun nonetheless", "created": 1617337808.0, "author": "acexacid", "score": 2, "replies": [], "commentid": "gt3zupq"}, {"body": "Invisible Planets: Contemporary Chinese Science Fiction in Translation (edited by Ken Liu)\n\nBroken Stars: Contemporary Chinese Science Fiction in Translation (edited by Ken Liu)\n\nThe State of the Art by Iain M Banks", "created": 1617298612.0, "author": "DemiLisk", "score": 3, "replies": [], "commentid": "gt1xqkf"}, {"body": "I am really looking forward to The Tangleroot Palace: Stories by Marjorie Liu that is coming out in June. I enjoyed Monstress so I am looking forward to her start story anthology.", "created": 1617295818.0, "author": "DaphneFallz", "score": 2, "replies": [], "commentid": "gt1rgli"}, {"body": "Shoutout to anything that Gardner Dozois ever edited. Last year I read **Rogues**, the one that he and Martin co-edited, and it's got a cool cross-genre mix of stuff in it, including a Hap &amp; Leonard story, a story about Bast from Kingkiller Chronicles, and an homage to Fafhrd &amp; the Gray Mouser.", "created": 1617314441.0, "author": "Phyrkrakr", "score": 3, "replies": [], "commentid": "gt2vouk"}, {"body": "Will Stephen King collections work for this square? I know his works are mostly horror, but they usually have some fantasy elements in them.", "created": 1617351533.0, "author": "DistraughtWatermelon", "score": 1, "replies": [], "commentid": "gt4f7wr"}, {"body": "If you like mythology -&gt;\n\n Stephen Fry has reworked some classic Greek/Roman myths in **Mythos** and **Heroes** \n\nNeil Gaiman has **Norse Mythology**\n\nAnd if you're looking for Celtic then try **Celtic Myths and Legends** by Peter Berresford Ellis", "created": 1617315345.0, "author": "DRcubed22", "score": 2, "replies": [{"body": "I am listening to the Heroes audiobook and just occured to me that this might fit under this category. This is my first year doing Bingo and not sure what is the general consensus of mythology being fiction for this purpose? Saw some discussion but still not surw", "created": 1617506199.0, "author": "Sensitive_Luck9466", "score": 1, "replies": [], "commentid": "gtb974e"}], "commentid": "gt2xh3j"}, {"body": "**A Metal Box Floating Between Stars and Other Stories** by Jamie Lackey - All SF, no fantasy", "created": 1617301547.0, "author": "lightning_fire", "score": 1, "replies": [], "commentid": "gt249u8"}, {"body": "Roger Zelazny, Ray Bradbury, Ursula K. Le Guin all have good collections. \n\n*Legends*, ed. Robert Silverberg, which I believe has a number of sequels. Stories from a lot of well-known worlds.\n\n*Arcanum Unbounded*, Sanderson's Cosmere collection.\n\nThe first two Witcher books, *The Last Wish* and *Sword of Destiny*, are composed of short stories. The first has a frame story, I don't think the second does?", "created": 1617301776.0, "author": "smartflutist661", "score": 3, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation Thread: **Roger Zelazny**](https://www.reddit.com/r/Fantasy/comments/5d96ap/author_appreciation_thread_roger_zelazny/?st=ivm72j5d&amp;sh=9ecd534a) from user u/CommodoreBelmont \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617301935.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt25310"}], "commentid": "gt24r81"}, {"body": "Highly recommend \"Defying Doomsday\" and \"Rebuilding Tomorrow\". Some stories in the second book are sequels to the first book.", "created": 1617321721.0, "author": "newnew145", "score": 1, "replies": [], "commentid": "gt39etu"}, {"body": "*Of War, Memories, and Starlight* by Aliette de Bodard\n\n*How Long Til the Black Future Month* by NK Jemison", "created": 1617312962.0, "author": "endless_warehouse", "score": 3, "replies": [], "commentid": "gt2soyg"}, {"body": "Does Norse Mythology fit under this?", "created": 1617295914.0, "author": "dacottam", "score": 6, "replies": [{"body": "I'd be hesitant to count Norse Mythology. It definitely reads like fiction but because it's actual mythology rather than just *based* on mythology, it's technically nonfiction. It'd make a great choice for the SFF-Related Nonfiction square, though (and it'd count for hard mode there)!\n\nOther people might disagree, though! I'm just one person.\n\nEdit: Mythology is kind of its own genre, like people are saying below me. It's not exactly fantasy but I guess it's related enough that you could probably get away with it here and the Bingo Police won't come after you. /shrug", "created": 1617300774.0, "author": "Supermirrulol", "score": 3, "replies": [{"body": "\\*Mythology is it's own genre and is not non-fiction.", "created": 1617302560.0, "author": "Kathulhu1433", "score": 7, "replies": [{"body": "It is not fiction. If I tried to put the Bible under \"Christian/Hebrew fiction\" people would kill me.", "created": 1617326743.0, "author": "Kerney7", "score": 1, "replies": [{"body": "It is not non-fiction. It is its own genre. Sometimes lumped together under the heading of \"traditional literature\" which would include fables, folktales, and legends. \n\nThat being said, you can have literary analysis, or historical analysis of mythology and THAT is non-fiction.", "created": 1617329278.0, "author": "Kathulhu1433", "score": 5, "replies": [], "commentid": "gt3miig"}], "commentid": "gt3i66s"}], "commentid": "gt26e3b"}, {"body": "Religion and mythology are generally considered their own genre that is neither fiction or non-fiction since that designation is based on each person's beliefs.", "created": 1617382959.0, "author": "Housewife-AK", "score": 2, "replies": [], "commentid": "gt5p3gc"}], "commentid": "gt22mwc"}], "commentid": "gt1robd"}, {"body": "I continue to stan **The Best of R.A. Lafferty** if you want a collection. \n\nOther outstanding individual stories:\n\n*\"STET\" by Sarah Gailey\n\n*\"Proof of Existence\" by Hal Y. Zhang\n\n*\"A Guide for Working Breeds\" by Vina Jie-Min Prasad\n\n*\"Fandom for Robots\" by Vina Jie-Min Prasad\n\n*\"Open House on Haunted Hill\" by John Wiswell\n\n*\"Man vs Bomb\" by M. Shaw\n\n*\"Mr Death\" by Alix E. Harrow\n\n*\"If You Want to Erase Us, You Must Be Thorough\" by L. Tu\n\n\"And They Were Never Heard From Again\" by Benedict Patrick", "created": 1617296603.0, "author": "tarvolon", "score": 4, "replies": [], "commentid": "gt1t7fg"}, {"body": "Rediscovery: Science Fiction by Women fits hard mode for this square! Full disclosure, I publish it Journey Press. Rediscovery features the women who wrote incredible science fiction, but for various reasons (usually sexism...) were forgotten or left to languish, unreprinted. Until now!", "created": 1617301230.0, "author": "GideonMarcus", "score": 3, "replies": [], "commentid": "gt23lnu"}, {"body": "I'm planning on reading [The Book of Dragons](https://www.goodreads.com/book/show/52583994-the-book-of-dragons?ac=1&amp;from_search=true&amp;qid=grrFNEslQx&amp;rank=2) edited by Jonathan Strahan. As the title suggests it's features short stories about dragons. It would also work for cat-squashing, though.", "created": 1617305157.0, "author": "Myamusen", "score": 3, "replies": [], "commentid": "gt2bze4"}, {"body": "Charles De Lint's Newford short story collections are lovely.  Slow, thoughtful urban fantasy with a lot of First Nations and occasionally Celtic mythology sprinkled in.  Dreams Underfoot, Tapping the Dream Tree, Moonlight &amp; Vines, etc.\n\nDreams of Distant Shores or Harrowing the Dragon by Patricia Mckillip \n\nFire or Water by Robin McKinley and Peter Dickinson", "created": 1617320066.0, "author": "oboist73", "score": 2, "replies": [], "commentid": "gt36epb"}, {"body": "If you're into the Dragon Age games, **Tevinter Nights** is a good choice, and counts for hard mode! I read it for this square last year and really enjoyed it - it does a lot of worldbuilding for the next game and introduces some super fun characters that I'm hoping we'll encounter in the game.", "created": 1617300472.0, "author": "Supermirrulol", "score": 4, "replies": [], "commentid": "gt21zec"}, {"body": "I would recommend: Everyone on the Moon is Essential Personnel by Julian K Jarboe (described on the publishers page as a \u201ccollection of body-horror fairy tales and mid-apocalyptic Catholic cyberpunk, memory and myth, loss and age, these are the tools of storyteller Jarboe, a talent in the field of queer fabulism\u201d)\n\nA Guide to Being Born by Ramona Ausubel (magical realism, all centered around the stages of life. In \u201cAtria\u201d a pregnant teenager believes she will give birth to any number of strange animals rather than a human baby; in \u201cCatch and Release\u201d a girl discovers the ghost of a Civil War hero living in the woods behind her house; and in \u201cTributaries\u201d people grow a new arm each time they fall in love. )", "created": 1617492304.0, "author": "12anet34", "score": 2, "replies": [], "commentid": "gtamada"}, {"body": "If anyone here loves Valdemar by Mercedes Lackey, there are 14 anthology books of short stories, and a 15th coming out this year.", "created": 1617302164.0, "author": "DoesTheOctopusCare", "score": 3, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617302552.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt26dfc"}], "commentid": "gt25k3b"}, {"body": " Currently stuck at home with a knee injury, so I figured I'd get started with what I had around.  \nJust read *An Honest Death and Other Stories* by Howard Tayler and it's absolutely fantastic. I hope he continues to write prose fiction and not just webcomic/graphic novel format. (But you should also go read his completed webcomic *Schlock Mercenary* it's fucking amazing).", "created": 1617308102.0, "author": "Vezir38", "score": 1, "replies": [], "commentid": "gt2icfs"}, {"body": "**Jackalope Wives and Other Stories** by T Kingfisher", "created": 1617303152.0, "author": "StarlightEstel", "score": 1, "replies": [], "commentid": "gt27ny2"}, {"body": "If you want to go a bit left field, Rigor Amortis by Jaym Gates. A collection of zombie romance short stories.", "created": 1617315959.0, "author": "wheresmylart", "score": 1, "replies": [], "commentid": "gt2yo3i"}], "commentid": "gt1oyx9"}, {"body": "**A Selection from the** r/Fantasy **A to Z Genre Guide** \\- Any book listed in our [A to Z Genre Guide.](https://www.reddit.com/r/Fantasy/wiki/index/a-to-z-genre-guide) **HARD MODE:** A book by a BIPOC author.", "created": 1617294713.0, "author": "kjmichaels", "score": 6, "replies": [{"body": "Obviously all the books you can read are already listed on here, but of the ones on the list that I thought were 5/5 are: \n\n* **A Natural History of Dragons**\n* **The Goblin Emperor**\n* **The Lions of Al-Rassan**\n* **The Night Circus, Station Eleven**\n* **The Fifth Season**\n* **A Long Way to a Small Angry Planet**\n* **Ancillary Justice**\n* **Ninefox Gambit**\n* **Jade Cit**\n* **Word War Z** (especially the audiobook)\n* **All Systems Red**\n* **Story of Your Life**\n* **The Empress of Salt and Fortunate**", "created": 1617297029.0, "author": "fuckit_sowhat", "score": 18, "replies": [], "commentid": "gt1u4rk"}, {"body": "Is there already a list of which qualify as HM?", "created": 1617301397.0, "author": "xenizondich23", "score": 10, "replies": [{"body": "There really should be. I'll poke around and see if I can find a breakdown from when we were putting it together. What I can say in the meantime is that I believe each section has at least one BIPOC author except for I think comedic fantasy.\n\n**ETA:** Found it! I was wrong, there's at least one in every category except Western.\n\n[The Underground Railroad](https://www.goodreads.com/book/show/30555488-the-underground-railroad) by Colson Whitehead\n\n[A Hero Born](https://www.goodreads.com/book/show/31117072-a-hero-born) by Jin Yong\n\n[Of One Blood](https://www.goodreads.com/book/show/964680.Of_One_Blood) by Pauline Hopkins\n\n[The Simoqin Prophecies](https://www.goodreads.com/book/show/676885.The_Simoqin_Prophecies) by Samit Basu\n\n[Black Leopard, Red Wolf](https://www.goodreads.com/book/show/50608676-black-leopard-red-wolf) by Marlon James\n\n[Future Home of the Living God](https://www.goodreads.com/book/show/34217599-future-home-of-the-living-god) by Louise Erdrich\n\n[The Queue](https://www.goodreads.com/book/show/30186905-the-queue) by Basma Abdel Aziz\n\n[An Ocean of Minutes](https://www.goodreads.com/book/show/42202089-an-ocean-of-minutes) by Thea Lim\n\n[Who Fears Death](https://www.goodreads.com/book/show/7767021-who-fears-death) by Nnedi Okorafor\n\n[The Grace of Kings](https://www.goodreads.com/book/show/18952341-the-grace-of-kings) by Ken Liu\n\n[The Hidden City](https://www.goodreads.com/book/show/1385783.The_Hidden_City) by Michelle West\n\n[A Stranger in Olondria](https://www.goodreads.com/book/show/12814333-a-stranger-in-olondria) by Sofia Samatar\n\n[Ash](https://www.goodreads.com/book/show/6472451-ash) by Malinda Lo\n\n[Swordspoint](https://www.goodreads.com/book/show/68485.Swordspoint) by Ellen Kushner\n\n[The Rage of Dragons](https://www.goodreads.com/book/show/41952489-the-rage-of-dragons) by Evan Winter\n\n[The Poppy War](https://www.goodreads.com/book/show/35068705-the-poppy-war) by R.F. Kuang\n\n[The House of Shattered Wings](https://www.goodreads.com/book/show/23601046-the-house-of-shattered-wings) by Aliette de Bodard\n\n[Sorcerer to the Crown](https://www.goodreads.com/book/show/23943137-sorcerer-to-the-crown) by Zen Cho\n\n[The Changeling](https://www.goodreads.com/book/show/31147267-the-changeling) by Victor LaValle\n\n[The Hunger](https://www.goodreads.com/book/show/30285766-the-hunger) by Alma Katsu\n\n[Mexican Gothic](https://www.goodreads.com/book/show/53152636-mexican-gothic) by Silvia Moreno-Garcia\n\n[The House of the Spirits](https://www.goodreads.com/book/show/9328.The_House_of_the_Spirits) by Isabelle Allende\n\n[Redemption in Indigo](https://www.goodreads.com/book/show/7005878-redemption-in-indigo) by Karen Lord\n\n[Palm-Wine Drinkard](https://www.goodreads.com/book/show/944103.The_Palm_Wine_Drinkard1) by Amos Tutuola\n\n[Minion](https://www.goodreads.com/book/show/39305.Minion) by L.A. Banks\n\n[Slave to Sensation](https://www.goodreads.com/book/show/178476.Slave_to_Sensation) by Nalini Singh\n\n[Temptation Rising](https://www.goodreads.com/book/show/12160940-temptation-rising) by A.C. Arthur\n\n[Tiger Eye](https://www.goodreads.com/book/show/93479.Tiger_Eye) by Marjorie M. Liu\n\n[Brown Girl in the Ring](https://www.goodreads.com/book/show/57504.Brown_Girl_in_the_Ring) by Nalo Hopkinson\n\n[Trail of Lightning](https://www.goodreads.com/book/show/36373298-trail-of-lightning) by Rebecca Roanhorse\n\n[Empire of Sand](https://www.goodreads.com/book/show/39714124-empire-of-sand) by Tasha Suri\n\n[Radio Silence](https://www.goodreads.com/book/show/23500162-radio-silence) by Alyssa Cole\n\n[The Fifth Season](https://www.goodreads.com/book/show/19161852-the-fifth-season) by N.K. Jemisin\n\n[Robocalypse](https://www.goodreads.com/book/show/11478756-robocalypse) by Daniel H Wilson\n\n[Rosewater](https://www.goodreads.com/book/show/38362809-rosewater) by Tade Thompson\n\n[Prime Meridian](https://www.goodreads.com/book/show/36553975-prime-meridian) by Silvia Moreno-Garcia\n\n[Ninefox Gambit](https://www.goodreads.com/book/show/26118426-ninefox-gambit) by Yoon Ha Lee\n\n[A Spark of White Fire](https://www.goodreads.com/book/show/37588503-a-spark-of-white-fire) by Sangu Mandanna\n\n[Everfair](https://www.goodreads.com/book/show/26114130-everfair) by Nisi Shawl\n\n[Imaro](https://www.goodreads.com/book/show/1535273.Imaro) by Charles R. Saunders\n\n[Kindred](https://www.goodreads.com/book/show/60931.Kindred) by Octavia Butler\n\n[Time Salvager](https://www.goodreads.com/book/show/23168818-time-salvager) by Wes Chu\n\n[Cast in Shadow](https://www.goodreads.com/book/show/9542.Cast_in_Shadow) by Michelle Sagara\n\n[Jade City](https://www.goodreads.com/book/show/43587154-jade-city) by Fonda Lee\n\n[Escaping Exodus](https://www.goodreads.com/book/show/38914991-escaping-exodus) by Nicky Drayden\n\n[The Star-Touched Queen](https://www.goodreads.com/book/show/25203675-the-star-touched-queen) by Roshani Chokshi\n\n[Son of a Trickster](https://www.goodreads.com/book/show/30257957-son-of-a-trickster) by Eden Robinson\n\n[Dread Nation](https://www.goodreads.com/book/show/30223025-dread-nation) by Justina Ireland\n\n[LaGuardia](https://www.goodreads.com/book/show/42762071-laguardia) by Nnedi Okorafor and Tana Ford\n\n[The Black Tides of Heaven](https://www.goodreads.com/book/show/33099588-the-black-tides-of-heaven) by Neon Yang\n\n[Story of Your Life](https://www.goodreads.com/book/show/223380.Stories_of_Your_Life_and_Others) by Ted Chiang\n\n[The Empress of Salt and Fortune](https://www.goodreads.com/book/show/51190882-the-empress-of-salt-and-fortune) by Nghi Vo\n\n[Ring Shout](https://www.goodreads.com/book/show/49247242-ring-shout) by P Djeli Clark\n\n[Ancient, Ancient](https://www.goodreads.com/book/show/15770475-ancient-ancient) by Kiini Ibura Salaam\n\n[A Phoenix Must First Burn](https://www.goodreads.com/book/show/43887961-a-phoenix-first-must-burn) (anthology) edited by Patrice Caldwell", "created": 1617307516.0, "author": "kjmichaels", "score": 29, "replies": [{"body": "Hey, I may be wrong, but since HM is specifically BIPOC authors rather than POC authors generally I don't think the Asian and Hispanic authors would count for HM?", "created": 1617768247.0, "author": "SeiShonagon", "score": 2, "replies": [{"body": "BIPOC still includes what we would traditionally consider POC. BIPOC as an acronym is supposed to just be an update on the older acronym to center the fact that black people and indigenous people in particular face more unique and challenging forms of racism than other POC which is why those groups are listed separately and before other POC in the acronym.", "created": 1617798809.0, "author": "kjmichaels", "score": 3, "replies": [{"body": "Ah I see, thank you for the explanation!", "created": 1617812062.0, "author": "SeiShonagon", "score": 2, "replies": [], "commentid": "gtpb2xm"}], "commentid": "gtoix1m"}], "commentid": "gtnhq0s"}, {"body": "This is amazing. Thank you!", "created": 1617308533.0, "author": "xenizondich23", "score": 3, "replies": [], "commentid": "gt2j9ss"}], "commentid": "gt2h40e"}, {"body": "At least these authors are BIPOC:\n\nThe Underground Railroad by Colson Whitehead\n\nA Hero Born by Jin Yong\n\nBlack Leopard, Red Wolf by Marlon James\n\nThe Queue by Basma Abdel Aziz\n\nWho Fears Death by Nnedi Okorafor\n\nA Stranger in Olondria by Sofia Samatar\n\nThe Rage of Dragons by Evan Winter\n\nThe Poppy War by R.F. Kuang\n\nThe House of Shattered Wings by Aliette de Bodard\n\nSorcerer to the Crown by Zen Cho\n\nRedemption in Indigo by Karen Lord\n\nThe Changeling by Victor LaValle\n\nMexican Gothic by Silvia Moreno-Garcia\n\nTrail of Lightning by Rebecca Roanhorse \n\nCast in Shadow Michelle Sagara\n\nPalm-Wine Drinkard by Amos Tutuola\n\nEmpire of Sand by Tasha Suri\n\nRadio Silence by Alyssa Cole\n\nThe Fifth Season by N.K. Jemisin\n\nRosewater by Tade Thompson\n\nBrown Girl in the Ring by Nalo Hopkinson\n\nSlave to Sensation by Nalini Singh\n\nNinefox Gambit by Yoon Ha Lee\n\nEverfair by Nisi Shawl\n\nKindred by Octavia Butler\n\nTime Salvager by Wes Chu\n\nPet by Akwaeke Emezi\n\nThe Star-Touched Queen by Roshani Chokshi", "created": 1617306600.0, "author": "Arette", "score": 2, "replies": [], "commentid": "gt2f50h"}], "commentid": "gt23ye0"}, {"body": "I'm quite excited to see Stranger in Olondria, which is already on my physical TBR shelf for the year and should count for HM!", "created": 1617304501.0, "author": "leftoverbrine", "score": 3, "replies": [], "commentid": "gt2akrl"}, {"body": "Do sequels count for this square? There are a few first books in series mentioned in the list that I've read, but I don't know if the other books could count as well. (Don't see anything mentioned about that)", "created": 1617632691.0, "author": "laurenhiya21", "score": 3, "replies": [{"body": "According to the Q&amp;A thread, sequels count!", "created": 1617771195.0, "author": "SeiShonagon", "score": 5, "replies": [{"body": "Awesome! I didn't see that, so thanks a bunch!", "created": 1617818410.0, "author": "laurenhiya21", "score": 1, "replies": [], "commentid": "gtppwv5"}], "commentid": "gtnm2ha"}], "commentid": "gtgfyle"}, {"body": "I'm glad to see that *Everfair* by Nisi Shawl is on that list as I've been meaning to read it. That'll probably be my hard mode pick. That or *Rosewater* by Tade Thompson.", "created": 1617297312.0, "author": "GALACTIC-SAUSAGE", "score": 4, "replies": [], "commentid": "gt1urdn"}], "commentid": "gt1ozy0"}, {"body": "**Trans or Nonbinary Character** \\- A book featuring a trans or nonbinary character that isn't an alien or a robot. **HARD MODE:** This character is a main protagonist.", "created": 1617294850.0, "author": "kjmichaels", "score": 15, "replies": [{"body": "Pet by Akwaeke Emezi (Hard Mode)\n\nThe Fifth Season by N. K. Jemisin (I believe this character isn't revealed to be trans until the second book though)\n\nThe First Sister by Linden Lewis\n\nDreadnought by April Daniels (Hard Mode)\n\nThe Black Tides of Heaven by Neon Yang, and the rest of the series (Hard Mode)\n\nWhen the Moon Was Ours by Anna-Marie McElmore\n\nAn Unkindness of Ghosts by Rivers Solomon (other books by Solomon might work as well) (Hard Mode)\n\nNinefox Gambit by Yoon Ha Lee (Hard Mode) (character shows up in book 2)\n\nEvery Heart a Doorway by Seanan McGuire\n\nThe Empress of Salt and Fortune by Nghi Vo (Hard Mode)\n\nThe Mermaid, The Witch, and The Sea by Maggie Tokuda-Hall (a main character is gender fluid, which I think counts in this case?) (Hard Mode)\n\nHoney Walls by Bones McKay (Hard Mode)\n\nCemetery Boys by Aiden Thomas (Hard Mode)\n\nThe Book of Koli by M. R. Carey", "created": 1617296491.0, "author": "VictorySpeaks", "score": 32, "replies": [{"body": "The Fifth Season character is mentioned to be trans in the first book, so reading just that one should be fine.", "created": 1617297495.0, "author": "characterlimit", "score": 24, "replies": [{"body": "excellent. it\u2019s been a minute since i\u2019ve read those books", "created": 1617298803.0, "author": "VictorySpeaks", "score": 1, "replies": [{"body": "I just finished The Obelisk Gate today!", "created": 1617309541.0, "author": "royhaven", "score": 2, "replies": [], "commentid": "gt2lh1f"}], "commentid": "gt1y7fk"}], "commentid": "gt1v5o3"}, {"body": "The trans character in Machineries of Empire (Ninefox Gambit series) doesn't show up until book 2.\n\nAlso, a couple of novellas to add to your list:\n\nThe Lamb Will Slaughter The Lion by Margaret Killjoy\n\nTo Be Taught, If Fortunate by Becky Chambers", "created": 1617303954.0, "author": "manowar88", "score": 8, "replies": [{"body": "thank you! i\u2019ll edit!", "created": 1617304095.0, "author": "VictorySpeaks", "score": 2, "replies": [], "commentid": "gt29ozw"}, {"body": "Machineries of Empire doesn't count as HM until book 2 for sure, but isn't Mikodez's nonbinary underling (forgot their name, it's been a while) in the first book?", "created": 1617304216.0, "author": "characterlimit", "score": 2, "replies": [{"body": "It's been a while for me too, but if Zehun does show up, I'm not sure they're prominent enough to be considered \"featured\". IIRC we don't see a ton of Mikodez in book 1", "created": 1617304785.0, "author": "manowar88", "score": 2, "replies": [{"body": "Oh, probably, good point. (Mikodez and crew were highlights of the series for me, so I think I assign them more space in my recollection of the books than they actually take up on-page.)", "created": 1617306249.0, "author": "characterlimit", "score": 2, "replies": [], "commentid": "gt2ecy3"}], "commentid": "gt2b6t3"}], "commentid": "gt29yff"}], "commentid": "gt29e15"}, {"body": "&gt; The Wolf in the Whale by Jordanna Max Brodsky (Hard Mode)\n\nI'd push back on this one a bit. Brodsky said Omat is just pushing against gender norm boundaries in a GR author page question. I personally think Brodsky mishandled the situation, some in the book and completely with that answer.", "created": 1617308667.0, "author": "Dsnake1", "score": 4, "replies": [{"body": "That\u2019s a good point. I read Omat has gender fluidity trans, but I haven\u2019t looked at what the author has said.", "created": 1617313611.0, "author": "VictorySpeaks", "score": 1, "replies": [{"body": "Yeah, it's the [second question here](https://www.goodreads.com/author/14107529.Jordanna_Max_Brodsky/questions). \n\nPersonally, I was just a little put off by a couple of the chunks of the book regarding gender issues, but as a cishet man, I wasn't going to express any off-putting without reading a ton, first. Gender identity is such a personal thing, though, and I still don't feel uber comfortable critiquing the choices specifically, especially after being away from the book for a while. I just really wish Brodsky would have either embraced trans/nb representation with Omat or wrote Omat differently, because it's easy to draw some troubling conclusions from the way Omat's written combined with Brodsky saying Omat's just not comfortable with gender norms.", "created": 1617480692.0, "author": "Dsnake1", "score": 1, "replies": [{"body": "Yeah i\u2019m cishet as well, but a lot of my friends are trans/nonbinary/genderqueer. I definitely read Omat\u2019s story as a sort of genderqueer one, not quite trans or nonbinary but still someone who refuses to accept either gender on its own. thanks for the link! i\u2019ll check it out when i have some time", "created": 1617480811.0, "author": "VictorySpeaks", "score": 1, "replies": [], "commentid": "gta1o9g"}], "commentid": "gta1gfb"}], "commentid": "gt2u0os"}], "commentid": "gt2jkfn"}, {"body": "Came here to inquire about **Pet** as HM. Ya\u2019ll are awesome!", "created": 1617341207.0, "author": "cheryllovestoread", "score": 3, "replies": [{"body": "Pet actually fits many squares! Go back to the spotlight I did and you\u2019ll see them!", "created": 1617341785.0, "author": "VictorySpeaks", "score": 2, "replies": [{"body": "That\u2019s right!  I think I watched a YouTube link that you posted of them reading Pet. I was hooked.", "created": 1617342285.0, "author": "cheryllovestoread", "score": 3, "replies": [], "commentid": "gt45n1b"}], "commentid": "gt450ye"}], "commentid": "gt44ayw"}, {"body": "I believe one of the POV characters in The Stone in the Skull by Elizabeth Bear is trans, but I\u2019m not sure.", "created": 1617332102.0, "author": "asph0d3l", "score": 2, "replies": [], "commentid": "gt3r9sm"}], "commentid": "gt1syq2"}, {"body": "[Cemetery Boys -](https://www.goodreads.com/book/show/52339313-cemetery-boys?ac=1&amp;from_search=true&amp;qid=K6cxG19hZ2&amp;rank=2) Aiden Thomas (hard mode - trans protagonist)\n\n[Swordheart](https://www.goodreads.com/book/show/42747739-swordheart?ac=1&amp;from_search=true&amp;qid=Uc4bZrrOd4&amp;rank=1) or [Paladin's Grace](https://www.goodreads.com/book/show/50702014-paladin-s-grace?ac=1&amp;from_search=true&amp;qid=AALZPHLeDJ&amp;rank=1) by T Kingfisher (non-binary supporting character)\n\n[The Empress of Salt and Fortune](https://www.goodreads.com/book/show/51190882-the-empress-of-salt-and-fortune?ac=1&amp;from_search=true&amp;qid=7JMvmbYHr2&amp;rank=1) or [When the Tiger Came Down the Mountain](https://www.goodreads.com/book/show/53265678-when-the-tiger-came-down-the-mountain) by Nghi Vo (hard mode - non binary protagonist)", "created": 1617297432.0, "author": "Krilllian", "score": 14, "replies": [{"body": "Do you know if the NB character is back for Paladin\u2019s strength? I\u2019m planning to read that soonish.", "created": 1617301481.0, "author": "Fryktelig_variant", "score": 3, "replies": [{"body": "No. There is a trans person mentioned once, I think, but I don't remember anything else.", "created": 1617303456.0, "author": "InAzandeer", "score": 4, "replies": [{"body": "That\u2019s a shame. I liked that character.", "created": 1617303722.0, "author": "Fryktelig_variant", "score": 4, "replies": [{"body": "Brindle is there though :)", "created": 1617304721.0, "author": "InAzandeer", "score": 5, "replies": [], "commentid": "gt2b1s1"}], "commentid": "gt28w8f"}], "commentid": "gt28bmu"}, {"body": "I don\u2019t know I\u2019m afraid, that\u2019s in my queue too!", "created": 1617302524.0, "author": "Krilllian", "score": 1, "replies": [], "commentid": "gt26b8w"}], "commentid": "gt244t2"}], "commentid": "gt1v0tx"}, {"body": "The Raven Tower by Ann Leckie (HM).", "created": 1617296955.0, "author": "kalina789", "score": 12, "replies": [{"body": "I just came to recommend this! It's hard mode, too \ud83d\ude01", "created": 1624425617.0, "author": "impossible_angles", "score": 1, "replies": [], "commentid": "h2qkfye"}], "commentid": "gt1tyzj"}, {"body": "- **The Story of Silence** by Alex Myers (hard)\n\n- **Black Sun** by Rebecca Roanhorse \n\n- **The Vela** by Chambers, Huang, Solomon and Lee (hard x2, since both MCs are trans/nonbinary)\n\n- **Our Bloody Pearl** by D.N. Bryn (hard, though the main character is non-human (a siren))\n\n- **Phoenix Extravagant** by Yoon Ha Lee (hard)\n\n- **Upright Women Wanted** by Sarah Gailey\n\n- **Euphoria Kids** by Alison Evans (hard mode x2)", "created": 1617300127.0, "author": "cubansombrero", "score": 10, "replies": [], "commentid": "gt218rh"}, {"body": "**Finna** by Nino Cipri - not sure if hard mode, definitely deuteragonist at the very least. \n\n**Wake of Vultures** by Lila Bowen (hard mode) \n\n**Upright Women Wanted** by Sarah Gaily \n\n**The Bone Doll's Twin** by Lynn Flewelling (hard mode, main character is magically gender-swapped at birth so kinda complicated to say were exactly it fits on this spectrum.) \n\n**The Left-Handed Booksellers of London** (not the POV character, but I think fits hard mode) \n\n**Pantomime** by Laura Lam (hard)\n\n**Realm of the Elderlings** by Robin Hobb (arguably the 2nd and 3rd trilogy is hard, 1st and liveship traders I don't think are.)", "created": 1617302762.0, "author": "Vermilion-red", "score": 9, "replies": [], "commentid": "gt26tum"}, {"body": "The Book of Koli by M.R. Carey has excellent Trans rep, they become a main protagonist in the next two books (fyi this series is incredible)\n\nThere is a wonderful NB character in Swordheart by T.Kingfisher\n\nMany of the Wayward Children series by Seanan McGuire feature a trans character", "created": 1617297321.0, "author": "Maudeitup", "score": 8, "replies": [{"body": "Any idea if Down Among the Sticks and Bones is one of those in Wayward Children?", "created": 1617304684.0, "author": "xolsiion", "score": 2, "replies": [{"body": "Iirc I don't believe that is one of them. I was thinking specifically about the character Kade who is featured in the books which are set in the school rather than the portal backstory ones, which I think DAtSaB is.", "created": 1617305004.0, "author": "Maudeitup", "score": 3, "replies": [], "commentid": "gt2bni7"}], "commentid": "gt2ayu2"}], "commentid": "gt1us49"}, {"body": "**The Book of Koli** by M. R. Carey \n\n**The Lost City of Ithos** by John Bierce (possibly others in the series too, I don't recall, but definitely this one)\n\n**Persephone Station** by Stina Leicht (HM)\n\n**The Narrows** by Travis M. Riddle (me) \\[possibly HM depending on your definition? She's definitely one of the most important supporting characters, I'd call her a \"main character\" but don't know about \"main protagonist,\" if there's even a distinction lol\\]", "created": 1617315412.0, "author": "eightslicesofpie", "score": 6, "replies": [{"body": "I actually have __The Narrows__ and have been meaning to get around to reading it. Is this character a PoV at any point? I think that's where I would draw the like between important or main character and protagonist.", "created": 1617327900.0, "author": "Paraframe", "score": 1, "replies": [{"body": "Unfortunately no, there's only one POV character. Hope you enjoy the book if you do decide to check it out!", "created": 1617329469.0, "author": "eightslicesofpie", "score": 3, "replies": [], "commentid": "gt3mtzo"}], "commentid": "gt3k5q2"}], "commentid": "gt2xly8"}, {"body": "The Raven Tower by Ann Leckie (HM)  \n\n\nFull Fathom Five by Max Gladstone (HM)  - admittedly this is deep in a series.   \n\n\nPhoenix Extravagant by Yoon Ha Lee (HM) - Haven't read it yet, probably gonna be my personal pick", "created": 1617297120.0, "author": "daavor", "score": 5, "replies": [], "commentid": "gt1uc4z"}, {"body": "Sarah Gailey is great for trans/NB rep - both **American Hippo** and **Upright Women Wanted** will work well for this square.\n\nGail Carriger's **Parasol Protectorate** and **Finish School** series (at least) also have good trans/NB rep, mostly because just about every flavor of LGBTQ+ shows up somewhere in the various series in her shared world.  I don't know that you could *exactly* use them for hard mode, but they're still a whole lot of fun. Victorian steampunk supernatural romance! Vampires! Werewolves! Ghosts! Airships! Dresses!\n\nSeanan McGuire also does good work in this space with her **Wayward Children** novella series.  I read them all in a rush, basically back to back, but I'm like 80% certain that there's at least one fairly major character who is trans.  I just can't remember which book they're in.", "created": 1617306009.0, "author": "Phyrkrakr", "score": 5, "replies": [], "commentid": "gt2dtfh"}, {"body": "I believe it's unfortunately still out of print, but if you can get your hands on **Peter Darling** by S.A. Chant it fits for hard mode and is a phenomenal queer retelling of Peter Pan.\n\n**Touch** by Claire North is not explicit about it, but the protagonist shifts from body to body with no regard for gender and doesn't seem to ascribe a gender to themselves beyond that of the body they're currently inhabiting. To me they feel like a gender-fluid (non-binary) protagonist even though they are never specifically identified that way.\n\n**Love After the End** ed. by Joshua Whitehead is an anthology of spec fic stories by and about queer/Two Spirit Indigenous people, as is **Love Beyond Body Space and Time** ed. by Hope Nicholson.\n\n**The Space Between Worlds** features a prominent side character who is non-binary but this one wouldn't be hard mode.\n\n**An Unkindness of Ghosts** by Rivers Solomon features an intersex protagonist, I believe. Solomon has said they made the conscious choice not to identify any of their characters explicitly, but I believe they've suggested this in interviews.", "created": 1617310940.0, "author": "CJGibson", "score": 6, "replies": [{"body": "Unkindness of ghosts also has a significant character who is assumed male by everyone on the matilda but explicitly says \"I'm not a man\" at one point, so while solomon doesn't assign any modern labels to the characters, it is pretty clear for this square.", "created": 1617322134.0, "author": "Boris_Ignatievich", "score": 6, "replies": [], "commentid": "gt3a5j8"}], "commentid": "gt2ohbn"}, {"body": "**The Four Profound Weaves** should count for hard mode and also it is an April book club selection. (Mod book club I believe). But now I have to decide where on my card to put it!", "created": 1617302636.0, "author": "DrMDQ", "score": 4, "replies": [{"body": "[removed]", "created": 1617646875.0, "author": "[deleted]", "score": 2, "replies": [{"body": "This book fits so many hard modes... I think the first-person POV hard mode is the most complicated so I\u2019ll probably put it there.", "created": 1617647180.0, "author": "DrMDQ", "score": 1, "replies": [], "commentid": "gthbnou"}], "commentid": "gthaztc"}], "commentid": "gt26jui"}, {"body": "Starless by Jacqueline Carey counts &gt;!for hard mode.!&lt;", "created": 1617315996.0, "author": "moonshards", "score": 4, "replies": [{"body": "This was going to be my rec. Such a good book!!", "created": 1617329428.0, "author": "wingardiumlevi-no-sa", "score": 1, "replies": [], "commentid": "gt3mrfk"}], "commentid": "gt2yqpm"}, {"body": "*Black Sun* by Rebecca Roanhorse has an important character who is nonbinary and uses xe/xir pronouns.", "created": 1617297094.0, "author": "caprette", "score": 7, "replies": [], "commentid": "gt1u9zj"}, {"body": "* **Phoenix Extravagant** by Yoon Ha Lee (HM)\n\n* **The Mask of Mirrors** by MA Carrick\n\n* **The Devourers** by Indra Das\n\n* **Naondel** by Maria Turtschaninoff\n\n* **Finna** by Nino Cipri (HM)\n\n* **The Order of the Pure Moon Reflected in the Water** by Zen Cho (HM)", "created": 1617302362.0, "author": "perditorian", "score": 3, "replies": [], "commentid": "gt25z7q"}, {"body": "Demon Haunted by me, with the next book, By Demons Be Driven, working for hard mode.", "created": 1617305881.0, "author": "ashearmstrong", "score": 3, "replies": [], "commentid": "gt2dixk"}, {"body": "**The Four Profound Weaves** by RB Lemberg has a trans protagonist. \n\n**Upright Women Wanted** by Sarah Gailey doesn't fit hard mode, but it does have a NB character, iirc.", "created": 1617306655.0, "author": "Dsnake1", "score": 3, "replies": [], "commentid": "gt2f9bu"}, {"body": "Magnus Chase and the Gods of Asgard has an excellent genderfluid character, which I think counts as a subset of nonbinary? But please let me know if I'm wrong!", "created": 1617313280.0, "author": "gggggrrrrrrrrr", "score": 3, "replies": [], "commentid": "gt2tcfq"}, {"body": "Dark Abyss of Our Sins (by moi) - non-binary POV character. Books about demons, fancy hats, and politics.", "created": 1617313584.0, "author": "KristaDBall", "score": 3, "replies": [], "commentid": "gt2tyr2"}, {"body": "Chameleon Moon by RoAnna Sylver (HM)  \nThe Reincarnated Prince by Danny Macks (HM and self-pub)  \nPeter Darling by Austin Chant (HM)  \nOut of Salem by Hal Schrieve (HM)  \nRiver of Teeth by Sarah Gailey  \nIndexing by Seanan McGuire", "created": 1617299480.0, "author": "hairymclary28", "score": 2, "replies": [], "commentid": "gt1zt6i"}, {"body": "Legendborn has a NB protagonist!", "created": 1617299806.0, "author": "j4716", "score": 2, "replies": [{"body": "I love Legendborn with all my heart but isn't that person whose name I've forgotten because I'm terrible at names more of a side character?", "created": 1617302378.0, "author": "Dianthaa", "score": 5, "replies": [{"body": "Lol good point I guess it wouldn't count for hard mode but the prompt says \"featuring\" which I think leaves some room for interpretation", "created": 1617325186.0, "author": "j4716", "score": 1, "replies": [{"body": "Yeah it's definitely fine for normal mode", "created": 1617337711.0, "author": "Dianthaa", "score": 1, "replies": [], "commentid": "gt3zpvg"}], "commentid": "gt3fi4m"}], "commentid": "gt260fr"}], "commentid": "gt20jhi"}, {"body": "Maybe not relevant to everyone, but the latest Skulduggery Pleasant book by Derek Landy just came out today - Dead or Alive. Its got a non binary character in it.", "created": 1617303705.0, "author": "XxNerdAtHeartxX", "score": 2, "replies": [], "commentid": "gt28ux1"}, {"body": "***The Seep*** by Chana Porter works for hard mode.", "created": 1617312463.0, "author": "paperwhites", "score": 2, "replies": [], "commentid": "gt2rnsd"}, {"body": "It's blink-and-you-miss-it, but Rogue Ship by Isabel Pelech fits hard mode\n\nMortal Gods by Bonnie Quinn (hm)", "created": 1617332123.0, "author": "oboist73", "score": 2, "replies": [], "commentid": "gt3rb4f"}, {"body": "Does Left Hand of Darkness count?", "created": 1617356961.0, "author": "sekhmet0108", "score": 2, "replies": [], "commentid": "gt4k617"}, {"body": "Does anyone know if the Fool in The Realm of the Elderling is trans? No Spoilers please.", "created": 1617379213.0, "author": "Party-Permission", "score": 2, "replies": [{"body": "No, the Fool is not trans. Probably the best identity that fits is genderfluid.", "created": 1617635342.0, "author": "KaPoTun", "score": 3, "replies": [{"body": "OK, good to know, thank you!", "created": 1617635872.0, "author": "Party-Permission", "score": 2, "replies": [], "commentid": "gtgmkub"}], "commentid": "gtglffz"}], "commentid": "gt5hgom"}, {"body": "Hi, I'm a self-published author, and my debut novel **Doomsayer Prince** is an epic fantasy.\n\nTrans or Nonbinary Character - ~~HARD MODE~~\n\nDoomsayer Prince features a very cool, high-ranking military leader that just happens to hit this bingo square.\n\nAlso, it has an equally cool magic discipline that affects all the users by making them ARO/ACE. One of the main characters is such at the beginning of the book. But stuff happens...I don\u2019t want to spoil it, but I\u2019m not sure it qualifies for HARD MODE. Maybe it does for you? You hereby have permission to check it off as HARD MODE, if you decide that it is.\n\nI hope you have a great 2021 Fantasy Bingo experience :-)\n\n[Buy Doomsayer Prince](https://runesnielsen.com/availablefrom). It's only 99 cents while on sale from June 1-7th.", "created": 1622646018.0, "author": "Rune_S_Nielsen", "score": 2, "replies": [], "commentid": "h0bjj2m"}, {"body": "Stealing Thunder by Alina Boyden (hard mode) - also fits set in Asia", "created": 1617300283.0, "author": "gracefruits", "score": 1, "replies": [], "commentid": "gt21ky8"}, {"body": "[*The Knight and the Necromancer*](https://www.goodreads.com/book/show/52651076-the-capital) by A.H. Lee features a prominent trans character.", "created": 1617300314.0, "author": "WombatHats", "score": 1, "replies": [], "commentid": "gt21na9"}, {"body": "**Baker Thief** by Claudie Arsenault", "created": 1617301480.0, "author": "lightning_fire", "score": 1, "replies": [], "commentid": "gt244q2"}, {"body": "* **Wake of Vultures** by Lila Bowen (hard mode)    \n* **Upright Women Wanted** by Sarah Gailey  \n* **The Four Profound Weaves** by R.B. Lemberg (hard mode)  \n* **Every Heart a Doorway** by Seanan McGuire  \n* **The Empress of Salt and Fortune** by Nghi Vo (hard mode)", "created": 1617325925.0, "author": "improperly_paranoid", "score": 1, "replies": [], "commentid": "gt3gri4"}, {"body": "* It's only mentioned in passing and so briefly I forgot which actual character it refers to, but there is a trans character in **The Conductors** by Nicole Glover. \n* The love interest in **Soulstar** by CL Polk is nonbinary, so I think that fits HM, only appears in the final book in the trilogy though, which is imo also the strongest.\n* **The City We Became** by NK Jemisin\n* **Catfishing on Catnet** by Naomi Kritzer\n* **Mooncakes** by Suzanne Walker &amp; Wendy Xu (graphic novel)\n* **The Last Sun** by KD Edwards", "created": 1617350983.0, "author": "Dianthaa", "score": 1, "replies": [], "commentid": "gt4eppz"}, {"body": "**Every Day** by David Levithan has the main character waking up and living in a different body every day, so that should count as hard mode (nonbinary).\n\n**Lock-In** by John Scalzi should also count for hard mode as the MC is nonbinary or genderless, depending on how you read them.", "created": 1617463650.0, "author": "SmallFruitbat", "score": 1, "replies": [], "commentid": "gt942oe"}, {"body": "**Affair of the Mysterious Letter** by Alexis Hall - a fun and imaginative take on Sherlock Holmes set in a fantasy world brimming with supernatural creatures (including vampires, witches and some lovecraftian goodness), where ~~Sherlock~~ Shaharazad is a woman and John ~~Watson~~ Wyndham, the narrator, is a trans guy. I\u2018d recommend this one mostly to Sherlock fans who\u2019re up for something light and playful. :3", "created": 1617486071.0, "author": "RandomFancy", "score": 1, "replies": [], "commentid": "gtabdu5"}, {"body": "I just remembered I had [this database](https://queersff.theillustratedpage.net/) bookmarked and thought it might be useful to post it here. It's by no means an exhaustive database but it's pointed me in the direction of a few books I'm considering using for this prompt.", "created": 1617550066.0, "author": "catnapkins", "score": 1, "replies": [], "commentid": "gtcs979"}, {"body": "Hollow World by Michael J. Sullivan counts for hard mode, I believe", "created": 1617926773.0, "author": "lifeislookingup", "score": 1, "replies": [], "commentid": "gtvh4fq"}, {"body": "Australian Sci-fi author Corey J White has a NB character in his Repo Virtual. Adopted Sibling to the queer MC. \nPlus it has a future dystopian-ish setting and features a heist and an AI\n\nCemetery Boys is practically perfect", "created": 1617947516.0, "author": "indigohan", "score": 1, "replies": [], "commentid": "gtwge4r"}, {"body": "**Blackfish City** by Sam J Miller has a nonbinary viewpoint character, and should work for hard mode.", "created": 1617977404.0, "author": "DrNefarioII", "score": 1, "replies": [], "commentid": "gtxkmay"}, {"body": "Fierce Femmes and Notorious Liars by Kai Cheng Thom (Hard Mode)", "created": 1621279369.0, "author": "[deleted]", "score": 1, "replies": [], "commentid": "gyhc3yt"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\n**For this square, they are:**\n\nThe Demons We See by Krista D Ball\n\nSair\u014d's Claw by Virginia McClain\n\nDoomsayer Prince by Rune S. Nielsen", "created": 1622829205.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0lcxwt"}, {"body": "Adding my vote for H.E. Edgmon's The Witch King for Hard Mode. Transcmasc author, transmasc main character, and the best way to describe it is The Cruel Prince lite but HELLA gay.", "created": 1623913246.0, "author": "indigohan", "score": 1, "replies": [], "commentid": "h229stg"}], "commentid": "gt1paps"}, {"body": "**Published in 2021** \\- Self-explanatory. **HARD MODE:** It's also a debut novel--as in it's the author's first published novel.", "created": 1617294796.0, "author": "kjmichaels", "score": 7, "replies": [{"body": "Some 2021 debuts that I've read so far or am looking forward to:\n\n**Winter's Orbit** by Everina Maxwell\n\n**The Councillor** by E. J. Beaton\n\n**Threadneedle** by Cari Thomas\n\n**The Shadow in the Glass** by J.J.A. Harwood\n\n**The Unbroken** by C.L. Clark\n\n**The Witch's Heart** by Genevieve Gornichec\n\n**The Wolf and the Woodsman** by Ava Reid\n\n**For the Wolf** by Hannah Whitten\n\n**She Who Became the Sun** by Shelley Parker-Chan", "created": 1617297808.0, "author": "maybe_from_jupiter", "score": 28, "replies": [{"body": "I was looking seriously at The Witch's Heart and it qualifies for hard mode!", "created": 1617299538.0, "author": "DaphneFallz", "score": 2, "replies": [], "commentid": "gt1zxwi"}], "commentid": "gt1vu6b"}, {"body": "**Fugitive Telemetry (#6 Murderbot)** by Marth Wells \n\n**The Chosen and the Beautiful** by Nghi Vo\n\n**A History of What Comes Next** by Sylvain Neuvel (premise makes it sound like linguistic sci-fi, which sounds promising)\n\n**The Memory Theater** by Karin Tidbeck (haven't read it or anything by the author, but it sounds good)\n\n**The Witness for the Dead** by Katherine Addison (sequel to The Goblin Emperor)", "created": 1617300483.0, "author": "fuckit_sowhat", "score": 7, "replies": [], "commentid": "gt2207v"}, {"body": "2021 books I'm looking forward to:\n\n* [**The Chosen and the Beautiful**](https://www.goodreads.com/book/show/54102719) by Nghi Vo (HM)\n* [**Malice**](https://www.goodreads.com/book/show/51530580) by Heather Walter (HM)\n* [**A Psalm for the Wild-Built**](https://www.goodreads.com/book/show/40864002) by Becky Chambers\n* [**Fugitive Telemetry**](https://www.goodreads.com/book/show/53205854) by Martha Wells\n* [**The Death of Jane Lawrence**](https://www.goodreads.com/book/show/48915818) by Caitlin Starling\n* [**The Lights of Prague**](https://www.goodreads.com/book/show/52591842) by Nicole Jarvis\n* [**A Spindle Splintered**](https://www.goodreads.com/book/show/49187294) by Alix E. Harrow\n* [**A Dowry of Blood**](https://www.goodreads.com/book/show/56666839) by S.T. Gibson (not sure if HM)", "created": 1617313548.0, "author": "Amarthien", "score": 6, "replies": [], "commentid": "gt2tw2j"}, {"body": "Books I'm looking forward to this year (none of these are Hard Mode, sorry):\n\n**Alecto the Ninth** by Tamsyn Muir (I think this comes out this year)\n\n**The Wisdom of Crowds** by Joe Abercrombie\n\n**Leviathan Falls** by James SA Corey\n\n**Bloodline** by Will Wight\n\n**The Lost Metal** by Brandon Sanderson (HOPEFULLY)\n\n**The Winds of Winter** by George RR Martin (hahaha please kill me)", "created": 1617337026.0, "author": "acexacid", "score": 5, "replies": [{"body": "Alecto was pushed back to 2022 last I heard. :(", "created": 1617337902.0, "author": "Nidafjoll", "score": 8, "replies": [{"body": "Ah, shit. Thanks", "created": 1617339863.0, "author": "acexacid", "score": 3, "replies": [], "commentid": "gt42lca"}], "commentid": "gt3zzds"}, {"body": "I believe The Lost Metal is slated for early 2022 (tentatively), but we should get Skyward 3 this year!", "created": 1617389464.0, "author": "REDSENTINEL24", "score": 2, "replies": [{"body": "I personally wasn't a huge fan of Skyward. Maybe it was that I was just craving more Cosmere (especially having just caught up on Wax and Wayne when Skyward came out) of maybe it's the YA tone of it, idk\n\nMaybe I'll re read it this year and see how I feel", "created": 1617389567.0, "author": "acexacid", "score": 1, "replies": [], "commentid": "gt62dum"}], "commentid": "gt626jt"}], "commentid": "gt3yrha"}, {"body": "~~The Lost Apothecary by Sarah Penner~~\n\nNot fantasy apparently. Sorry!", "created": 1617296440.0, "author": "BitterSprings", "score": 5, "replies": [{"body": "I\u2019m reading this now and does it actually fit the whole \u201cspeculative fiction\u201d part?", "created": 1617297735.0, "author": "conservio", "score": 4, "replies": [{"body": "I thought this was Literary/Historical Fiction. \ud83e\udd37\u200d\u2640\ufe0f", "created": 1617298876.0, "author": "Kathulhu1433", "score": 1, "replies": [{"body": "I remembered someone telling me that it was fantasy but I could be wrong. Please ignore me if that's the case", "created": 1617299155.0, "author": "BitterSprings", "score": 3, "replies": [{"body": "I read it recently and there wasn't any kind of fantasy element that I remember.", "created": 1617299400.0, "author": "Kathulhu1433", "score": 1, "replies": [{"body": "On the other hand, 16 Ways to Defend a Walled City and Come See the Living Dryad are both often shelved as fantasy, and both have no fantasy elements. The line is not always so cut and dry. I've seen people review and talk about The Lost Apothecary here, so I feel like it has half a foot in the door already.", "created": 1617301763.0, "author": "xenizondich23", "score": 2, "replies": [{"body": "&gt; 16 Ways to Defend a Walled City\n\nSecondary World, and I'm pretty sure there's a moderately fantastical race of not-precisely-humans though they're not front and center for page time.", "created": 1617423495.0, "author": "Tigrari", "score": 3, "replies": [], "commentid": "gt7qvcx"}, {"body": "I haven't read either of those, so I can't speak to them. \n\nIt has elements of literary, women's, and historical fiction. You could stretch it and even say mystery because the main character is trying to figure out a historical mystery? There is no magic, and despite there being two timeframes discussed there is no time travel, or any other fantastical elements. \n\nThe author and publisher also both call it \"Historical Fiction.\"\n\nIf you have a good reason it should be labelled Fantasy, other than \"some people on reddit discussed it on r/fantasy\" I'd honestly love to hear it. A lot of people don't seem to understand genres, and get genre confused easily with subject.", "created": 1617304352.0, "author": "Kathulhu1433", "score": 2, "replies": [{"body": "I haven\u2019t read The Lost Apothecary, but it was a Book of the Month pick and they labeled it Historical Fantasy. Ultimately, I didn\u2019t purchase it because I suspected it wouldn\u2019t have many fantasy elements based on the blurb.", "created": 1617305784.0, "author": "g_ann", "score": 2, "replies": [{"body": "It was a great historical/literary fiction novel... but yeah, there was not a single fantasy element in the book.", "created": 1617308467.0, "author": "Kathulhu1433", "score": 1, "replies": [], "commentid": "gt2j4jc"}], "commentid": "gt2dbko"}], "commentid": "gt2a956"}], "commentid": "gt24qcc"}], "commentid": "gt1zm70"}], "commentid": "gt1z13n"}], "commentid": "gt1ydul"}], "commentid": "gt1voh1"}, {"body": "It is still a great novel, and I definitely recommend it if you're reading outside of the Bingo card.", "created": 1617305366.0, "author": "Kathulhu1433", "score": 1, "replies": [{"body": "Oh it still sounds right up my alley. I'll just have to have a Bingo card without that pretty cover on it.", "created": 1617306917.0, "author": "BitterSprings", "score": 2, "replies": [{"body": "If you do any other challenges it could fit- I'm using it for the Popsugar 2021 challenge for \"Prettiest cover\"", "created": 1617308501.0, "author": "Kathulhu1433", "score": 2, "replies": [], "commentid": "gt2j79s"}], "commentid": "gt2ftf7"}], "commentid": "gt2cfhf"}, {"body": "It kind of could be though. There\u2019s references to magic and the ending is kind of ambiguous", "created": 1622631316.0, "author": "Blu3Stocking", "score": 1, "replies": [], "commentid": "h0asy5h"}], "commentid": "gt1surt"}, {"body": "Releases I've either preordered or recieved this year (first in series): \n\n**Already Out:** \n\nThe Unbroken by C.L Clarke (HM) \n\nWinter's Orbit by Everina Maxwell (HM)\n\nThe Mask of Mirrors by M.A Carrick\n\nBlood Heir by Ilona Andrews\n\n**Coming Out this Year:** \n\nEmpire of the Vampire by Jay Kristoff\n\nThe Jasmine Throne by Tasha Suri\n\nThe Light of Midnight Stars by Rena Rossner\n\nThe Witness for the Dead by Katherine Addison", "created": 1617297552.0, "author": "adventuresinplot", "score": 3, "replies": [], "commentid": "gt1va1a"}, {"body": "Hall of Smoke (HM) I believe", "created": 1617296180.0, "author": "dacottam", "score": 2, "replies": [], "commentid": "gt1s9sk"}, {"body": "I'm hoping for The Fall of Babel here. It doesn't fit hard mode though.", "created": 1617297505.0, "author": "ullsi", "score": 2, "replies": [], "commentid": "gt1v6f7"}, {"body": "The Eighth Key by Laura Weyr fits hard mode for this square! Full disclosure, I am her publisher at Journey Press.", "created": 1617301134.0, "author": "GideonMarcus", "score": 2, "replies": [{"body": "What's it about?", "created": 1617329628.0, "author": "GALACTIC-SAUSAGE", "score": 1, "replies": [], "commentid": "gt3n3ou"}], "commentid": "gt23ea7"}, {"body": "Fugitive Telemetry (Murderbot Diaries book 6) by Martha Wells is due at the end of this month. :D Obviously not hard mode though.", "created": 1617304628.0, "author": "Pseutri", "score": 2, "replies": [], "commentid": "gt2aui8"}, {"body": "My upcoming fourth book, By Demons Be Driven. Won't come out until October, though.", "created": 1617305640.0, "author": "ashearmstrong", "score": 2, "replies": [], "commentid": "gt2d0ig"}, {"body": "Hello. I'm a pretty new author James G. Robertson here. \n\nMy second book, The Ripper, is in the process of being made into an ensemble cast audiobook (30+ voice actors) and adding a few minor revisions to the ebook before releasing the paperback. This book will be in its final form in all formats come sometime in May. (All formats will be first published in 2021). \n\n If you have any questions, please feel free to message me!", "created": 1617328865.0, "author": "ThrowBackFF", "score": 2, "replies": [], "commentid": "gt3ltdk"}, {"body": "My latest novel ***Companion*** was published in March!\n\nWhen I have some more time to compile some, I'll expand this comment with recs for other authors' books.", "created": 1617309087.0, "author": "Luke_Matthews", "score": 1, "replies": [], "commentid": "gt2khlo"}, {"body": "Not hard mode, but if it happens, **Thorn of Emberlain** by Scott Lynch will be one of my most anticipated releases (tentatively scheduled for Nov 9 2021 I believe)", "created": 1617340262.0, "author": "Nidafjoll", "score": 1, "replies": [], "commentid": "gt433wx"}, {"body": "**A Master of Djinn** by P. Djeli Clark is coming out in May. It's his debut *full length* novel, if that counts?", "created": 1617344538.0, "author": "willalala", "score": 1, "replies": [], "commentid": "gt4893u"}, {"body": "I'm looking forward to reading **A Desolation Called Peace by Arkady Martine**, which came out on March 2. It's the sequel to A Memory Called Empire, so won't work for hard mode though.", "created": 1617376484.0, "author": "woolandwhiskey", "score": 1, "replies": [], "commentid": "gt5c0gx"}, {"body": "**Breach of Peace** by Daniel Greene (HM, novella)", "created": 1617478693.0, "author": "ConnorF42", "score": 1, "replies": [], "commentid": "gt9xkk8"}, {"body": "Does a book count as being published in 2021 if it was first published in English in 2021 but the original was published a couple of years before that?\n\nI'm interested in reading The Lost Village by Camilla Sten which is being published in English this year but was published in swedish in 2019, so I'm not sure if it would fit the published in 2021 bingo square.", "created": 1617841558.0, "author": "AngryGatekeeper", "score": 1, "replies": [], "commentid": "gtr45xb"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\nFor this square, they are: \n\nQuantum Cultivation by Jace Kang\n\nLegacy of Flame by Rebecca Bapaye\n\nSair\u014d's Claw by Virginia McClain\n\nThe Stars Within by Lena Alison Knight\n\nWindborn by Alex Bradshaw\n\nEyes Last Seen Dying by Colin Adams\n\nWizardoms by Jeffrey L. Kohanek\n\nThe Iron Crown by LL MacRae\n\nThrone of Ice and Ash by J. D. L. Rosell\n\nBy the Pact by Joanna Maciejewska\n\nStranger Back Home by EL Haines\n\nSword of Cho Nisi by D.L. Gardner\n\nDive: Endless Skies by Chris Reign\n\nDark Apprentice by Val Neil", "created": 1622825993.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0l5g11"}], "commentid": "gt1p6ip"}, {"body": "[removed]", "created": 1617795313.0, "author": "[deleted]", "score": 1, "replies": [{"body": "Please reply to the appropriate square with your recommendations.", "created": 1617798141.0, "author": "kjmichaels", "score": 1, "replies": [], "commentid": "gtohs2r"}], "commentid": "gtode85"}, {"body": "**Mystery Plot** \\- The main plot of the book centers around solving a mystery. **HARD MODE:** Not a primary world Urban Fantasy (secondary world urban fantasy is okay!)", "created": 1617294768.0, "author": "kjmichaels", "score": 6, "replies": [{"body": "**The Seven Deaths of Evelyn Hardcastle** by Stuart Turton \n\n**Sleeping Giants (H)** by Sylvain Neuvel\n\n**The Luminous Dead** by Caitlin Starling (I personally did not end up liking this book)\n\n**The Caves of Steel (H)** by Isaac Asimov (classic murder mystery but set in space with a robot detective partner)\n\n**Annihilation (H)** by Jeff VanderMeer", "created": 1617299641.0, "author": "fuckit_sowhat", "score": 12, "replies": [{"body": "I've already read Annihilation (and was actually coming here to rec it). Do you happen to know if Authority also fits?", "created": 1617305528.0, "author": "tarvolon", "score": 2, "replies": [{"body": "I would argue that all of the books fit for this square (though only the first one for HM) since Area X continues to be a mystery.", "created": 1617326624.0, "author": "fuckit_sowhat", "score": 2, "replies": [], "commentid": "gt3hygi"}], "commentid": "gt2crzd"}], "commentid": "gt2069a"}, {"body": "I think [Piraneisei](https://www.goodreads.com/book/show/50202953-piranesi?ac=1&amp;from_search=true&amp;qid=BcBw5bU8rX&amp;rank=1) by Susanna Clarke fits for hard mode\n\n[A Memory Called Empire](https://www.goodreads.com/book/show/37794149-a-memory-called-empire?ac=1&amp;from_search=true&amp;qid=t6k39L2cNj&amp;rank=1) by Arkady Martine fits hard mode too\n\n[Rivers of London](https://www.goodreads.com/book/show/9317452-rivers-of-london?ac=1&amp;from_search=true&amp;qid=JCr04MTCsY&amp;rank=1) by Ben Aaronovich (not hard mode)\n\n[Ninth House](https://www.goodreads.com/book/show/43263680-ninth-house?ac=1&amp;from_search=true&amp;qid=cBXogZNi8H&amp;rank=1) by Leigh Bardugo (not hard mode)", "created": 1617298441.0, "author": "Krilllian", "score": 13, "replies": [], "commentid": "gt1xc82"}, {"body": "**Six Wakes** by Mur Lafferty (hard)", "created": 1617297106.0, "author": "tarvolon", "score": 10, "replies": [], "commentid": "gt1ub0y"}, {"body": "What is a \u201csecondary world urban fantasy\u201d?", "created": 1617297684.0, "author": "triftmakesbadchoices", "score": 10, "replies": [{"body": "An urban fantasy book which is set in a secondary world, i.e. something other than our earth\n\nAn example would be Cast in Shadow, by Michelle Sagara; you could also argue for Tamora Pierce's Beka Cooper books", "created": 1617298622.0, "author": "balletrat", "score": 12, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Michelle Sagara**](https://www.reddit.com/r/Fantasy/comments/8gm1em/author_appreciation_michelle_sagara/) from user u/thequeensownfool_ &amp; AmethystOrator \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617298989.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt1yn7o"}], "commentid": "gt1xrfd"}, {"body": "Stuff that's set in an urban setting, but in a secondary world. Perdido Street Station by China Mieville would be a fairly well-known example.", "created": 1617299150.0, "author": "RevolutionaryCommand", "score": 10, "replies": [], "commentid": "gt1z0oj"}, {"body": "To a certain extent it doesnt really make sense, but I'd say usually when people are using it they're locating the spirit of urban fantasy as 'urban setting juxtaposing the fantastical with the mundanities and realities of city/modern life'. Which can make sense in a secondary world. So like, things like Perdido Street Station, Carnival Row, the Craft Sequence etc. All take place in secondary worlds but there's very much a connection of the urban setting to real modern urban settings as part of the essence of the work.", "created": 1617298875.0, "author": "daavor", "score": 7, "replies": [], "commentid": "gt1ydsu"}, {"body": "The Elantra series by Michelle West is secondary world urban fantasy. Has all the trappings of urban fantasy but takes place in a secondary world. \n\nIt also fits this square.", "created": 1617298542.0, "author": "tarvolon", "score": 4, "replies": [], "commentid": "gt1xkr1"}, {"body": "The setting is a big fantasy city with urban fantasy tropes like PI / cop MC and 1st person or close 3rd person point of view.\n\nExamples:\n\nMichelle Sagara's Elantra Chronicles\n\nCraft Sequence by Max Gladstone\n\nGarrett PI by Glen Cook\n\nHawke &amp; Fisher books by Simon R. Green", "created": 1617301183.0, "author": "Arette", "score": 4, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Michelle Sagara**](https://www.reddit.com/r/Fantasy/comments/8gm1em/author_appreciation_michelle_sagara/) from user u/thequeensownfool_ &amp; AmethystOrator \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617301363.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt23vrp"}], "commentid": "gt23i3u"}], "commentid": "gt1vkgb"}, {"body": "All of these work for hard mode:\n\n**Priestess of Ishana** by Judith Starkson. Set in an alt-Hittite bronze age city, a priestess must unravel a conspiracy against the King's brother in time to stop his execution by her father\n\n**Chaos Trims My Beard** by Brett Herman. An unemployed half-dwarf and a ratman with a hat have to solve a murder.\n\nThe very cute *Psychic Cat Mysteries* novella series by SM Reine starting with **The Cat of Amontillado** feature a cat who is a were-human, helping to protect his mommies and town by teaming up with the zombie sheriff to solve crimes.\n\n**The Imaginary Corpse** by Tyler Hayes. A triceratops detective has to solve a crime spree affecting the realm of ex-imaginary friends.", "created": 1617300470.0, "author": "StarlightEstel", "score": 10, "replies": [], "commentid": "gt21z73"}, {"body": "* Gideon the Ninth by Tamsyn Muir (HM)\n* City of Stairs by Robert Jackson Bennet (HM)\n* Seraphina by Rachel Hartmen (HM)\n* The Monstrumologist by Rick Yancey (HM)\n* October Daye by Seanan McGuire\n* Kate Daniels by Ilona Andrews", "created": 1617301595.0, "author": "Dragon_Lady7", "score": 9, "replies": [{"body": "&gt;Gideon the Ninth by Tamsyn Muir (HM)\n\nDo you know if *Harrow* fits too?", "created": 1617328814.0, "author": "GALACTIC-SAUSAGE", "score": 2, "replies": [{"body": "Not as much as Gideon but I suppose an argument could be made. The thing is that even though some mysterious things things are happening throughout Harrow, she\u2019s not really trying to solve them.", "created": 1617328916.0, "author": "Dragon_Lady7", "score": 2, "replies": [], "commentid": "gt3lwjv"}], "commentid": "gt3lq7p"}], "commentid": "gt24dhn"}, {"body": "For fantasy options fitting hard mode, I've enjoyed **City of Stairs** by Robert Jackson Bennett, **Three Parts Dead** by Max Gladstone and **Johannes Cabal the Detective** by Jonathan L. Howard (I think that last one is sufficiently alternate history to count?). \n\nThere are also plenty of interesting sci-fi/speculative mysteries out there, like **Unholy Land** by Lavie Tidhar, **The City &amp; the City** by China Mieville and **The Tea Master and the Detective** by Aliette de Bodard.", "created": 1617299387.0, "author": "diazeugma", "score": 8, "replies": [{"body": "Do you know if any of the sequels to City of Stairs would fit for HM?", "created": 1617718606.0, "author": "esteboix", "score": 1, "replies": [{"body": "Yes, they both feature a mystery.", "created": 1617718927.0, "author": "diazeugma", "score": 1, "replies": [], "commentid": "gtkm58c"}], "commentid": "gtklg1w"}, {"body": "&gt;City\n\nWould The City &amp; The City count as HM?", "created": 1617894571.0, "author": "lucidrose", "score": 1, "replies": [{"body": "Yeah, I don't think it would be classified as urban fantasy, since it doesn't have the typical magic trappings. It's more like social science fiction, if I recall correctly.", "created": 1618071258.0, "author": "diazeugma", "score": 1, "replies": [{"body": "Awesome, think I may use, then. Thanks!", "created": 1618084279.0, "author": "lucidrose", "score": 1, "replies": [], "commentid": "gu2pwcr"}], "commentid": "gu2080l"}], "commentid": "gttgn65"}], "commentid": "gt1zl3m"}, {"body": "Some of the Watch novels from the Discworld are certainly mysteries. Off the top of my head *Men at Arms*, *Feet of Clay* and *Thud!* should count.", "created": 1617296856.0, "author": "BitterSprings", "score": 7, "replies": [], "commentid": "gt1tr6l"}, {"body": "The Strange Case of the Alchemist's Daughter by Theodora Goss was really good.", "created": 1617297309.0, "author": "DaphneFallz", "score": 6, "replies": [{"body": "do you know if the sequels are also mysteries?", "created": 1617331545.0, "author": "bluuuuuuuue", "score": 1, "replies": [{"body": "Yes definitely. Both the sequels have kidnappings they have to solve.", "created": 1617332594.0, "author": "DaphneFallz", "score": 1, "replies": [], "commentid": "gt3s2jd"}], "commentid": "gt3qclj"}], "commentid": "gt1ur65"}, {"body": "**Paladin\u2019s Grace** by T. Kingfisher works here.", "created": 1617311316.0, "author": "CurvatureTensor", "score": 5, "replies": [], "commentid": "gt2p9tw"}, {"body": "**Blood Price (and the entire series) by Tanya Huff** \\- old school urban fantasy, just as the trend of PI urban fantasy started. Set in Toronto with a visually impaired heroine. Was a TV show in Canada.\n\n**Delia's Shadow (and the trilogy) by Jaime Lee Moyer** \\- Turn-of-the-20th century fantasy set in San Francisco, solving the murder of a ghost. Melancholy, literary feel to it. Perfect for Robin McKinley fans IMO.\n\n**Seeing the Light (and the entire Marie Jenner series) by E. C. Bell** \\- Alberta, Canada setting about a woman who sees ghosts and helps them cross to the other side. Ends up getting into trouble and solving crimes.\n\n**Head On by John Scalzi** \\- Basically, robot detectives.\n\n**Spirit Caller series by moi** \\- Newfoundland-set \"urban\" fantasy, with snarky ghosts. IMO Set 4-6 suit better than Set 1-3, but 1-3 works within the spirit of the square. (Get it? Spirit? Ha!)", "created": 1617312535.0, "author": "KristaDBall", "score": 4, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Tanya Huff**, Pioneer of Urban Fantasy and Comedic Chameleon (Plus Free Book Giveaways!)](https://www.reddit.com/r/Fantasy/comments/5owaa8/author_appreciation_tanya_huff_pioneer_of_urban/?st=iy4cw3uz&amp;sh=b46a8303) from user u/lannadelarosa \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617312789.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt2sce4"}], "commentid": "gt2rt6y"}, {"body": "**The Eyre Affair** by Jasper Fforde fits Hard Mode", "created": 1617301152.0, "author": "ullsi", "score": 4, "replies": [{"body": "The ***Nursery Crime*** series by Jasper Fforde would also work.", "created": 1617310436.0, "author": "paperwhites", "score": 5, "replies": [], "commentid": "gt2ne6n"}], "commentid": "gt23fqf"}, {"body": "**Magic for Liars** by Sarah Gailey", "created": 1617302744.0, "author": "lightning_fire", "score": 5, "replies": [], "commentid": "gt26se6"}, {"body": "Leviathan Wakes (or really most Expanse novels) by James SA Corey", "created": 1617338869.0, "author": "acexacid", "score": 5, "replies": [], "commentid": "gt41at8"}, {"body": "Sanctuary by V.V. James, not HM.", "created": 1617296850.0, "author": "kalina789", "score": 3, "replies": [], "commentid": "gt1tqol"}, {"body": "* **Breach of Peace** by Daniel Green\n* **Shadow of a Dead God** by Patrick Samphire\n* **The Helm of Midnight** by Marina J. Lostetter", "created": 1617299150.0, "author": "barb4ry1", "score": 3, "replies": [], "commentid": "gt1z0oh"}, {"body": "I have heard great things about **The Imaginary Corpse**, which I believe works here.", "created": 1617300469.0, "author": "tarvolon", "score": 3, "replies": [], "commentid": "gt21z5o"}, {"body": "The City and The City by China Mieville - HM\n\nBlood and Obsidian trilogy by Aliette du Bodard - HM (I think)\n\nThe Vampire Knitting Club by Nancy Warren\n\nSleeping Giant by Sylvain Neuvel", "created": 1617302402.0, "author": "xenizondich23", "score": 3, "replies": [], "commentid": "gt2627p"}, {"body": "A Demon in the Desert by me, works for hard mode too.", "created": 1617305585.0, "author": "ashearmstrong", "score": 3, "replies": [], "commentid": "gt2cwbr"}, {"body": "My first novel ***Construct*** centers around a mystery plot. And, since it's a secondary world fantasy, it qualifies for Hard Mode!\n\nWhen I have some more time to compile some, I'll expand this comment with recs for other authors' books.", "created": 1617309203.0, "author": "Luke_Matthews", "score": 3, "replies": [], "commentid": "gt2kqlg"}, {"body": "**Piranesi** by Susanna Clarke (kinda)\n\n**Stormblood** by Jeremy Szal (HM)\n\n**Balam, Spring** by Travis M. Riddle (me) (HM)", "created": 1617316357.0, "author": "eightslicesofpie", "score": 3, "replies": [], "commentid": "gt2zg3h"}, {"body": "I'm listening to Book #2 of the Fetch Phillips Archives by Luke Arnold (read by Luke Arnold), \"Dead Man in a Ditch.\"\n\nI think it fits this square in hard mode.  It's a secondary world UF novel with a mystery. Fetch is looking into a series of murders that seem to have been done using magic, which is a neat trick since the source of magic in that world was destroyed about 6 years before.\n\nIt's an excellent series so far &amp; Luke Arnold is a kick ass narrator.\n\nI'm about 20% into the book &amp; even this early on, I'm enjoying this book even more than the first novel in the series, \"The Last Smile in Sunder City.\"", "created": 1617296388.0, "author": "spike31875", "score": 2, "replies": [], "commentid": "gt1sqjb"}, {"body": "Josie Jaffrey's new Seekers series has a few mystery threads in every book. The first, May Day, is already out. This recommendation isn't HARD MODE. Also counts for the self-published square.", "created": 1617296923.0, "author": "Endalia", "score": 2, "replies": [], "commentid": "gt1twi1"}, {"body": "Probably not an obvious choice, but Hope Mirrlees' *Lud-in-the-Mist* fits hard mode!", "created": 1617298965.0, "author": "Harkale-Linai", "score": 2, "replies": [], "commentid": "gt1yl5l"}, {"body": "* **The Conductors** by Nicole Glover\n* **Witchmark** by CL Polk HM (but only the first book I'd say)\n* **The Haunting of Tram Car 015** by P. Djeli Clark\n* **Of Dragons, Feasts and Murders** by Aliette de Bodard (I think the others from Dominion of the Fallen too, but still on my TBR)", "created": 1617299266.0, "author": "Dianthaa", "score": 2, "replies": [], "commentid": "gt1zavz"}, {"body": "**The Conductors** by Nicole Glover (easy mode, also 2021 square)", "created": 1617299604.0, "author": "mollyec", "score": 2, "replies": [], "commentid": "gt2038n"}, {"body": "- **City of Lies** by Sam Hawke (hard)\n\n- **The Perfect Assassin** by K.A. Doore (hard)\n\n- **Witchmark** by C.L. Polk (hard)\n\n- **The Seven Deaths of Evelyn Hardcastle** by Stuart Turton \n\n- **The Conductors** by Nicole Glover", "created": 1617300862.0, "author": "cubansombrero", "score": 2, "replies": [], "commentid": "gt22tn8"}, {"body": "The Rook by Daniel O'Malley", "created": 1617301399.0, "author": "ullsi", "score": 2, "replies": [], "commentid": "gt23yku"}, {"body": "**Drown the Witch** by Michael Coolwood (HM and self-pub)  \n**Descendant of the Crane** by Joan He (HM)  \n**The 7 1/2 Deaths of Evelyn Hardcastle** by Stuart Turton (HM)  \n**A Tale of Time City** by Diana Wynne Jones (HM)\n\n**The Real-Town Murders** by Adam Roberts (I think **Jack Glass** by Adam Roberts would also count)  \n**Mrs Pettigrew Sees a Ghost** by Katherine Hayton (self-pub)", "created": 1617301951.0, "author": "hairymclary28", "score": 2, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Diana Wynne Jones**](https://www.reddit.com/r/Fantasy/comments/9z89ao/author_appreciation_diana_wynne_jones/) from user u/balletrat \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617302560.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt26e0x"}], "commentid": "gt2547u"}, {"body": "**Pale** by Wildbow. Still ongoing, but it looks like it's nearing the end.", "created": 1617303696.0, "author": "gyroda", "score": 2, "replies": [], "commentid": "gt28u89"}, {"body": "* **The Night Tiger** by Yangsze Choo\n\n* **Zoo City** by Lauren Beukes\n\n* **Broken Monsters** by Lauren Beukes\n\n* **The 7 1/2 Deaths of Evelyn Hardcastle** by Stuart Turton\n\n* **The Lost Book of Adana Moreau** by Michael Zapata\n\n* **The Lie Tree** by Frances Hardinge\n\n* **Cuckoo Song** by Frances Hardinge\n\n* **The Seventh Perfection** by Daniel Polansky (HM)", "created": 1617304073.0, "author": "perditorian", "score": 2, "replies": [], "commentid": "gt29naz"}, {"body": "Pretty much all of Glen Cook's **Garrett, P.I.** series would fit, given that they're loosely based off Rex Stout noir detective novels.  I'd count them all for hard mode, too, since they're secondary world urban fantasy.", "created": 1617314939.0, "author": "Phyrkrakr", "score": 2, "replies": [], "commentid": "gt2wob2"}, {"body": "All hard mode:  \n\n* **Witchmark** by C.L. Polk (only book 1)  \n* **The Seventh Perfection** by Daniel Polansky   \n* ...maybe **Planetfall** by Emma Newman? But it's been so long since I read it I'm not sure.  \n* **The Imaginary Corpse** by Tyler Hayes  \n* **City of Lies** by Sam Hawke  \n* **City of Stairs** by Robert Jackson Bennett  \n* **Touch** by Claire North (maybe?)", "created": 1617324135.0, "author": "improperly_paranoid", "score": 2, "replies": [{"body": "&gt; Touch by Claire North (maybe?)\n\nI'd count it!", "created": 1617423000.0, "author": "Tigrari", "score": 2, "replies": [], "commentid": "gt7q653"}, {"body": "Yes hard mode Planetfall. Books 1, 3 and 4 are hard mode. 2 is easy mode", "created": 1617729005.0, "author": "WWTPeng", "score": 2, "replies": [], "commentid": "gtl90ey"}], "commentid": "gt3doe2"}, {"body": "The forthcoming Murderbot Diary, **Fugitive Telemetry** by Martha Wells is being marketed as 'Murderbot solves a mystery'. I read the preview chapter and it definitely seems like the main plot.", "created": 1617345432.0, "author": "willalala", "score": 2, "replies": [], "commentid": "gt497oi"}, {"body": "Hard mode: *Chronicles of Elantra* by Michelle Sagara", "created": 1617367223.0, "author": "ThisIsTheBibliophile", "score": 2, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation: **Michelle Sagara**](https://www.reddit.com/r/Fantasy/comments/8gm1em/author_appreciation_michelle_sagara/) from user u/thequeensownfool_ &amp; AmethystOrator \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617367368.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt4w00x"}], "commentid": "gt4vsaa"}, {"body": "Somehow I have seen none of the ones that immediately came to mind suggested yet. For hard mode:\n\n* *Shadowfall*, James Clemens. Secondary world urban fantasy. Someone killed a god and framed our protagonist.\n* *The Broken Kingdoms*, which is the second book of N.K. Jemisin's Inheritance trilogy. Someone is killing a lot of gods.\n* Chronicles of Amber, Roger Zelazny. Both the Corwin and Merlin Cycles have a mystery as main plot (through most of the books, I think, though more concentrated toward the end of the Corwin Cycle and the beginning of the Merlin Cycle).\n* *Hard-Boiled Wonderland and the End of the World*, Haruki Murakami. As the name suggests, a hard-boiled detective novel in Murakami's usual magical realist (and slightly \\[maybe more than slightly\\] insane) style. It is sort of primary-world, but doesn't have the usual trappings of the urban fantasy genre; I think it fits the spirit of hard mode.\n* Peter F. Hamilton has a couple that I think would work. *Great North Road* certainly does, *Pandora's Star* probably does, and The Night's Dawn trilogy is a possibility.\n\nAnd easy mode:\n\n* The early Dresden Files, Jim Butcher. I feel like they become less mystery-focused after the first three or so, though it does oscillate somewhat.\n* Bobby Dollar, Tad Williams. Urban fantasy, angels, devils, hell, heaven, etc.\n* Diana Tregarde, Mercedes Lackey. Standard urban fantasy.\n* Boundary Magic, Melissa F. Olson, I think along with the rest of the interconnected series.", "created": 1617383151.0, "author": "smartflutist661", "score": 2, "replies": [{"body": "r/Fantasy's [Author Appreciation series](https://www.reddit.com/r/Fantasy/wiki/authorappreciation) has posts for an author you mentioned  \n\n* [Author Appreciation Thread: **Roger Zelazny**](https://www.reddit.com/r/Fantasy/comments/5d96ap/author_appreciation_thread_roger_zelazny/?st=ivm72j5d&amp;sh=9ecd534a) from user u/CommodoreBelmont \n* [Author Appreciation: **Mercedes Lackey**](https://www.reddit.com/r/Fantasy/comments/91hk3y/author_appreciation_mercedes_lackey/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=u_lyrrael) from user u/lyrrael_ \n\n\n---\n\n ^(I am a bot bleep! bloop! Contact my ~~master~~ creator /u/LittlePlasticCastle with any questions or comments.)", "created": 1617383330.0, "author": "RedditFantasyBot", "score": 1, "replies": [], "commentid": "gt5pukc"}], "commentid": "gt5phd8"}, {"body": "Looks like the forthcoming sequel to Katherine Addison's **The Goblin Emperor**, **Witness for the Dead**, will fit this for hard mode. Really looking forward to getting my hands on it!", "created": 1617466397.0, "author": "KristiAsleepDreaming", "score": 2, "replies": [{"body": "The Goblin Emperor is on my to-read list. Would it fit hard mode, you think?", "created": 1618121176.0, "author": "PepperoniFire", "score": 1, "replies": [{"body": "The Goblin Emperor itself? It\u2019s secondary world, but while there is a mystery assassination, I don\u2019t think it\u2019s central enough to the plot.", "created": 1618164568.0, "author": "KristiAsleepDreaming", "score": 2, "replies": [{"body": "Gooot it, thanks!", "created": 1618179768.0, "author": "PepperoniFire", "score": 1, "replies": [], "commentid": "gu6xikj"}], "commentid": "gu63f2e"}], "commentid": "gu4gno9"}], "commentid": "gt999ud"}, {"body": "Thanks for allowing resident authors to rec their works.  [Harpyness is Only Skin Deep](https://www.goodreads.com/book/show/53332248-harpyness-is-only-skin-deep) qualifies for mystery plot, hard mode.", "created": 1617566040.0, "author": "Kululu17", "score": 2, "replies": [], "commentid": "gtdnaz3"}, {"body": "Leviathan Wakes (Expanse #1) definitely is a mystery, while being a space opera. The whole &gt;!mystery of the protomolecule!&lt; is the main plot for the first book.", "created": 1617751257.0, "author": "devilsangel360live", "score": 2, "replies": [], "commentid": "gtmm1zi"}, {"body": "Breach of Peace by Daniel Greene?", "created": 1617296144.0, "author": "dacottam", "score": 2, "replies": [], "commentid": "gt1s6w5"}, {"body": "Would the third Mage Errant book (A Traitor in Skyhold) count for hard mode for this? I'm only a couple of chapters in but it looks like it would.", "created": 1617299164.0, "author": "Udy_Kumra", "score": 1, "replies": [], "commentid": "gt1z1ul"}, {"body": "[Benighted](https://www.goodreads.com/book/show/362956.Benighted) by Kit Whitfield", "created": 1617300220.0, "author": "LadyCardinal", "score": 1, "replies": [], "commentid": "gt21g4e"}, {"body": "* The ***Brothers Grimm Mystery*** series by P.J. Brackston (Gretel from the fairy tale is now 35 and works as a private investigator)\n* ***Ironfoot*** by Dave Duncan (Durwin who can do magic is sent to investigate a sudden death that might be from black magic)\n\nHard Mode:\n\n* ***Widow's Welcome*** by D.K. Fields (Detective Cora Gorderheim finds a body with its lips stitched together and investigates)", "created": 1617311129.0, "author": "paperwhites", "score": 1, "replies": [], "commentid": "gt2ovym"}, {"body": "* [**The Death of the Necromancer**](https://www.goodreads.com/book/show/321357) by Martha Wells (HM)\n* [**The Tea Master and the Detective**](https://www.goodreads.com/book/show/36686547) by Aliette de Bodard (HM)\n* [**The Thirteenth Tale**](https://www.goodreads.com/book/show/40440) by Diane Setterfield\n* [**Meanwhile, at the Dernstrum Institute...**](https://www.goodreads.com/book/show/52869650) by Catherine Griffin\n* [**The Half Killed**](https://www.goodreads.com/book/show/25668335) by Quenby Olson", "created": 1617312318.0, "author": "Amarthien", "score": 1, "replies": [], "commentid": "gt2rd25"}, {"body": "Hard Mode: **The Invisible Library** by Genevieve Cogman", "created": 1617323547.0, "author": "xenzua", "score": 1, "replies": [], "commentid": "gt3cn7a"}, {"body": "I put them under genre mashup too, but:\n\n**The Spirit Lens** by Carol Berg (HM)\n\n**A Murder of Mages** by Marshall Ryan Maresca (HM)\n\nAlso **Elatsoe** by Darcie Little Badger should work too, but not hard mode. Highly recommend it though! It's a sweet YA book featuring an #ownvoices ace Apache character, and she has a ghost dog as a pet, so what's not to love.", "created": 1617380306.0, "author": "sophia_s", "score": 1, "replies": [], "commentid": "gt5johw"}, {"body": "[The Camaro Murders](https://www.amazon.com/dp/B077W12M7R) and [From Legend](https://www.amazon.com/dp/B07PGSDVC9), both by Ian Lewis", "created": 1617394506.0, "author": "IanLewisFiction", "score": 1, "replies": [], "commentid": "gt6c7wu"}, {"body": "The Library at Mount Char qualifies, but not for HM.", "created": 1617403571.0, "author": "DamnitRuby", "score": 1, "replies": [], "commentid": "gt6tgvt"}, {"body": "Someone please correct me if this isn't right, but if I recall correctly **The Emperor's Blades** by Brian Staveley, which is the first book of the Chronicle of the Unhewn Throne trilogy, has a semi big mystery plot in one of the POVs! It's not urban fantasy, so it's also a book that fits hard mode!", "created": 1617452519.0, "author": "cartradio", "score": 1, "replies": [], "commentid": "gt8lz97"}, {"body": "The Dawnhounds by Sascha Stronach fits for Hard Mode: secondary world UF.", "created": 1617882218.0, "author": "Arifel", "score": 1, "replies": [], "commentid": "gtsrvi5"}, {"body": "Would Kafka on the Shore by Murakami work? I haven't read it yet, but it certainly seems to be centered around a mystery based on the Goodreads description.", "created": 1620133964.0, "author": "stadinkundi", "score": 1, "replies": [], "commentid": "gwwibs6"}, {"body": "I compiled a list of SPFBO7 books that fit these BINGO Squares.\n\nFor this square, they are: \n\nLady's Vago's Malediction by AKM Beach\n\nThe Demons We See by Krista D Ball\n\nKept from Cages by Phil Williams\n\nThe Iron Crown by LL MacRae\n\nThrone of Ice and Ash by J. D. L. Rosell\n\nStranger Back Home by EL Haines\n\nDeath by Miracle by Fowler Brown", "created": 1622825611.0, "author": "s_kaeth", "score": 1, "replies": [], "commentid": "h0l4jxe"}], "commentid": "gt1p4ai"}, {"body": "Is the Airtable taken down? I'm no longer able to reach it and I've been using it as a reference :(", "created": 1621244757.0, "author": "BlackjackCF", "score": 1, "replies": [{"body": "It apparently got too big to maintain as one list and is now split into two parts. I've edited the original post with the new links.", "created": 1621252588.0, "author": "kjmichaels", "score": 1, "replies": [{"body": "Thank you!", "created": 1621289782.0, "author": "BlackjackCF", "score": 1, "replies": [], "commentid": "gyhzpge"}], "commentid": "gyfoaia"}], "commentid": "gyfe1oq"}, {"body": "[removed]", "created": 1623523216.0, "author": "[deleted]", "score": 1, "replies": [{"body": "Please comment your recs under the appropriate categories.", "created": 1623524472.0, "author": "kjmichaels", "score": 1, "replies": [], "commentid": "h1jks45"}], "commentid": "h1jic6o"}, {"body": "[removed]", "created": 1617372443.0, "author": "[deleted]", "score": 1, "replies": [{"body": " Please post your recommendations under the appropriate top-level comments.", "created": 1617377565.0, "author": "kjmichaels", "score": 1, "replies": [{"body": "Sorry about that\u2014I misunderstood what you meant about top level comments. I\u2019ll fix this in a few.", "created": 1617392973.0, "author": "IanLewisFiction", "score": 2, "replies": [], "commentid": "gt696tf"}], "commentid": "gt5e61g"}], "commentid": "gt54bei"}, {"body": "[removed]", "created": 1617391323.0, "author": "[deleted]", "score": 1, "replies": [{"body": "Please make your recommendations as replies to the appropriate squares.", "created": 1617391404.0, "author": "kjmichaels", "score": 1, "replies": [], "commentid": "gt660wi"}], "commentid": "gt65uy3"}]]'))
    
def search(key, data, path = None):
    path = path or []
    
    if isinstance(data, list):
        for i, child in enumerate(data):
            yield from search(key, child, path)
    elif isinstance(data, dict):
        if body := data.get('body'):
            yield from search(key, body, path)
            yield from search(key, data.get('replies'), path + [body])
    elif isinstance(data, str):
        if key.lower() in data.lower():
            yield path + [data]

def top_level_search(key):
    results = set()
    for result in search(key, data):
        results.add(result[0])
    return list(sorted(results))

for arg in sys.argv[1:]:
    print(arg)
    for result in top_level_search(arg):
        print(result)
    print()
